{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajat\\\\Desktop\\\\Graph_Visualizer\\\\frontend\\\\src\\\\components\\\\ResultHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultHistory({\n  onClose,\n  onLoadResult\n}) {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  // ✅ FIXED: Use environment variable instead of hardcoded localhost\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  useEffect(() => {\n    fetchHistory();\n  }, [filter, page]);\n\n  // Fetch algorithm execution history\n  const fetchHistory = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Authentication required. Please login again.');\n        setLoading(false);\n        return;\n      }\n\n      // 🔧 FIXED: Use environment variable instead of hardcoded localhost\n      const response = await fetch(`${API_BASE_URL}/api/graphs/algorithms/results?algorithm=${filter}&limit=10&page=${page}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          setError('Session expired. Please login again.');\n          return;\n        }\n        throw new Error(`Failed to fetch history: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        setHistory(data.data || []);\n        setTotalPages(data.totalPages || 1);\n      } else {\n        setError(data.error || 'Failed to load history');\n      }\n    } catch (error) {\n      console.error('Error fetching history:', error);\n      setError('Failed to load history. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete algorithm result\n  const handleDeleteResult = async resultId => {\n    if (!window.confirm('Are you sure you want to delete this result?')) {\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Authentication required. Please login again.');\n        return;\n      }\n\n      // 🔧 FIXED: Use environment variable instead of hardcoded localhost\n      const response = await fetch(`${API_BASE_URL}/api/graphs/algorithms/results/${resultId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          setError('Session expired. Please login again.');\n          return;\n        }\n        throw new Error(`Failed to delete result: ${response.status}`);\n      }\n\n      // Remove from local state immediately for better UX\n      setHistory(history.filter(h => h._id !== resultId));\n\n      // Optionally refetch to ensure consistency\n      // fetchHistory();\n    } catch (error) {\n      console.error('Error deleting result:', error);\n      setError('Failed to delete result. Please try again.');\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatExecutionTime = time => {\n    return time < 1000 ? `${time}ms` : `${(time / 1000).toFixed(2)}s`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50 p-2 sm:p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \\r w-full sm:w-[95%] md:w-[90%] lg:w-[85%] max-w-5xl\\r max-h-[95vh] sm:max-h-[90vh] overflow-y-auto shadow-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4 sm:mb-6 pb-2 border-b border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-blue-600 text-xl sm:text-2xl lg:text-3xl font-bold flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: \"\\uD83D\\uDCC8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), \"Algorithm Execution History\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-xl sm:text-2xl text-gray-600 hover:text-gray-800 \\r p-1 rounded-full hover:bg-gray-100 transition-colors\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600 mr-2\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-800 text-sm sm:text-base\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchHistory,\n          className: \"mt-3 px-4 py-2 bg-red-600 text-white rounded-lg text-sm\\r hover:bg-red-700 transition-colors\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-4 mb-4 sm:mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-semibold text-gray-700 text-sm sm:text-base\",\n          children: \"Filter by Algorithm:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => {\n            setFilter(e.target.value);\n            setPage(1);\n          },\n          className: \"w-full sm:w-auto px-3 py-2 border border-gray-300 rounded-lg \\r text-sm sm:text-base focus:ring-2 focus:ring-blue-300\\r hover:border-gray-400 transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Algorithms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dijkstra\",\n            children: \"Dijkstra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bellman_ford\",\n            children: \"Bellman-Ford\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"floyd_warshall\",\n            children: \"Floyd-Warshall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"prims\",\n            children: \"Prim's\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"kruskal\",\n            children: \"Kruskal's\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center py-12 sm:py-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-6 sm:w-8 h-6 sm:h-8 mb-3 sm:mb-4 border-2 sm:border-4 \\r border-blue-600 border-t-transparent rounded-full animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-sm sm:text-base\",\n          children: \"Loading your algorithm history...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : history.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center py-12 sm:py-16 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-16 sm:w-20 h-16 sm:h-20 mb-4 rounded-full bg-gray-100 flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl sm:text-3xl\",\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg sm:text-xl font-semibold text-gray-800 mb-2\",\n          children: \"No Algorithm History Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-sm sm:text-base max-w-md mb-2\",\n          children: filter !== 'all' ? `No ${filter} algorithm results found.` : 'No algorithm execution history found.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-sm\",\n          children: \"Run some algorithms to see them here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-blue-800 text-sm sm:text-base font-medium flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), \"Found \", history.length, \" result\", history.length !== 1 ? 's' : '', filter !== 'all' && ` for ${filter.replace('_', '-').toUpperCase()}`, totalPages > 1 && ` (Page ${page} of ${totalPages})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3 sm:space-y-4\",\n          children: history.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg sm:rounded-xl \\r p-3 sm:p-4 lg:p-5 bg-gray-50 hover:bg-gray-100\\r transition-colors duration-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col sm:flex-row justify-between items-start gap-3 sm:gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1 min-w-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-gray-800 text-base sm:text-lg font-semibold mb-2 sm:mb-3 truncate\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"bg-blue-600 text-white px-2 py-1 rounded text-xs sm:text-sm font-bold mr-2\",\n                    children: result.algorithm.replace('_', '-').toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this), result.graphName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-4 mb-2 sm:mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg p-2 text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm sm:text-base font-bold text-gray-900\",\n                      children: result.source || 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: \"Source\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg p-2 text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm sm:text-base font-bold text-gray-900\",\n                      children: result.nodeCount || 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: \"Nodes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg p-2 text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm sm:text-base font-bold text-gray-900\",\n                      children: result.edgeCount || 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: \"Edges\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-white rounded-lg p-2 text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm sm:text-base font-bold text-blue-600\",\n                      children: formatExecutionTime(result.executionTime || 0)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-xs text-gray-500\",\n                      children: \"Time\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs sm:text-sm text-gray-400\",\n                  children: [\"Executed: \", formatDate(result.createdAt)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2 w-full sm:w-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onLoadResult && onLoadResult(result),\n                  className: \"flex-1 sm:flex-none px-3 sm:px-4 py-2 bg-blue-600 text-white \\r rounded-lg text-sm font-medium hover:bg-blue-700\\r transition-colors duration-200\",\n                  children: \"\\uD83D\\uDCCB View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteResult(result._id),\n                  className: \"flex-1 sm:flex-none px-3 sm:px-4 py-2 bg-red-500 text-white \\r rounded-lg text-sm font-medium hover:bg-red-600\\r transition-colors duration-200\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)\n          }, result._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row justify-center items-center gap-3 sm:gap-4 mt-6 sm:mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPage(page - 1),\n            disabled: page === 1,\n            className: `w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg \n                             text-sm sm:text-base font-medium transition-colors\n                             ${page === 1 ? 'bg-gray-100 text-gray-400 cursor-not-allowed' : 'bg-white text-gray-700 hover:bg-gray-100'}`,\n            children: \"\\u2190 Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500 text-sm sm:text-base\",\n            children: [\"Page \", page, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPage(page + 1),\n            disabled: page === totalPages,\n            className: `w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg \n                             text-sm sm:text-base font-medium transition-colors\n                             ${page === totalPages ? 'bg-gray-100 text-gray-400 cursor-not-allowed' : 'bg-white text-gray-700 hover:bg-gray-100'}`,\n            children: \"Next \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultHistory, \"+EFonSlzdDybPf5XlE+N9d+pFag=\");\n_c = ResultHistory;\nexport default ResultHistory;\n\n// import React, { useState, useEffect } from 'react';\n\n// function ResultHistory({ onClose, onLoadResult }) {\n//   const [history, setHistory] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [filter, setFilter] = useState('all');\n//   const [page, setPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(1);\n\n//   useEffect(() => {\n//     fetchHistory();\n//   }, [filter, page]);\n\n//   // Fetch algorithm execution history\n//   const fetchHistory = async () => {\n//     try {\n//       setLoading(true);\n//       setError(null);\n\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         setError('Authentication required. Please login again.');\n//         setLoading(false);\n//         return;\n//       }\n\n//       const response = await fetch(\n//         `http://localhost:5000/api/graphs/algorithms/results?algorithm=${filter}&limit=10&page=${page}`,\n//         {\n//           method: 'GET',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${token}`\n//           }\n//         } \n//       );\n\n//       if (!response.ok) {\n//         if (response.status === 401) {\n//           localStorage.removeItem('token');\n//           setError('Session expired. Please login again.');\n//           return;\n//         }\n//         throw new Error(`Failed to fetch history: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n\n//       if (data.success) {\n//         setHistory(data.data || []);\n//         setTotalPages(data.totalPages || 1);\n//       } else {\n//         setError(data.error || 'Failed to load history');\n//       }\n//     } catch (error) {\n//       console.error('Error fetching history:', error);\n//       setError('Failed to load history. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // Delete algorithm result\n//   const handleDeleteResult = async (resultId) => {\n//     if (!window.confirm('Are you sure you want to delete this result?')) {\n//       return;\n//     }\n\n//     try {\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         setError('Authentication required. Please login again.');\n//         return;\n//       }\n\n//       // 🔧 FIXED: Updated URL to match single controller approach\n//       const response = await fetch(\n//         `http://localhost:5000/api/graphs/algorithms/results/${resultId}`,\n//         { \n//           method: 'DELETE',\n//           headers: {\n//             'Authorization': `Bearer ${token}`\n//           }\n//         }\n//       );\n\n//       if (!response.ok) {\n//         if (response.status === 401) {\n//           localStorage.removeItem('token');\n//           setError('Session expired. Please login again.');\n//           return;\n//         }\n//         throw new Error(`Failed to delete result: ${response.status}`);\n//       }\n\n//       // Remove from local state immediately for better UX\n//       setHistory(history.filter(h => h._id !== resultId));\n\n//       // Optionally refetch to ensure consistency\n//       // fetchHistory();\n//     } catch (error) {\n//       console.error('Error deleting result:', error);\n//       setError('Failed to delete result. Please try again.');\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const formatExecutionTime = (time) => {\n//     return time < 1000 ? `${time}ms` : `${(time / 1000).toFixed(2)}s`;\n//   };\n\n//   return (\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50 p-2 sm:p-4\">\n//       <div className=\"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \n//                       w-full sm:w-[95%] md:w-[90%] lg:w-[85%] max-w-5xl\n//                       max-h-[95vh] sm:max-h-[90vh] overflow-y-auto shadow-2xl\">\n\n//         {/* Header */}\n//         <div className=\"flex justify-between items-center mb-4 sm:mb-6 pb-2 border-b border-gray-200\">\n//           <h2 className=\"text-blue-600 text-xl sm:text-2xl lg:text-3xl font-bold flex items-center\">\n//             <span className=\"mr-2\">📈</span>\n//             Algorithm Execution History\n//           </h2>\n//           <button \n//             onClick={onClose} \n//             className=\"text-xl sm:text-2xl text-gray-600 hover:text-gray-800 \n//                        p-1 rounded-full hover:bg-gray-100 transition-colors\"\n//           >\n//             ×\n//           </button>\n//         </div>\n\n//         {/* Error message display */}\n//         {error && (\n//           <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\n//             <div className=\"flex items-center\">\n//               <span className=\"text-red-600 mr-2\">⚠️</span>\n//               <p className=\"text-red-800 text-sm sm:text-base\">{error}</p>\n//             </div>\n//             <button\n//               onClick={fetchHistory}\n//               className=\"mt-3 px-4 py-2 bg-red-600 text-white rounded-lg text-sm\n//                          hover:bg-red-700 transition-colors\"\n//             >\n//               Try Again\n//             </button>\n//           </div>\n//         )}\n\n//         {/* Filter Controls */}\n//         <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-4 mb-4 sm:mb-6\">\n//           <label className=\"font-semibold text-gray-700 text-sm sm:text-base\">\n//             Filter by Algorithm:\n//           </label>\n//           <select\n//             value={filter}\n//             onChange={(e) => {\n//               setFilter(e.target.value);\n//               setPage(1);\n//             }}\n//             className=\"w-full sm:w-auto px-3 py-2 border border-gray-300 rounded-lg \n//                        text-sm sm:text-base focus:ring-2 focus:ring-blue-300\n//                        hover:border-gray-400 transition-colors\"\n//           >\n//             <option value=\"all\">All Algorithms</option>\n//             <option value=\"dijkstra\">Dijkstra</option>\n//             <option value=\"bellman_ford\">Bellman-Ford</option>\n//             <option value=\"floyd_warshall\">Floyd-Warshall</option>\n//             <option value=\"prims\">Prim's</option>\n//             <option value=\"kruskal\">Kruskal's</option>\n//           </select>\n//         </div>\n\n//         {/* Content */}\n//         {loading ? (\n//           <div className=\"flex flex-col items-center justify-center py-12 sm:py-16\">\n//             <div className=\"w-6 sm:w-8 h-6 sm:h-8 mb-3 sm:mb-4 border-2 sm:border-4 \n//                             border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n//             <p className=\"text-gray-600 text-sm sm:text-base\">Loading your algorithm history...</p>\n//           </div>\n//         ) : history.length === 0 ? (\n//           <div className=\"flex flex-col items-center justify-center py-12 sm:py-16 text-center\">\n//             <div className=\"w-16 sm:w-20 h-16 sm:h-20 mb-4 rounded-full bg-gray-100 flex items-center justify-center\">\n//               <span className=\"text-2xl sm:text-3xl\">📊</span>\n//             </div>\n//             <h3 className=\"text-lg sm:text-xl font-semibold text-gray-800 mb-2\">\n//               No Algorithm History Yet\n//             </h3>\n//             <p className=\"text-gray-600 text-sm sm:text-base max-w-md mb-2\">\n//               {filter !== 'all' \n//                 ? `No ${filter} algorithm results found.`\n//                 : 'No algorithm execution history found.'\n//               }\n//             </p>\n//             <p className=\"text-gray-500 text-sm\">\n//               Run some algorithms to see them here!\n//             </p>\n//           </div>\n//         ) : (\n//           <div>\n//             {/* Results Count */}\n//             <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\n//               <p className=\"text-blue-800 text-sm sm:text-base font-medium flex items-center\">\n//                 <span className=\"mr-2\">🔍</span>\n//                 Found {history.length} result{history.length !== 1 ? 's' : ''}\n//                 {filter !== 'all' && ` for ${filter.replace('_', '-').toUpperCase()}`}\n//                 {totalPages > 1 && ` (Page ${page} of ${totalPages})`}\n//               </p>\n//             </div>\n\n//             {/* Results Grid */}\n//             <div className=\"space-y-3 sm:space-y-4\">\n//               {history.map((result) => (\n//                 <div key={result._id} \n//                      className=\"border border-gray-200 rounded-lg sm:rounded-xl \n//                                 p-3 sm:p-4 lg:p-5 bg-gray-50 hover:bg-gray-100\n//                                 transition-colors duration-200\">\n//                   <div className=\"flex flex-col sm:flex-row justify-between items-start gap-3 sm:gap-4\">\n//                     <div className=\"flex-1 min-w-0\">\n//                       {/* Algorithm Title */}\n//                       <h3 className=\"text-gray-800 text-base sm:text-lg font-semibold mb-2 sm:mb-3 truncate\">\n//                         <span className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs sm:text-sm font-bold mr-2\">\n//                           {result.algorithm.replace('_', '-').toUpperCase()}\n//                         </span>\n//                         {result.graphName}\n//                       </h3>\n\n//                       {/* Statistics Grid */}\n//                       <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-4 mb-2 sm:mb-3\">\n//                         <div className=\"bg-white rounded-lg p-2 text-center\">\n//                           <div className=\"text-sm sm:text-base font-bold text-gray-900\">\n//                             {result.source || 'N/A'}\n//                           </div>\n//                           <div className=\"text-xs text-gray-500\">Source</div>\n//                         </div>\n//                         <div className=\"bg-white rounded-lg p-2 text-center\">\n//                           <div className=\"text-sm sm:text-base font-bold text-gray-900\">\n//                             {result.nodeCount || 0}\n//                           </div>\n//                           <div className=\"text-xs text-gray-500\">Nodes</div>\n//                         </div>\n//                         <div className=\"bg-white rounded-lg p-2 text-center\">\n//                           <div className=\"text-sm sm:text-base font-bold text-gray-900\">\n//                             {result.edgeCount || 0}\n//                           </div>\n//                           <div className=\"text-xs text-gray-500\">Edges</div>\n//                         </div>\n//                         <div className=\"bg-white rounded-lg p-2 text-center\">\n//                           <div className=\"text-sm sm:text-base font-bold text-blue-600\">\n//                             {formatExecutionTime(result.executionTime || 0)}\n//                           </div>\n//                           <div className=\"text-xs text-gray-500\">Time</div>\n//                         </div>\n//                       </div>\n\n//                       {/* Timestamp */}\n//                       <div className=\"text-xs sm:text-sm text-gray-400\">\n//                         Executed: {formatDate(result.createdAt)}\n//                       </div>\n//                     </div>\n\n//                     {/* Action Buttons */}\n//                     <div className=\"flex gap-2 w-full sm:w-auto\">\n//                       <button\n//                         onClick={() => onLoadResult && onLoadResult(result)}\n//                         className=\"flex-1 sm:flex-none px-3 sm:px-4 py-2 bg-blue-600 text-white \n//                                    rounded-lg text-sm font-medium hover:bg-blue-700\n//                                    transition-colors duration-200\"\n//                       >\n//                         📋 View\n//                       </button>\n//                       <button\n//                         onClick={() => handleDeleteResult(result._id)}\n//                         className=\"flex-1 sm:flex-none px-3 sm:px-4 py-2 bg-red-500 text-white \n//                                    rounded-lg text-sm font-medium hover:bg-red-600\n//                                    transition-colors duration-200\"\n//                       >\n//                         🗑️ Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             {/* Pagination */}\n//             {totalPages > 1 && (\n//               <div className=\"flex flex-col sm:flex-row justify-center items-center gap-3 sm:gap-4 mt-6 sm:mt-8\">\n//                 <button\n//                   onClick={() => setPage(page - 1)}\n//                   disabled={page === 1}\n//                   className={`w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg \n//                              text-sm sm:text-base font-medium transition-colors\n//                              ${page === 1 \n//                                ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \n//                                : 'bg-white text-gray-700 hover:bg-gray-100'}`}\n//                 >\n//                   ← Previous\n//                 </button>\n\n//                 <span className=\"text-gray-500 text-sm sm:text-base\">\n//                   Page {page} of {totalPages}\n//                 </span>\n\n//                 <button\n//                   onClick={() => setPage(page + 1)}\n//                   disabled={page === totalPages}\n//                   className={`w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg \n//                              text-sm sm:text-base font-medium transition-colors\n//                              ${page === totalPages \n//                                ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \n//                                : 'bg-white text-gray-700 hover:bg-gray-100'}`}\n//                 >\n//                   Next →\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ResultHistory;\n\n// import React, { useState, useEffect } from 'react';\n\n// function ResultHistory({ onClose }) {\n//   const [history, setHistory] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [filter, setFilter] = useState('all');\n\n//   useEffect(() => {\n//     fetchHistory();\n//   }, [filter]);\n\n//   const fetchHistory = async () => {\n//     try {\n//       setLoading(true);\n//       console.log('Fetching history...');\n//       const url = filter === 'all' \n//         ? 'http://localhost:5000/api/db/graphs/results/history'\n//         : `http://localhost:5000/api/db/graphs/results/history?algorithm=${filter}`;\n\n//       const response = await fetch(url);\n//       console.log('Response status:', response.status);\n\n//       const data = await response.json();\n//       console.log('History data:', data);\n\n//       if (data.success) {\n//         setHistory(data.data);\n//         setError(null);\n//       } else {\n//         setError(data.error || 'Failed to fetch history');\n//       }\n//     } catch (error) {\n//       console.error('Error fetching history:', error);\n//       setError('Network error: ' + error.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const getAlgorithmColor = (algorithm) => {\n//     const colors = {\n//       dijkstra: 'bg-blue-100 text-blue-800 border-blue-200',\n//       bellman_ford: 'bg-green-100 text-green-800 border-green-200',\n//       floyd_warshall: 'bg-purple-100 text-purple-800 border-purple-200',\n//       prims: 'bg-emerald-100 text-emerald-800 border-emerald-200',\n//       kruskal: 'bg-orange-100 text-orange-800 border-orange-200'\n//     };\n//     return colors[algorithm] || 'bg-gray-100 text-gray-800 border-gray-200';\n//   };\n\n//   const formatExecutionTime = (time) => {\n//     if (time < 1000) return `${time}ms`;\n//     return `${(time / 1000).toFixed(2)}s`;\n//   };\n\n//   return (\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1000] p-2 sm:p-4\">\n//       <div className=\"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \n//                       w-full sm:w-[95%] md:w-[90%] lg:w-[85%] xl:w-[80%] max-w-5xl\n//                       max-h-[95vh] sm:max-h-[90vh] md:max-h-[85vh] lg:max-h-[80vh] \n//                       overflow-y-auto shadow-modal\">\n\n//         {/* Header */}\n//         <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center \n//                         mb-4 sm:mb-6 pb-3 sm:pb-4 border-b border-gray-200\">\n//           <h2 className=\"text-primary-600 text-lg sm:text-xl lg:text-2xl xl:text-3xl \n//                          font-bold mb-2 sm:mb-0 flex items-center\">\n//             <span className=\"mr-2 text-base sm:text-lg lg:text-xl\">📈</span>\n//             <span className=\"hidden sm:inline\">Algorithm Execution History</span>\n//             <span className=\"sm:hidden\">Execution History</span>\n//           </h2>\n//           <button\n//             onClick={onClose}\n//             className=\"self-end sm:self-auto bg-transparent border-0 text-xl sm:text-2xl \n//                        cursor-pointer text-gray-600 hover:text-gray-800 p-1 rounded-full \n//                        hover:bg-gray-100 transition-colors duration-200\"\n//           >\n//             ×\n//           </button>\n//         </div>\n\n//         {/* Filter Section */}\n//         <div className=\"mb-4 sm:mb-6\">\n//           <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4\">\n//             <label className=\"text-sm sm:text-base font-medium text-gray-700\">\n//               Filter by Algorithm:\n//             </label>\n//             <select\n//               value={filter}\n//               onChange={(e) => setFilter(e.target.value)}\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm sm:text-base\n//                          focus:ring-2 focus:ring-primary-300 focus:border-primary-500\n//                          bg-white hover:border-gray-400 transition-colors\"\n//             >\n//               <option value=\"all\">All Algorithms</option>\n//               <option value=\"dijkstra\">Dijkstra</option>\n//               <option value=\"bellman_ford\">Bellman-Ford</option>\n//               <option value=\"floyd_warshall\">Floyd-Warshall</option>\n//               <option value=\"prims\">Prim's</option>\n//               <option value=\"kruskal\">Kruskal's</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         {/* Loading State */}\n//         {loading && (\n//           <div className=\"flex flex-col items-center justify-center py-12 sm:py-16\">\n//             <div className=\"w-6 sm:w-8 h-6 sm:h-8 mb-3 sm:mb-4 border-2 sm:border-4 \n//                             border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n//             <p className=\"text-gray-600 text-sm sm:text-base\">Loading history...</p>\n//           </div>\n//         )}\n\n//         {/* Error State */}\n//         {error && (\n//           <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\n//             <div className=\"flex items-start space-x-2 sm:space-x-3\">\n//               <span className=\"text-red-500 text-lg sm:text-xl flex-shrink-0\">❌</span>\n//               <div className=\"flex-1 min-w-0\">\n//                 <p className=\"text-red-800 text-sm sm:text-base\">\n//                   <strong>Error:</strong> {error}\n//                 </p>\n//                 <button \n//                   onClick={fetchHistory}\n//                   className=\"mt-2 px-3 sm:px-4 py-1.5 sm:py-2 bg-primary-600 hover:bg-primary-700 \n//                              text-white text-sm sm:text-base border-0 rounded-lg cursor-pointer\n//                              transition-colors duration-200\"\n//                 >\n//                   Retry\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Empty State */}\n//         {!loading && !error && history.length === 0 && (\n//           <div className=\"flex flex-col items-center justify-center py-12 sm:py-16 text-center\">\n//             <div className=\"w-16 sm:w-20 h-16 sm:h-20 mb-4 rounded-full bg-gray-100 \n//                             flex items-center justify-center\">\n//               <span className=\"text-2xl sm:text-3xl\">📊</span>\n//             </div>\n//             <h3 className=\"text-base sm:text-lg font-semibold text-gray-700 mb-2\">\n//               No execution history found\n//             </h3>\n//             <p className=\"text-sm sm:text-base text-gray-500 max-w-md\">\n//               {filter === 'all' \n//                 ? 'Run some algorithms to see their execution history here!'\n//                 : `No ${filter} algorithm executions found. Try a different filter or run some algorithms.`}\n//             </p>\n//           </div>\n//         )}\n\n//         {/* History Results */}\n//         {!loading && !error && history.length > 0 && (\n//           <div className=\"space-y-4 sm:space-y-6\">\n//             {/* Results Count */}\n//             <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4\">\n//               <p className=\"text-blue-800 text-sm sm:text-base font-medium flex items-center\">\n//                 <span className=\"mr-2\">🔍</span>\n//                 Found {history.length} result{history.length !== 1 ? 's' : ''}\n//                 {filter !== 'all' && (\n//                   <span className=\"ml-1\">for {filter.replace('_', '-')} algorithm</span>\n//                 )}\n//               </p>\n//             </div>\n\n//             {/* History Cards */}\n//             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 sm:gap-4 lg:gap-6\">\n//               {history.map((result) => (\n//                 <div\n//                   key={result._id}\n//                   className=\"border border-gray-200 rounded-lg sm:rounded-xl p-3 sm:p-4 lg:p-5 \n//                              bg-gray-50 hover:bg-white hover:border-primary-300 \n//                              transition-all duration-200 hover:shadow-lg\"\n//                 >\n//                   <div className=\"space-y-3 sm:space-y-4\">\n//                     {/* Algorithm Header */}\n//                     <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-start gap-2\">\n//                       <div className=\"flex-1 min-w-0\">\n//                         <div className=\"flex flex-wrap items-center gap-2 mb-1\">\n//                           <span className={`px-2 py-1 rounded-full text-xs sm:text-sm font-medium border\n//                                           ${getAlgorithmColor(result.algorithm)}`}>\n//                             {result.algorithm.replace('_', '-').toUpperCase()}\n//                           </span>\n//                         </div>\n//                         <h3 className=\"text-base sm:text-lg font-bold text-gray-900 truncate\">\n//                           {result.graphName}\n//                         </h3>\n//                       </div>\n//                     </div>\n\n//                     {/* Execution Details */}\n//                     <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2 sm:gap-3 text-center\">\n//                       <div className=\"bg-white rounded-lg p-2 sm:p-3 border border-gray-100\">\n//                         <div className=\"text-sm sm:text-base font-bold text-gray-900\">\n//                           Node {result.source + 1}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500 font-medium\">\n//                           Source\n//                         </div>\n//                       </div>\n//                       <div className=\"bg-white rounded-lg p-2 sm:p-3 border border-gray-100\">\n//                         <div className=\"text-sm sm:text-base font-bold text-gray-900\">\n//                           {formatExecutionTime(result.executionTime)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500 font-medium\">\n//                           Runtime\n//                         </div>\n//                       </div>\n//                       <div className=\"bg-white rounded-lg p-2 sm:p-3 border border-gray-100 col-span-2 sm:col-span-1\">\n//                         <div className=\"text-xs sm:text-sm font-bold text-gray-900\">\n//                           {formatDate(result.createdAt)}\n//                         </div>\n//                         <div className=\"text-xs text-gray-500 font-medium\">\n//                           Executed\n//                         </div>\n//                       </div>\n//                     </div>\n\n//                     {/* Graph Stats */}\n//                     {(result.nodeCount || result.edgeCount) && (\n//                       <div className=\"flex justify-center space-x-4 pt-2 border-t border-gray-200\">\n//                         {result.nodeCount && (\n//                           <div className=\"text-xs sm:text-sm text-gray-600\">\n//                             <span className=\"font-medium\">{result.nodeCount}</span> nodes\n//                           </div>\n//                         )}\n//                         {result.edgeCount && (\n//                           <div className=\"text-xs sm:text-sm text-gray-600\">\n//                             <span className=\"font-medium\">{result.edgeCount}</span> edges\n//                           </div>\n//                         )}\n//                       </div>\n//                     )}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ResultHistory;\n\n// import React, { useState, useEffect } from 'react';\n\n// function ResultHistory({ onClose }) {\n//   const [history, setHistory] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     fetchHistory();\n//   }, []);\n\n//   const fetchHistory = async () => {\n//     try {\n//       console.log('Fetching history...');\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results/history');\n//       console.log('Response status:', response.status);\n\n//       const data = await response.json();\n//       console.log('History data:', data);\n\n//       if (data.success) {\n//         setHistory(data.data);\n//       } else {\n//         setError(data.error || 'Failed to fetch history');\n//       }\n//     } catch (error) {\n//       console.error('Error fetching history:', error);\n//       setError('Network error: ' + error.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleString();\n//   };\n\n//   return (\n//     <div style={{\n//       position: 'fixed',\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       bottom: 0,\n//       backgroundColor: 'rgba(0,0,0,0.5)',\n//       display: 'flex',\n//       justifyContent: 'center',\n//       alignItems: 'center',\n//       zIndex: 1000\n//     }}>\n//       <div style={{\n//         backgroundColor: 'white',\n//         borderRadius: '16px',\n//         padding: '2rem',\n//         maxWidth: '800px',\n//         width: '90%',\n//         maxHeight: '80vh',\n//         overflowY: 'auto',\n//         boxShadow: '0 20px 40px rgba(0,0,0,0.3)'\n//       }}>\n//         <div style={{\n//           display: 'flex',\n//           justifyContent: 'space-between',\n//           alignItems: 'center',\n//           marginBottom: '1.5rem'\n//         }}>\n//           <h2 style={{ color: '#2563eb', margin: 0 }}>Algorithm Execution History</h2>\n//           <button\n//             onClick={onClose}\n//             style={{\n//               background: 'none',\n//               border: 'none',\n//               fontSize: '1.5rem',\n//               cursor: 'pointer',\n//               color: '#666'\n//             }}\n//           >\n//             ×\n//           </button>\n//         </div>\n\n//         {loading && (\n//           <div style={{ textAlign: 'center', padding: '2rem' }}>\n//             <p>Loading history...</p>\n//           </div>\n//         )}\n\n//         {error && (\n//           <div style={{ \n//             textAlign: 'center', \n//             padding: '2rem',\n//             color: 'red',\n//             backgroundColor: '#fee2e2',\n//             borderRadius: '8px',\n//             marginBottom: '1rem'\n//           }}>\n//             <p><strong>Error:</strong> {error}</p>\n//             <button onClick={fetchHistory} style={{\n//               padding: '0.5rem 1rem',\n//               backgroundColor: '#2563eb',\n//               color: 'white',\n//               border: 'none',\n//               borderRadius: '4px',\n//               cursor: 'pointer',\n//               marginTop: '0.5rem'\n//             }}>\n//               Retry\n//             </button>\n//           </div>\n//         )}\n\n//         {!loading && !error && history.length === 0 && (\n//           <div style={{ textAlign: 'center', padding: '2rem' }}>\n//             <p>No algorithm execution history found.</p>\n//             <p style={{ color: '#6b7280', marginTop: '0.5rem' }}>\n//               Run some algorithms to see them here!\n//             </p>\n//           </div>\n//         )}\n\n//         {!loading && !error && history.length > 0 && (\n//           <div>\n//             <p style={{ marginBottom: '1rem', color: '#6b7280' }}>\n//               Found {history.length} result{history.length !== 1 ? 's' : ''}\n//             </p>\n\n//             <div style={{ display: 'grid', gap: '1rem' }}>\n//               {history.map((result) => (\n//                 <div\n//                   key={result._id}\n//                   style={{\n//                     border: '1px solid #e5e7eb',\n//                     borderRadius: '8px',\n//                     padding: '1rem',\n//                     backgroundColor: '#f9fafb'\n//                   }}\n//                 >\n//                   <h3 style={{ margin: '0 0 0.5rem 0', color: '#1f2937' }}>\n//                     {result.algorithm.toUpperCase()} - {result.graphName}\n//                   </h3>\n//                   <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\n//                     <p>Source: Node {result.source}</p>\n//                     <p>Execution Time: {result.executionTime}ms</p>\n//                     <p>Created: {formatDate(result.createdAt)}</p>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ResultHistory;\n\n// import React, { useState, useEffect } from 'react';\n\n// function ResultHistory({ onClose, onLoadResult }) {\n//   const [history, setHistory] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [filter, setFilter] = useState('all');\n//   const [page, setPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(1);\n\n//   useEffect(() => {\n//     fetchHistory();\n//   }, [filter, page]);\n\n//   const fetchHistory = async () => {\n//     try {\n//       setLoading(true);\n//       const response = await fetch(\n//         `http://localhost:5000/api/db/graphs/results/history?algorithm=${filter}&page=${page}&limit=10`\n//       );\n//       const data = await response.json();\n\n//       if (data.success) {\n//         setHistory(data.data);\n//         setTotalPages(data.totalPages);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching history:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleDeleteResult = async (resultId) => {\n//     if (window.confirm('Are you sure you want to delete this result?')) {\n//       try {\n//         const response = await fetch(\n//           `http://localhost:5000/api/db/graphs/results/${resultId}`,\n//           { method: 'DELETE' }\n//         );\n\n//         if (response.ok) {\n//           fetchHistory(); // Refresh the list\n//         }\n//       } catch (error) {\n//         console.error('Error deleting result:', error);\n//       }\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   const formatExecutionTime = (time) => {\n//     if (time < 1000) {\n//       return `${time}ms`;\n//     }\n//     return `${(time / 1000).toFixed(2)}s`;\n//   };\n\n//   return (\n//     <div style={{\n//       position: 'fixed',\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       bottom: 0,\n//       backgroundColor: 'rgba(0,0,0,0.5)',\n//       display: 'flex',\n//       justifyContent: 'center',\n//       alignItems: 'center',\n//       zIndex: 1000\n//     }}>\n//       <div style={{\n//         backgroundColor: 'white',\n//         borderRadius: '16px',\n//         padding: '2rem',\n//         maxWidth: '900px',\n//         width: '95%',\n//         maxHeight: '90vh',\n//         overflowY: 'auto',\n//         boxShadow: '0 20px 40px rgba(0,0,0,0.3)'\n//       }}>\n//         {/* Header */}\n//         <div style={{\n//           display: 'flex',\n//           justifyContent: 'space-between',\n//           alignItems: 'center',\n//           marginBottom: '1.5rem'\n//         }}>\n//           <h2 style={{ color: '#2563eb', margin: 0 }}>Algorithm Execution History</h2>\n//           <button\n//             onClick={onClose}\n//             style={{\n//               background: 'none',\n//               border: 'none',\n//               fontSize: '1.5rem',\n//               cursor: 'pointer',\n//               color: '#666'\n//             }}\n//           >\n//             ×\n//           </button>\n//         </div>\n\n//         {/* Filter Controls */}\n//         <div style={{\n//           display: 'flex',\n//           gap: '1rem',\n//           marginBottom: '1.5rem',\n//           alignItems: 'center'\n//         }}>\n//           <label style={{ fontWeight: 'bold', color: '#374151' }}>\n//             Filter by Algorithm:\n//           </label>\n//           <select\n//             value={filter}\n//             onChange={(e) => {\n//               setFilter(e.target.value);\n//               setPage(1);\n//             }}\n//             style={{\n//               padding: '0.5rem',\n//               border: '1px solid #d1d5db',\n//               borderRadius: '8px',\n//               fontSize: '1rem'\n//             }}\n//           >\n//             <option value=\"all\">All Algorithms</option>\n//             <option value=\"dijkstra\">Dijkstra</option>\n//             <option value=\"bellman_ford\">Bellman-Ford</option>\n//             <option value=\"floyd_warshall\">Floyd-Warshall</option>\n//             <option value=\"prims\">Prim's</option>\n//             <option value=\"kruskal\">Kruskal's</option>\n//           </select>\n//         </div>\n\n//         {/* History List */}\n//         {loading ? (\n//           <div style={{ textAlign: 'center', padding: '2rem' }}>\n//             <p>Loading history...</p>\n//           </div>\n//         ) : history.length === 0 ? (\n//           <div style={{ textAlign: 'center', padding: '2rem' }}>\n//             <p>No algorithm execution history found.</p>\n//             <p style={{ color: '#6b7280' }}>Run some algorithms to see them here!</p>\n//           </div>\n//         ) : (\n//           <div>\n//             <p style={{ marginBottom: '1rem', color: '#6b7280' }}>\n//               Found {history.length} result{history.length !== 1 ? 's' : ''} \n//               {filter !== 'all' && ` for ${filter}`}\n//             </p>\n\n//             <div style={{ display: 'grid', gap: '1rem' }}>\n//               {history.map((result) => (\n//                 <div\n//                   key={result._id}\n//                   style={{\n//                     border: '1px solid #e5e7eb',\n//                     borderRadius: '8px',\n//                     padding: '1rem',\n//                     backgroundColor: '#f9fafb'\n//                   }}\n//                 >\n//                   <div style={{\n//                     display: 'flex',\n//                     justifyContent: 'space-between',\n//                     alignItems: 'flex-start'\n//                   }}>\n//                     <div style={{ flex: 1 }}>\n//                       <h3 style={{\n//                         margin: '0 0 0.5rem 0',\n//                         color: '#1f2937',\n//                         fontSize: '1.1rem'\n//                       }}>\n//                         {result.algorithm.replace('_', '-').toUpperCase()} - {result.graphName}\n//                       </h3>\n\n//                       <div style={{\n//                         display: 'grid',\n//                         gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n//                         gap: '0.5rem',\n//                         marginBottom: '0.5rem'\n//                       }}>\n//                         <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\n//                           <strong>Source:</strong> Node {result.source}\n//                         </div>\n//                         <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\n//                           <strong>Nodes:</strong> {result.nodeCount}\n//                         </div>\n//                         <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\n//                           <strong>Edges:</strong> {result.edgeCount}\n//                         </div>\n//                         <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\n//                           <strong>Time:</strong> {formatExecutionTime(result.executionTime)}\n//                         </div>\n//                       </div>\n\n//                       <div style={{ fontSize: '0.8rem', color: '#9ca3af' }}>\n//                         Executed: {formatDate(result.createdAt)}\n//                       </div>\n//                     </div>\n\n//                     <div style={{ display: 'flex', gap: '0.5rem' }}>\n//                       <button\n//                         onClick={() => onLoadResult(result)}\n//                         style={{\n//                           padding: '0.5rem 1rem',\n//                           backgroundColor: '#2563eb',\n//                           color: 'white',\n//                           border: 'none',\n//                           borderRadius: '6px',\n//                           cursor: 'pointer',\n//                           fontSize: '0.9rem'\n//                         }}\n//                       >\n//                         View\n//                       </button>\n//                       <button\n//                         onClick={() => handleDeleteResult(result._id)}\n//                         style={{\n//                           padding: '0.5rem 1rem',\n//                           backgroundColor: '#ef4444',\n//                           color: 'white',\n//                           border: 'none',\n//                           borderRadius: '6px',\n//                           cursor: 'pointer',\n//                           fontSize: '0.9rem'\n//                         }}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n\n//             {/* Pagination */}\n//             {totalPages > 1 && (\n//               <div style={{\n//                 display: 'flex',\n//                 justifyContent: 'center',\n//                 alignItems: 'center',\n//                 gap: '1rem',\n//                 marginTop: '2rem'\n//               }}>\n//                 <button\n//                   onClick={() => setPage(page - 1)}\n//                   disabled={page === 1}\n//                   style={{\n//                     padding: '0.5rem 1rem',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '6px',\n//                     backgroundColor: page === 1 ? '#f3f4f6' : 'white',\n//                     cursor: page === 1 ? 'not-allowed' : 'pointer'\n//                   }}\n//                 >\n//                   Previous\n//                 </button>\n\n//                 <span style={{ color: '#6b7280' }}>\n//                   Page {page} of {totalPages}\n//                 </span>\n\n//                 <button\n//                   onClick={() => setPage(page + 1)}\n//                   disabled={page === totalPages}\n//                   style={{\n//                     padding: '0.5rem 1rem',\n//                     border: '1px solid #d1d5db',\n//                     borderRadius: '6px',\n//                     backgroundColor: page === totalPages ? '#f3f4f6' : 'white',\n//                     cursor: page === totalPages ? 'not-allowed' : 'pointer'\n//                   }}\n//                 >\n//                   Next\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ResultHistory;\nvar _c;\n$RefreshReg$(_c, \"ResultHistory\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ResultHistory","onClose","onLoadResult","_s","history","setHistory","loading","setLoading","error","setError","filter","setFilter","page","setPage","totalPages","setTotalPages","API_BASE_URL","process","env","REACT_APP_API_URL","fetchHistory","token","localStorage","getItem","response","fetch","method","headers","ok","status","removeItem","Error","data","json","success","console","handleDeleteResult","resultId","window","confirm","h","_id","formatDate","dateString","Date","toLocaleString","year","month","day","hour","minute","formatExecutionTime","time","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","length","replace","toUpperCase","map","result","algorithm","graphName","source","nodeCount","edgeCount","executionTime","createdAt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Rajat/Desktop/Graph_Visualizer/frontend/src/components/ResultHistory.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ResultHistory({ onClose, onLoadResult }) {\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filter, setFilter] = useState('all');\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  // ✅ FIXED: Use environment variable instead of hardcoded localhost\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, [filter, page]);\r\n\r\n  // Fetch algorithm execution history\r\n  const fetchHistory = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setError('Authentication required. Please login again.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // 🔧 FIXED: Use environment variable instead of hardcoded localhost\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/graphs/algorithms/results?algorithm=${filter}&limit=10&page=${page}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        } \r\n      );\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          localStorage.removeItem('token');\r\n          setError('Session expired. Please login again.');\r\n          return;\r\n        }\r\n        throw new Error(`Failed to fetch history: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setHistory(data.data || []);\r\n        setTotalPages(data.totalPages || 1);\r\n      } else {\r\n        setError(data.error || 'Failed to load history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching history:', error);\r\n      setError('Failed to load history. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete algorithm result\r\n  const handleDeleteResult = async (resultId) => {\r\n    if (!window.confirm('Are you sure you want to delete this result?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setError('Authentication required. Please login again.');\r\n        return;\r\n      }\r\n\r\n      // 🔧 FIXED: Use environment variable instead of hardcoded localhost\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/graphs/algorithms/results/${resultId}`,\r\n        { \r\n          method: 'DELETE',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          localStorage.removeItem('token');\r\n          setError('Session expired. Please login again.');\r\n          return;\r\n        }\r\n        throw new Error(`Failed to delete result: ${response.status}`);\r\n      }\r\n\r\n      // Remove from local state immediately for better UX\r\n      setHistory(history.filter(h => h._id !== resultId));\r\n      \r\n      // Optionally refetch to ensure consistency\r\n      // fetchHistory();\r\n    } catch (error) {\r\n      console.error('Error deleting result:', error);\r\n      setError('Failed to delete result. Please try again.');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const formatExecutionTime = (time) => {\r\n    return time < 1000 ? `${time}ms` : `${(time / 1000).toFixed(2)}s`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50 p-2 sm:p-4\">\r\n      <div className=\"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \r\n                      w-full sm:w-[95%] md:w-[90%] lg:w-[85%] max-w-5xl\r\n                      max-h-[95vh] sm:max-h-[90vh] overflow-y-auto shadow-2xl\">\r\n\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-4 sm:mb-6 pb-2 border-b border-gray-200\">\r\n          <h2 className=\"text-blue-600 text-xl sm:text-2xl lg:text-3xl font-bold flex items-center\">\r\n            <span className=\"mr-2\">📈</span>\r\n            Algorithm Execution History\r\n          </h2>\r\n          <button \r\n            onClick={onClose} \r\n            className=\"text-xl sm:text-2xl text-gray-600 hover:text-gray-800 \r\n                       p-1 rounded-full hover:bg-gray-100 transition-colors\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* Error message display */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-red-600 mr-2\">⚠️</span>\r\n              <p className=\"text-red-800 text-sm sm:text-base\">{error}</p>\r\n            </div>\r\n            <button\r\n              onClick={fetchHistory}\r\n              className=\"mt-3 px-4 py-2 bg-red-600 text-white rounded-lg text-sm\r\n                         hover:bg-red-700 transition-colors\"\r\n            >\r\n              Try Again\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Filter Controls */}\r\n        <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-4 mb-4 sm:mb-6\">\r\n          <label className=\"font-semibold text-gray-700 text-sm sm:text-base\">\r\n            Filter by Algorithm:\r\n          </label>\r\n          <select\r\n            value={filter}\r\n            onChange={(e) => {\r\n              setFilter(e.target.value);\r\n              setPage(1);\r\n            }}\r\n            className=\"w-full sm:w-auto px-3 py-2 border border-gray-300 rounded-lg \r\n                       text-sm sm:text-base focus:ring-2 focus:ring-blue-300\r\n                       hover:border-gray-400 transition-colors\"\r\n          >\r\n            <option value=\"all\">All Algorithms</option>\r\n            <option value=\"dijkstra\">Dijkstra</option>\r\n            <option value=\"bellman_ford\">Bellman-Ford</option>\r\n            <option value=\"floyd_warshall\">Floyd-Warshall</option>\r\n            <option value=\"prims\">Prim's</option>\r\n            <option value=\"kruskal\">Kruskal's</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        {loading ? (\r\n          <div className=\"flex flex-col items-center justify-center py-12 sm:py-16\">\r\n            <div className=\"w-6 sm:w-8 h-6 sm:h-8 mb-3 sm:mb-4 border-2 sm:border-4 \r\n                            border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\r\n            <p className=\"text-gray-600 text-sm sm:text-base\">Loading your algorithm history...</p>\r\n          </div>\r\n        ) : history.length === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center py-12 sm:py-16 text-center\">\r\n            <div className=\"w-16 sm:w-20 h-16 sm:h-20 mb-4 rounded-full bg-gray-100 flex items-center justify-center\">\r\n              <span className=\"text-2xl sm:text-3xl\">📊</span>\r\n            </div>\r\n            <h3 className=\"text-lg sm:text-xl font-semibold text-gray-800 mb-2\">\r\n              No Algorithm History Yet\r\n            </h3>\r\n            <p className=\"text-gray-600 text-sm sm:text-base max-w-md mb-2\">\r\n              {filter !== 'all' \r\n                ? `No ${filter} algorithm results found.`\r\n                : 'No algorithm execution history found.'\r\n              }\r\n            </p>\r\n            <p className=\"text-gray-500 text-sm\">\r\n              Run some algorithms to see them here!\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {/* Results Count */}\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\r\n              <p className=\"text-blue-800 text-sm sm:text-base font-medium flex items-center\">\r\n                <span className=\"mr-2\">🔍</span>\r\n                Found {history.length} result{history.length !== 1 ? 's' : ''}\r\n                {filter !== 'all' && ` for ${filter.replace('_', '-').toUpperCase()}`}\r\n                {totalPages > 1 && ` (Page ${page} of ${totalPages})`}\r\n              </p>\r\n            </div>\r\n\r\n            {/* Results Grid */}\r\n            <div className=\"space-y-3 sm:space-y-4\">\r\n              {history.map((result) => (\r\n                <div key={result._id} \r\n                     className=\"border border-gray-200 rounded-lg sm:rounded-xl \r\n                                p-3 sm:p-4 lg:p-5 bg-gray-50 hover:bg-gray-100\r\n                                transition-colors duration-200\">\r\n                  <div className=\"flex flex-col sm:flex-row justify-between items-start gap-3 sm:gap-4\">\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      {/* Algorithm Title */}\r\n                      <h3 className=\"text-gray-800 text-base sm:text-lg font-semibold mb-2 sm:mb-3 truncate\">\r\n                        <span className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs sm:text-sm font-bold mr-2\">\r\n                          {result.algorithm.replace('_', '-').toUpperCase()}\r\n                        </span>\r\n                        {result.graphName}\r\n                      </h3>\r\n\r\n                      {/* Statistics Grid */}\r\n                      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-4 mb-2 sm:mb-3\">\r\n                        <div className=\"bg-white rounded-lg p-2 text-center\">\r\n                          <div className=\"text-sm sm:text-base font-bold text-gray-900\">\r\n                            {result.source || 'N/A'}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500\">Source</div>\r\n                        </div>\r\n                        <div className=\"bg-white rounded-lg p-2 text-center\">\r\n                          <div className=\"text-sm sm:text-base font-bold text-gray-900\">\r\n                            {result.nodeCount || 0}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500\">Nodes</div>\r\n                        </div>\r\n                        <div className=\"bg-white rounded-lg p-2 text-center\">\r\n                          <div className=\"text-sm sm:text-base font-bold text-gray-900\">\r\n                            {result.edgeCount || 0}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500\">Edges</div>\r\n                        </div>\r\n                        <div className=\"bg-white rounded-lg p-2 text-center\">\r\n                          <div className=\"text-sm sm:text-base font-bold text-blue-600\">\r\n                            {formatExecutionTime(result.executionTime || 0)}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500\">Time</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Timestamp */}\r\n                      <div className=\"text-xs sm:text-sm text-gray-400\">\r\n                        Executed: {formatDate(result.createdAt)}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Action Buttons */}\r\n                    <div className=\"flex gap-2 w-full sm:w-auto\">\r\n                      <button\r\n                        onClick={() => onLoadResult && onLoadResult(result)}\r\n                        className=\"flex-1 sm:flex-none px-3 sm:px-4 py-2 bg-blue-600 text-white \r\n                                   rounded-lg text-sm font-medium hover:bg-blue-700\r\n                                   transition-colors duration-200\"\r\n                      >\r\n                        📋 View\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDeleteResult(result._id)}\r\n                        className=\"flex-1 sm:flex-none px-3 sm:px-4 py-2 bg-red-500 text-white \r\n                                   rounded-lg text-sm font-medium hover:bg-red-600\r\n                                   transition-colors duration-200\"\r\n                      >\r\n                        🗑️ Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Pagination */}\r\n            {totalPages > 1 && (\r\n              <div className=\"flex flex-col sm:flex-row justify-center items-center gap-3 sm:gap-4 mt-6 sm:mt-8\">\r\n                <button\r\n                  onClick={() => setPage(page - 1)}\r\n                  disabled={page === 1}\r\n                  className={`w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg \r\n                             text-sm sm:text-base font-medium transition-colors\r\n                             ${page === 1 \r\n                               ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \r\n                               : 'bg-white text-gray-700 hover:bg-gray-100'}`}\r\n                >\r\n                  ← Previous\r\n                </button>\r\n\r\n                <span className=\"text-gray-500 text-sm sm:text-base\">\r\n                  Page {page} of {totalPages}\r\n                </span>\r\n\r\n                <button\r\n                  onClick={() => setPage(page + 1)}\r\n                  disabled={page === totalPages}\r\n                  className={`w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg \r\n                             text-sm sm:text-base font-medium transition-colors\r\n                             ${page === totalPages \r\n                               ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \r\n                               : 'bg-white text-gray-700 hover:bg-gray-100'}`}\r\n                >\r\n                  Next →\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultHistory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// function ResultHistory({ onClose, onLoadResult }) {\r\n//   const [history, setHistory] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [filter, setFilter] = useState('all');\r\n//   const [page, setPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n\r\n//   useEffect(() => {\r\n//     fetchHistory();\r\n//   }, [filter, page]);\r\n\r\n//   // Fetch algorithm execution history\r\n//   const fetchHistory = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       setError(null);\r\n      \r\n//       const token = localStorage.getItem('token');\r\n      \r\n//       if (!token) {\r\n//         setError('Authentication required. Please login again.');\r\n//         setLoading(false);\r\n//         return;\r\n//       }\r\n\r\n//       const response = await fetch(\r\n//         `http://localhost:5000/api/graphs/algorithms/results?algorithm=${filter}&limit=10&page=${page}`,\r\n//         {\r\n//           method: 'GET',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         } \r\n//       );\r\n\r\n//       if (!response.ok) {\r\n//         if (response.status === 401) {\r\n//           localStorage.removeItem('token');\r\n//           setError('Session expired. Please login again.');\r\n//           return;\r\n//         }\r\n//         throw new Error(`Failed to fetch history: ${response.status}`);\r\n//       }\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (data.success) {\r\n//         setHistory(data.data || []);\r\n//         setTotalPages(data.totalPages || 1);\r\n//       } else {\r\n//         setError(data.error || 'Failed to load history');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error fetching history:', error);\r\n//       setError('Failed to load history. Please try again.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // Delete algorithm result\r\n//   const handleDeleteResult = async (resultId) => {\r\n//     if (!window.confirm('Are you sure you want to delete this result?')) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n      \r\n//       if (!token) {\r\n//         setError('Authentication required. Please login again.');\r\n//         return;\r\n//       }\r\n\r\n//       // 🔧 FIXED: Updated URL to match single controller approach\r\n//       const response = await fetch(\r\n//         `http://localhost:5000/api/graphs/algorithms/results/${resultId}`,\r\n//         { \r\n//           method: 'DELETE',\r\n//           headers: {\r\n//             'Authorization': `Bearer ${token}`\r\n//           }\r\n//         }\r\n//       );\r\n\r\n//       if (!response.ok) {\r\n//         if (response.status === 401) {\r\n//           localStorage.removeItem('token');\r\n//           setError('Session expired. Please login again.');\r\n//           return;\r\n//         }\r\n//         throw new Error(`Failed to delete result: ${response.status}`);\r\n//       }\r\n\r\n//       // Remove from local state immediately for better UX\r\n//       setHistory(history.filter(h => h._id !== resultId));\r\n      \r\n//       // Optionally refetch to ensure consistency\r\n//       // fetchHistory();\r\n//     } catch (error) {\r\n//       console.error('Error deleting result:', error);\r\n//       setError('Failed to delete result. Please try again.');\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     return new Date(dateString).toLocaleString('en-US', {\r\n//       year: 'numeric',\r\n//       month: 'short',\r\n//       day: 'numeric',\r\n//       hour: '2-digit',\r\n//       minute: '2-digit'\r\n//     });\r\n//   };\r\n\r\n//   const formatExecutionTime = (time) => {\r\n//     return time < 1000 ? `${time}ms` : `${(time / 1000).toFixed(2)}s`;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50 p-2 sm:p-4\">\r\n//       <div className=\"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \r\n//                       w-full sm:w-[95%] md:w-[90%] lg:w-[85%] max-w-5xl\r\n//                       max-h-[95vh] sm:max-h-[90vh] overflow-y-auto shadow-2xl\">\r\n\r\n//         {/* Header */}\r\n//         <div className=\"flex justify-between items-center mb-4 sm:mb-6 pb-2 border-b border-gray-200\">\r\n//           <h2 className=\"text-blue-600 text-xl sm:text-2xl lg:text-3xl font-bold flex items-center\">\r\n//             <span className=\"mr-2\">📈</span>\r\n//             Algorithm Execution History\r\n//           </h2>\r\n//           <button \r\n//             onClick={onClose} \r\n//             className=\"text-xl sm:text-2xl text-gray-600 hover:text-gray-800 \r\n//                        p-1 rounded-full hover:bg-gray-100 transition-colors\"\r\n//           >\r\n//             ×\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Error message display */}\r\n//         {error && (\r\n//           <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\r\n//             <div className=\"flex items-center\">\r\n//               <span className=\"text-red-600 mr-2\">⚠️</span>\r\n//               <p className=\"text-red-800 text-sm sm:text-base\">{error}</p>\r\n//             </div>\r\n//             <button\r\n//               onClick={fetchHistory}\r\n//               className=\"mt-3 px-4 py-2 bg-red-600 text-white rounded-lg text-sm\r\n//                          hover:bg-red-700 transition-colors\"\r\n//             >\r\n//               Try Again\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Filter Controls */}\r\n//         <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-4 mb-4 sm:mb-6\">\r\n//           <label className=\"font-semibold text-gray-700 text-sm sm:text-base\">\r\n//             Filter by Algorithm:\r\n//           </label>\r\n//           <select\r\n//             value={filter}\r\n//             onChange={(e) => {\r\n//               setFilter(e.target.value);\r\n//               setPage(1);\r\n//             }}\r\n//             className=\"w-full sm:w-auto px-3 py-2 border border-gray-300 rounded-lg \r\n//                        text-sm sm:text-base focus:ring-2 focus:ring-blue-300\r\n//                        hover:border-gray-400 transition-colors\"\r\n//           >\r\n//             <option value=\"all\">All Algorithms</option>\r\n//             <option value=\"dijkstra\">Dijkstra</option>\r\n//             <option value=\"bellman_ford\">Bellman-Ford</option>\r\n//             <option value=\"floyd_warshall\">Floyd-Warshall</option>\r\n//             <option value=\"prims\">Prim's</option>\r\n//             <option value=\"kruskal\">Kruskal's</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Content */}\r\n//         {loading ? (\r\n//           <div className=\"flex flex-col items-center justify-center py-12 sm:py-16\">\r\n//             <div className=\"w-6 sm:w-8 h-6 sm:h-8 mb-3 sm:mb-4 border-2 sm:border-4 \r\n//                             border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\r\n//             <p className=\"text-gray-600 text-sm sm:text-base\">Loading your algorithm history...</p>\r\n//           </div>\r\n//         ) : history.length === 0 ? (\r\n//           <div className=\"flex flex-col items-center justify-center py-12 sm:py-16 text-center\">\r\n//             <div className=\"w-16 sm:w-20 h-16 sm:h-20 mb-4 rounded-full bg-gray-100 flex items-center justify-center\">\r\n//               <span className=\"text-2xl sm:text-3xl\">📊</span>\r\n//             </div>\r\n//             <h3 className=\"text-lg sm:text-xl font-semibold text-gray-800 mb-2\">\r\n//               No Algorithm History Yet\r\n//             </h3>\r\n//             <p className=\"text-gray-600 text-sm sm:text-base max-w-md mb-2\">\r\n//               {filter !== 'all' \r\n//                 ? `No ${filter} algorithm results found.`\r\n//                 : 'No algorithm execution history found.'\r\n//               }\r\n//             </p>\r\n//             <p className=\"text-gray-500 text-sm\">\r\n//               Run some algorithms to see them here!\r\n//             </p>\r\n//           </div>\r\n//         ) : (\r\n//           <div>\r\n//             {/* Results Count */}\r\n//             <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\r\n//               <p className=\"text-blue-800 text-sm sm:text-base font-medium flex items-center\">\r\n//                 <span className=\"mr-2\">🔍</span>\r\n//                 Found {history.length} result{history.length !== 1 ? 's' : ''}\r\n//                 {filter !== 'all' && ` for ${filter.replace('_', '-').toUpperCase()}`}\r\n//                 {totalPages > 1 && ` (Page ${page} of ${totalPages})`}\r\n//               </p>\r\n//             </div>\r\n\r\n//             {/* Results Grid */}\r\n//             <div className=\"space-y-3 sm:space-y-4\">\r\n//               {history.map((result) => (\r\n//                 <div key={result._id} \r\n//                      className=\"border border-gray-200 rounded-lg sm:rounded-xl \r\n//                                 p-3 sm:p-4 lg:p-5 bg-gray-50 hover:bg-gray-100\r\n//                                 transition-colors duration-200\">\r\n//                   <div className=\"flex flex-col sm:flex-row justify-between items-start gap-3 sm:gap-4\">\r\n//                     <div className=\"flex-1 min-w-0\">\r\n//                       {/* Algorithm Title */}\r\n//                       <h3 className=\"text-gray-800 text-base sm:text-lg font-semibold mb-2 sm:mb-3 truncate\">\r\n//                         <span className=\"bg-blue-600 text-white px-2 py-1 rounded text-xs sm:text-sm font-bold mr-2\">\r\n//                           {result.algorithm.replace('_', '-').toUpperCase()}\r\n//                         </span>\r\n//                         {result.graphName}\r\n//                       </h3>\r\n\r\n//                       {/* Statistics Grid */}\r\n//                       <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-4 mb-2 sm:mb-3\">\r\n//                         <div className=\"bg-white rounded-lg p-2 text-center\">\r\n//                           <div className=\"text-sm sm:text-base font-bold text-gray-900\">\r\n//                             {result.source || 'N/A'}\r\n//                           </div>\r\n//                           <div className=\"text-xs text-gray-500\">Source</div>\r\n//                         </div>\r\n//                         <div className=\"bg-white rounded-lg p-2 text-center\">\r\n//                           <div className=\"text-sm sm:text-base font-bold text-gray-900\">\r\n//                             {result.nodeCount || 0}\r\n//                           </div>\r\n//                           <div className=\"text-xs text-gray-500\">Nodes</div>\r\n//                         </div>\r\n//                         <div className=\"bg-white rounded-lg p-2 text-center\">\r\n//                           <div className=\"text-sm sm:text-base font-bold text-gray-900\">\r\n//                             {result.edgeCount || 0}\r\n//                           </div>\r\n//                           <div className=\"text-xs text-gray-500\">Edges</div>\r\n//                         </div>\r\n//                         <div className=\"bg-white rounded-lg p-2 text-center\">\r\n//                           <div className=\"text-sm sm:text-base font-bold text-blue-600\">\r\n//                             {formatExecutionTime(result.executionTime || 0)}\r\n//                           </div>\r\n//                           <div className=\"text-xs text-gray-500\">Time</div>\r\n//                         </div>\r\n//                       </div>\r\n\r\n//                       {/* Timestamp */}\r\n//                       <div className=\"text-xs sm:text-sm text-gray-400\">\r\n//                         Executed: {formatDate(result.createdAt)}\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                     {/* Action Buttons */}\r\n//                     <div className=\"flex gap-2 w-full sm:w-auto\">\r\n//                       <button\r\n//                         onClick={() => onLoadResult && onLoadResult(result)}\r\n//                         className=\"flex-1 sm:flex-none px-3 sm:px-4 py-2 bg-blue-600 text-white \r\n//                                    rounded-lg text-sm font-medium hover:bg-blue-700\r\n//                                    transition-colors duration-200\"\r\n//                       >\r\n//                         📋 View\r\n//                       </button>\r\n//                       <button\r\n//                         onClick={() => handleDeleteResult(result._id)}\r\n//                         className=\"flex-1 sm:flex-none px-3 sm:px-4 py-2 bg-red-500 text-white \r\n//                                    rounded-lg text-sm font-medium hover:bg-red-600\r\n//                                    transition-colors duration-200\"\r\n//                       >\r\n//                         🗑️ Delete\r\n//                       </button>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             {/* Pagination */}\r\n//             {totalPages > 1 && (\r\n//               <div className=\"flex flex-col sm:flex-row justify-center items-center gap-3 sm:gap-4 mt-6 sm:mt-8\">\r\n//                 <button\r\n//                   onClick={() => setPage(page - 1)}\r\n//                   disabled={page === 1}\r\n//                   className={`w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg \r\n//                              text-sm sm:text-base font-medium transition-colors\r\n//                              ${page === 1 \r\n//                                ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \r\n//                                : 'bg-white text-gray-700 hover:bg-gray-100'}`}\r\n//                 >\r\n//                   ← Previous\r\n//                 </button>\r\n\r\n//                 <span className=\"text-gray-500 text-sm sm:text-base\">\r\n//                   Page {page} of {totalPages}\r\n//                 </span>\r\n\r\n//                 <button\r\n//                   onClick={() => setPage(page + 1)}\r\n//                   disabled={page === totalPages}\r\n//                   className={`w-full sm:w-auto px-4 py-2 border border-gray-300 rounded-lg \r\n//                              text-sm sm:text-base font-medium transition-colors\r\n//                              ${page === totalPages \r\n//                                ? 'bg-gray-100 text-gray-400 cursor-not-allowed' \r\n//                                : 'bg-white text-gray-700 hover:bg-gray-100'}`}\r\n//                 >\r\n//                   Next →\r\n//                 </button>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ResultHistory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// function ResultHistory({ onClose }) {\r\n//   const [history, setHistory] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [filter, setFilter] = useState('all');\r\n\r\n//   useEffect(() => {\r\n//     fetchHistory();\r\n//   }, [filter]);\r\n\r\n//   const fetchHistory = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       console.log('Fetching history...');\r\n//       const url = filter === 'all' \r\n//         ? 'http://localhost:5000/api/db/graphs/results/history'\r\n//         : `http://localhost:5000/api/db/graphs/results/history?algorithm=${filter}`;\r\n      \r\n//       const response = await fetch(url);\r\n//       console.log('Response status:', response.status);\r\n      \r\n//       const data = await response.json();\r\n//       console.log('History data:', data);\r\n      \r\n//       if (data.success) {\r\n//         setHistory(data.data);\r\n//         setError(null);\r\n//       } else {\r\n//         setError(data.error || 'Failed to fetch history');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error fetching history:', error);\r\n//       setError('Network error: ' + error.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     return new Date(dateString).toLocaleString('en-US', {\r\n//       year: 'numeric',\r\n//       month: 'short',\r\n//       day: 'numeric',\r\n//       hour: '2-digit',\r\n//       minute: '2-digit'\r\n//     });\r\n//   };\r\n\r\n//   const getAlgorithmColor = (algorithm) => {\r\n//     const colors = {\r\n//       dijkstra: 'bg-blue-100 text-blue-800 border-blue-200',\r\n//       bellman_ford: 'bg-green-100 text-green-800 border-green-200',\r\n//       floyd_warshall: 'bg-purple-100 text-purple-800 border-purple-200',\r\n//       prims: 'bg-emerald-100 text-emerald-800 border-emerald-200',\r\n//       kruskal: 'bg-orange-100 text-orange-800 border-orange-200'\r\n//     };\r\n//     return colors[algorithm] || 'bg-gray-100 text-gray-800 border-gray-200';\r\n//   };\r\n\r\n//   const formatExecutionTime = (time) => {\r\n//     if (time < 1000) return `${time}ms`;\r\n//     return `${(time / 1000).toFixed(2)}s`;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1000] p-2 sm:p-4\">\r\n//       <div className=\"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \r\n//                       w-full sm:w-[95%] md:w-[90%] lg:w-[85%] xl:w-[80%] max-w-5xl\r\n//                       max-h-[95vh] sm:max-h-[90vh] md:max-h-[85vh] lg:max-h-[80vh] \r\n//                       overflow-y-auto shadow-modal\">\r\n        \r\n//         {/* Header */}\r\n//         <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center \r\n//                         mb-4 sm:mb-6 pb-3 sm:pb-4 border-b border-gray-200\">\r\n//           <h2 className=\"text-primary-600 text-lg sm:text-xl lg:text-2xl xl:text-3xl \r\n//                          font-bold mb-2 sm:mb-0 flex items-center\">\r\n//             <span className=\"mr-2 text-base sm:text-lg lg:text-xl\">📈</span>\r\n//             <span className=\"hidden sm:inline\">Algorithm Execution History</span>\r\n//             <span className=\"sm:hidden\">Execution History</span>\r\n//           </h2>\r\n//           <button\r\n//             onClick={onClose}\r\n//             className=\"self-end sm:self-auto bg-transparent border-0 text-xl sm:text-2xl \r\n//                        cursor-pointer text-gray-600 hover:text-gray-800 p-1 rounded-full \r\n//                        hover:bg-gray-100 transition-colors duration-200\"\r\n//           >\r\n//             ×\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Filter Section */}\r\n//         <div className=\"mb-4 sm:mb-6\">\r\n//           <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4\">\r\n//             <label className=\"text-sm sm:text-base font-medium text-gray-700\">\r\n//               Filter by Algorithm:\r\n//             </label>\r\n//             <select\r\n//               value={filter}\r\n//               onChange={(e) => setFilter(e.target.value)}\r\n//               className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm sm:text-base\r\n//                          focus:ring-2 focus:ring-primary-300 focus:border-primary-500\r\n//                          bg-white hover:border-gray-400 transition-colors\"\r\n//             >\r\n//               <option value=\"all\">All Algorithms</option>\r\n//               <option value=\"dijkstra\">Dijkstra</option>\r\n//               <option value=\"bellman_ford\">Bellman-Ford</option>\r\n//               <option value=\"floyd_warshall\">Floyd-Warshall</option>\r\n//               <option value=\"prims\">Prim's</option>\r\n//               <option value=\"kruskal\">Kruskal's</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Loading State */}\r\n//         {loading && (\r\n//           <div className=\"flex flex-col items-center justify-center py-12 sm:py-16\">\r\n//             <div className=\"w-6 sm:w-8 h-6 sm:h-8 mb-3 sm:mb-4 border-2 sm:border-4 \r\n//                             border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\r\n//             <p className=\"text-gray-600 text-sm sm:text-base\">Loading history...</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Error State */}\r\n//         {error && (\r\n//           <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6\">\r\n//             <div className=\"flex items-start space-x-2 sm:space-x-3\">\r\n//               <span className=\"text-red-500 text-lg sm:text-xl flex-shrink-0\">❌</span>\r\n//               <div className=\"flex-1 min-w-0\">\r\n//                 <p className=\"text-red-800 text-sm sm:text-base\">\r\n//                   <strong>Error:</strong> {error}\r\n//                 </p>\r\n//                 <button \r\n//                   onClick={fetchHistory}\r\n//                   className=\"mt-2 px-3 sm:px-4 py-1.5 sm:py-2 bg-primary-600 hover:bg-primary-700 \r\n//                              text-white text-sm sm:text-base border-0 rounded-lg cursor-pointer\r\n//                              transition-colors duration-200\"\r\n//                 >\r\n//                   Retry\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Empty State */}\r\n//         {!loading && !error && history.length === 0 && (\r\n//           <div className=\"flex flex-col items-center justify-center py-12 sm:py-16 text-center\">\r\n//             <div className=\"w-16 sm:w-20 h-16 sm:h-20 mb-4 rounded-full bg-gray-100 \r\n//                             flex items-center justify-center\">\r\n//               <span className=\"text-2xl sm:text-3xl\">📊</span>\r\n//             </div>\r\n//             <h3 className=\"text-base sm:text-lg font-semibold text-gray-700 mb-2\">\r\n//               No execution history found\r\n//             </h3>\r\n//             <p className=\"text-sm sm:text-base text-gray-500 max-w-md\">\r\n//               {filter === 'all' \r\n//                 ? 'Run some algorithms to see their execution history here!'\r\n//                 : `No ${filter} algorithm executions found. Try a different filter or run some algorithms.`}\r\n//             </p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* History Results */}\r\n//         {!loading && !error && history.length > 0 && (\r\n//           <div className=\"space-y-4 sm:space-y-6\">\r\n//             {/* Results Count */}\r\n//             <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4\">\r\n//               <p className=\"text-blue-800 text-sm sm:text-base font-medium flex items-center\">\r\n//                 <span className=\"mr-2\">🔍</span>\r\n//                 Found {history.length} result{history.length !== 1 ? 's' : ''}\r\n//                 {filter !== 'all' && (\r\n//                   <span className=\"ml-1\">for {filter.replace('_', '-')} algorithm</span>\r\n//                 )}\r\n//               </p>\r\n//             </div>\r\n            \r\n//             {/* History Cards */}\r\n//             <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3 sm:gap-4 lg:gap-6\">\r\n//               {history.map((result) => (\r\n//                 <div\r\n//                   key={result._id}\r\n//                   className=\"border border-gray-200 rounded-lg sm:rounded-xl p-3 sm:p-4 lg:p-5 \r\n//                              bg-gray-50 hover:bg-white hover:border-primary-300 \r\n//                              transition-all duration-200 hover:shadow-lg\"\r\n//                 >\r\n//                   <div className=\"space-y-3 sm:space-y-4\">\r\n//                     {/* Algorithm Header */}\r\n//                     <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-start gap-2\">\r\n//                       <div className=\"flex-1 min-w-0\">\r\n//                         <div className=\"flex flex-wrap items-center gap-2 mb-1\">\r\n//                           <span className={`px-2 py-1 rounded-full text-xs sm:text-sm font-medium border\r\n//                                           ${getAlgorithmColor(result.algorithm)}`}>\r\n//                             {result.algorithm.replace('_', '-').toUpperCase()}\r\n//                           </span>\r\n//                         </div>\r\n//                         <h3 className=\"text-base sm:text-lg font-bold text-gray-900 truncate\">\r\n//                           {result.graphName}\r\n//                         </h3>\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                     {/* Execution Details */}\r\n//                     <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2 sm:gap-3 text-center\">\r\n//                       <div className=\"bg-white rounded-lg p-2 sm:p-3 border border-gray-100\">\r\n//                         <div className=\"text-sm sm:text-base font-bold text-gray-900\">\r\n//                           Node {result.source + 1}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500 font-medium\">\r\n//                           Source\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"bg-white rounded-lg p-2 sm:p-3 border border-gray-100\">\r\n//                         <div className=\"text-sm sm:text-base font-bold text-gray-900\">\r\n//                           {formatExecutionTime(result.executionTime)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500 font-medium\">\r\n//                           Runtime\r\n//                         </div>\r\n//                       </div>\r\n//                       <div className=\"bg-white rounded-lg p-2 sm:p-3 border border-gray-100 col-span-2 sm:col-span-1\">\r\n//                         <div className=\"text-xs sm:text-sm font-bold text-gray-900\">\r\n//                           {formatDate(result.createdAt)}\r\n//                         </div>\r\n//                         <div className=\"text-xs text-gray-500 font-medium\">\r\n//                           Executed\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                     {/* Graph Stats */}\r\n//                     {(result.nodeCount || result.edgeCount) && (\r\n//                       <div className=\"flex justify-center space-x-4 pt-2 border-t border-gray-200\">\r\n//                         {result.nodeCount && (\r\n//                           <div className=\"text-xs sm:text-sm text-gray-600\">\r\n//                             <span className=\"font-medium\">{result.nodeCount}</span> nodes\r\n//                           </div>\r\n//                         )}\r\n//                         {result.edgeCount && (\r\n//                           <div className=\"text-xs sm:text-sm text-gray-600\">\r\n//                             <span className=\"font-medium\">{result.edgeCount}</span> edges\r\n//                           </div>\r\n//                         )}\r\n//                       </div>\r\n//                     )}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ResultHistory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// function ResultHistory({ onClose }) {\r\n//   const [history, setHistory] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchHistory();\r\n//   }, []);\r\n\r\n//   const fetchHistory = async () => {\r\n//     try {\r\n//       console.log('Fetching history...');\r\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results/history');\r\n//       console.log('Response status:', response.status);\r\n      \r\n//       const data = await response.json();\r\n//       console.log('History data:', data);\r\n      \r\n//       if (data.success) {\r\n//         setHistory(data.data);\r\n//       } else {\r\n//         setError(data.error || 'Failed to fetch history');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error fetching history:', error);\r\n//       setError('Network error: ' + error.message);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     return new Date(dateString).toLocaleString();\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{\r\n//       position: 'fixed',\r\n//       top: 0,\r\n//       left: 0,\r\n//       right: 0,\r\n//       bottom: 0,\r\n//       backgroundColor: 'rgba(0,0,0,0.5)',\r\n//       display: 'flex',\r\n//       justifyContent: 'center',\r\n//       alignItems: 'center',\r\n//       zIndex: 1000\r\n//     }}>\r\n//       <div style={{\r\n//         backgroundColor: 'white',\r\n//         borderRadius: '16px',\r\n//         padding: '2rem',\r\n//         maxWidth: '800px',\r\n//         width: '90%',\r\n//         maxHeight: '80vh',\r\n//         overflowY: 'auto',\r\n//         boxShadow: '0 20px 40px rgba(0,0,0,0.3)'\r\n//       }}>\r\n//         <div style={{\r\n//           display: 'flex',\r\n//           justifyContent: 'space-between',\r\n//           alignItems: 'center',\r\n//           marginBottom: '1.5rem'\r\n//         }}>\r\n//           <h2 style={{ color: '#2563eb', margin: 0 }}>Algorithm Execution History</h2>\r\n//           <button\r\n//             onClick={onClose}\r\n//             style={{\r\n//               background: 'none',\r\n//               border: 'none',\r\n//               fontSize: '1.5rem',\r\n//               cursor: 'pointer',\r\n//               color: '#666'\r\n//             }}\r\n//           >\r\n//             ×\r\n//           </button>\r\n//         </div>\r\n\r\n//         {loading && (\r\n//           <div style={{ textAlign: 'center', padding: '2rem' }}>\r\n//             <p>Loading history...</p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {error && (\r\n//           <div style={{ \r\n//             textAlign: 'center', \r\n//             padding: '2rem',\r\n//             color: 'red',\r\n//             backgroundColor: '#fee2e2',\r\n//             borderRadius: '8px',\r\n//             marginBottom: '1rem'\r\n//           }}>\r\n//             <p><strong>Error:</strong> {error}</p>\r\n//             <button onClick={fetchHistory} style={{\r\n//               padding: '0.5rem 1rem',\r\n//               backgroundColor: '#2563eb',\r\n//               color: 'white',\r\n//               border: 'none',\r\n//               borderRadius: '4px',\r\n//               cursor: 'pointer',\r\n//               marginTop: '0.5rem'\r\n//             }}>\r\n//               Retry\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {!loading && !error && history.length === 0 && (\r\n//           <div style={{ textAlign: 'center', padding: '2rem' }}>\r\n//             <p>No algorithm execution history found.</p>\r\n//             <p style={{ color: '#6b7280', marginTop: '0.5rem' }}>\r\n//               Run some algorithms to see them here!\r\n//             </p>\r\n//           </div>\r\n//         )}\r\n\r\n//         {!loading && !error && history.length > 0 && (\r\n//           <div>\r\n//             <p style={{ marginBottom: '1rem', color: '#6b7280' }}>\r\n//               Found {history.length} result{history.length !== 1 ? 's' : ''}\r\n//             </p>\r\n            \r\n//             <div style={{ display: 'grid', gap: '1rem' }}>\r\n//               {history.map((result) => (\r\n//                 <div\r\n//                   key={result._id}\r\n//                   style={{\r\n//                     border: '1px solid #e5e7eb',\r\n//                     borderRadius: '8px',\r\n//                     padding: '1rem',\r\n//                     backgroundColor: '#f9fafb'\r\n//                   }}\r\n//                 >\r\n//                   <h3 style={{ margin: '0 0 0.5rem 0', color: '#1f2937' }}>\r\n//                     {result.algorithm.toUpperCase()} - {result.graphName}\r\n//                   </h3>\r\n//                   <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\r\n//                     <p>Source: Node {result.source}</p>\r\n//                     <p>Execution Time: {result.executionTime}ms</p>\r\n//                     <p>Created: {formatDate(result.createdAt)}</p>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ResultHistory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// function ResultHistory({ onClose, onLoadResult }) {\r\n//   const [history, setHistory] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [filter, setFilter] = useState('all');\r\n//   const [page, setPage] = useState(1);\r\n//   const [totalPages, setTotalPages] = useState(1);\r\n\r\n//   useEffect(() => {\r\n//     fetchHistory();\r\n//   }, [filter, page]);\r\n\r\n//   const fetchHistory = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const response = await fetch(\r\n//         `http://localhost:5000/api/db/graphs/results/history?algorithm=${filter}&page=${page}&limit=10`\r\n//       );\r\n//       const data = await response.json();\r\n      \r\n//       if (data.success) {\r\n//         setHistory(data.data);\r\n//         setTotalPages(data.totalPages);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error fetching history:', error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleDeleteResult = async (resultId) => {\r\n//     if (window.confirm('Are you sure you want to delete this result?')) {\r\n//       try {\r\n//         const response = await fetch(\r\n//           `http://localhost:5000/api/db/graphs/results/${resultId}`,\r\n//           { method: 'DELETE' }\r\n//         );\r\n        \r\n//         if (response.ok) {\r\n//           fetchHistory(); // Refresh the list\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error deleting result:', error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const formatDate = (dateString) => {\r\n//     return new Date(dateString).toLocaleString('en-US', {\r\n//       year: 'numeric',\r\n//       month: 'short',\r\n//       day: 'numeric',\r\n//       hour: '2-digit',\r\n//       minute: '2-digit'\r\n//     });\r\n//   };\r\n\r\n//   const formatExecutionTime = (time) => {\r\n//     if (time < 1000) {\r\n//       return `${time}ms`;\r\n//     }\r\n//     return `${(time / 1000).toFixed(2)}s`;\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{\r\n//       position: 'fixed',\r\n//       top: 0,\r\n//       left: 0,\r\n//       right: 0,\r\n//       bottom: 0,\r\n//       backgroundColor: 'rgba(0,0,0,0.5)',\r\n//       display: 'flex',\r\n//       justifyContent: 'center',\r\n//       alignItems: 'center',\r\n//       zIndex: 1000\r\n//     }}>\r\n//       <div style={{\r\n//         backgroundColor: 'white',\r\n//         borderRadius: '16px',\r\n//         padding: '2rem',\r\n//         maxWidth: '900px',\r\n//         width: '95%',\r\n//         maxHeight: '90vh',\r\n//         overflowY: 'auto',\r\n//         boxShadow: '0 20px 40px rgba(0,0,0,0.3)'\r\n//       }}>\r\n//         {/* Header */}\r\n//         <div style={{\r\n//           display: 'flex',\r\n//           justifyContent: 'space-between',\r\n//           alignItems: 'center',\r\n//           marginBottom: '1.5rem'\r\n//         }}>\r\n//           <h2 style={{ color: '#2563eb', margin: 0 }}>Algorithm Execution History</h2>\r\n//           <button\r\n//             onClick={onClose}\r\n//             style={{\r\n//               background: 'none',\r\n//               border: 'none',\r\n//               fontSize: '1.5rem',\r\n//               cursor: 'pointer',\r\n//               color: '#666'\r\n//             }}\r\n//           >\r\n//             ×\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Filter Controls */}\r\n//         <div style={{\r\n//           display: 'flex',\r\n//           gap: '1rem',\r\n//           marginBottom: '1.5rem',\r\n//           alignItems: 'center'\r\n//         }}>\r\n//           <label style={{ fontWeight: 'bold', color: '#374151' }}>\r\n//             Filter by Algorithm:\r\n//           </label>\r\n//           <select\r\n//             value={filter}\r\n//             onChange={(e) => {\r\n//               setFilter(e.target.value);\r\n//               setPage(1);\r\n//             }}\r\n//             style={{\r\n//               padding: '0.5rem',\r\n//               border: '1px solid #d1d5db',\r\n//               borderRadius: '8px',\r\n//               fontSize: '1rem'\r\n//             }}\r\n//           >\r\n//             <option value=\"all\">All Algorithms</option>\r\n//             <option value=\"dijkstra\">Dijkstra</option>\r\n//             <option value=\"bellman_ford\">Bellman-Ford</option>\r\n//             <option value=\"floyd_warshall\">Floyd-Warshall</option>\r\n//             <option value=\"prims\">Prim's</option>\r\n//             <option value=\"kruskal\">Kruskal's</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* History List */}\r\n//         {loading ? (\r\n//           <div style={{ textAlign: 'center', padding: '2rem' }}>\r\n//             <p>Loading history...</p>\r\n//           </div>\r\n//         ) : history.length === 0 ? (\r\n//           <div style={{ textAlign: 'center', padding: '2rem' }}>\r\n//             <p>No algorithm execution history found.</p>\r\n//             <p style={{ color: '#6b7280' }}>Run some algorithms to see them here!</p>\r\n//           </div>\r\n//         ) : (\r\n//           <div>\r\n//             <p style={{ marginBottom: '1rem', color: '#6b7280' }}>\r\n//               Found {history.length} result{history.length !== 1 ? 's' : ''} \r\n//               {filter !== 'all' && ` for ${filter}`}\r\n//             </p>\r\n            \r\n//             <div style={{ display: 'grid', gap: '1rem' }}>\r\n//               {history.map((result) => (\r\n//                 <div\r\n//                   key={result._id}\r\n//                   style={{\r\n//                     border: '1px solid #e5e7eb',\r\n//                     borderRadius: '8px',\r\n//                     padding: '1rem',\r\n//                     backgroundColor: '#f9fafb'\r\n//                   }}\r\n//                 >\r\n//                   <div style={{\r\n//                     display: 'flex',\r\n//                     justifyContent: 'space-between',\r\n//                     alignItems: 'flex-start'\r\n//                   }}>\r\n//                     <div style={{ flex: 1 }}>\r\n//                       <h3 style={{\r\n//                         margin: '0 0 0.5rem 0',\r\n//                         color: '#1f2937',\r\n//                         fontSize: '1.1rem'\r\n//                       }}>\r\n//                         {result.algorithm.replace('_', '-').toUpperCase()} - {result.graphName}\r\n//                       </h3>\r\n                      \r\n//                       <div style={{\r\n//                         display: 'grid',\r\n//                         gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\r\n//                         gap: '0.5rem',\r\n//                         marginBottom: '0.5rem'\r\n//                       }}>\r\n//                         <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\r\n//                           <strong>Source:</strong> Node {result.source}\r\n//                         </div>\r\n//                         <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\r\n//                           <strong>Nodes:</strong> {result.nodeCount}\r\n//                         </div>\r\n//                         <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\r\n//                           <strong>Edges:</strong> {result.edgeCount}\r\n//                         </div>\r\n//                         <div style={{ fontSize: '0.9rem', color: '#6b7280' }}>\r\n//                           <strong>Time:</strong> {formatExecutionTime(result.executionTime)}\r\n//                         </div>\r\n//                       </div>\r\n                      \r\n//                       <div style={{ fontSize: '0.8rem', color: '#9ca3af' }}>\r\n//                         Executed: {formatDate(result.createdAt)}\r\n//                       </div>\r\n//                     </div>\r\n                    \r\n//                     <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n//                       <button\r\n//                         onClick={() => onLoadResult(result)}\r\n//                         style={{\r\n//                           padding: '0.5rem 1rem',\r\n//                           backgroundColor: '#2563eb',\r\n//                           color: 'white',\r\n//                           border: 'none',\r\n//                           borderRadius: '6px',\r\n//                           cursor: 'pointer',\r\n//                           fontSize: '0.9rem'\r\n//                         }}\r\n//                       >\r\n//                         View\r\n//                       </button>\r\n//                       <button\r\n//                         onClick={() => handleDeleteResult(result._id)}\r\n//                         style={{\r\n//                           padding: '0.5rem 1rem',\r\n//                           backgroundColor: '#ef4444',\r\n//                           color: 'white',\r\n//                           border: 'none',\r\n//                           borderRadius: '6px',\r\n//                           cursor: 'pointer',\r\n//                           fontSize: '0.9rem'\r\n//                         }}\r\n//                       >\r\n//                         Delete\r\n//                       </button>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n\r\n//             {/* Pagination */}\r\n//             {totalPages > 1 && (\r\n//               <div style={{\r\n//                 display: 'flex',\r\n//                 justifyContent: 'center',\r\n//                 alignItems: 'center',\r\n//                 gap: '1rem',\r\n//                 marginTop: '2rem'\r\n//               }}>\r\n//                 <button\r\n//                   onClick={() => setPage(page - 1)}\r\n//                   disabled={page === 1}\r\n//                   style={{\r\n//                     padding: '0.5rem 1rem',\r\n//                     border: '1px solid #d1d5db',\r\n//                     borderRadius: '6px',\r\n//                     backgroundColor: page === 1 ? '#f3f4f6' : 'white',\r\n//                     cursor: page === 1 ? 'not-allowed' : 'pointer'\r\n//                   }}\r\n//                 >\r\n//                   Previous\r\n//                 </button>\r\n                \r\n//                 <span style={{ color: '#6b7280' }}>\r\n//                   Page {page} of {totalPages}\r\n//                 </span>\r\n                \r\n//                 <button\r\n//                   onClick={() => setPage(page + 1)}\r\n//                   disabled={page === totalPages}\r\n//                   style={{\r\n//                     padding: '0.5rem 1rem',\r\n//                     border: '1px solid #d1d5db',\r\n//                     borderRadius: '6px',\r\n//                     backgroundColor: page === totalPages ? '#f3f4f6' : 'white',\r\n//                     cursor: page === totalPages ? 'not-allowed' : 'pointer'\r\n//                   }}\r\n//                 >\r\n//                   Next\r\n//                 </button>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ResultHistory;\r\n\r\n"],"mappings":"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CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}