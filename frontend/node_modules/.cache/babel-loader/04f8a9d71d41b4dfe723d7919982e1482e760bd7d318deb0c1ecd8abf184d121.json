{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajat\\\\Desktop\\\\Graph_Visualizer\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport GraphVisualizer from './components/GraphVisualizer';\nimport Controls from './components/Controls';\nimport OutputPanel from './components/OutputPanel';\nimport SaveGraphModal from './components/SaveGraphModal';\nimport GraphLibrary from './components/GraphLibrary';\nimport ResultHistory from './components/ResultHistory';\nimport Login from './components/Auth/Login';\nimport Signup from './components/Auth/Signup';\nimport { runAlgorithm } from './api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [algorithm, setAlgorithm] = useState('dijkstra');\n  const [source, setSource] = useState(0);\n  const [output, setOutput] = useState(null);\n  const [showSaveModal, setShowSaveModal] = useState(false);\n  const [showLibrary, setShowLibrary] = useState(false);\n  const [showHistory, setShowHistory] = useState(false);\n  const [currentGraphName, setCurrentGraphName] = useState('');\n  const [currentGraphId, setCurrentGraphId] = useState(null);\n\n  // Authentication state\n  const [showAuth, setShowAuth] = useState(false);\n  const [authMode, setAuthMode] = useState('login'); // 'login' or 'signup'\n\n  // ✅ UPDATED: Enhanced handleRun with anonymous user prompt\n  const handleRun = async (src = source, edg = edges, algo = algorithm) => {\n    if (nodes.length === 0) {\n      alert('Please add some nodes first!');\n      return;\n    }\n    if (edg.length === 0) {\n      alert('Please add some edges first!');\n      return;\n    }\n    const requestBody = {\n      nodes: nodes.map((_, idx) => idx),\n      edges: edg.map(({\n        from,\n        to,\n        weight\n      }) => ({\n        from: from,\n        to: to,\n        weight: Number(weight)\n      })),\n      source: src,\n      algorithm: algo\n    };\n    try {\n      setOutput({\n        loading: true\n      });\n      const startTime = Date.now();\n      const result = await runAlgorithm(requestBody);\n      const executionTime = Date.now() - startTime;\n      result.executionTime = executionTime;\n      setOutput(result);\n\n      // ✅ ADDED: Prompt anonymous users after successful algorithm run\n      if (!user && result && !result.error) {\n        setTimeout(() => {\n          if (window.confirm(\"🎉 Love these results? Sign up to save and organize your work! It's free and takes just a minute.\")) {\n            setAuthMode('signup');\n            setShowAuth(true);\n          }\n        }, 2500); // 2.5-second delay to let user see results\n      }\n\n      // // Save results only if user is authenticated  \n      // if (user) {\n      //   await saveAlgorithmResult(result, executionTime, src, algo);\n      // }\n    } catch (error) {\n      console.error(\"Algorithm failed:\", error);\n      setOutput({\n        error: `Algorithm failed: ${error.message}`\n      });\n    }\n  };\n\n  //   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\n  //   // Only save if user is authenticated\n  //   if (!user) {\n  //     console.log('User not authenticated, skipping result save');\n  //     return;\n  //   }\n\n  //   try {\n  //     const resultData = {\n  //       graphName: currentGraphName || 'Untitled Graph',\n  //       algorithm,\n  //       source,\n  //       result,\n  //       executionTime,\n  //       nodeCount: nodes.length,\n  //       edgeCount: edges.length\n  //       // Remove createdBy - backend will use authenticated user\n  //     };\n\n  //     const token = localStorage.getItem('token');\n  //     const response = await fetch('http://localhost:5000/api/graphs/algorithms/results', {\n  //       method: 'POST',\n  //       headers: { \n  //         'Content-Type': 'application/json',\n  //         'Authorization': `Bearer ${token}` // ✅ Added missing auth token\n  //       },\n  //       body: JSON.stringify(resultData)\n  //     });\n\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       console.log('Result saved successfully:', data);\n  //     } else {\n  //       const errorData = await response.json();\n  //       console.error('Failed to save result:', errorData);\n  //     }\n  //   } catch (error) {\n  //     console.error('Error saving algorithm result:', error);\n  //   }\n  // };\n\n  const handleSaveGraph = savedGraph => {\n    setCurrentGraphName(savedGraph.name);\n    setCurrentGraphId(savedGraph._id);\n    alert(`Graph \"${savedGraph.name}\" saved successfully!`);\n  };\n  const handleLoadGraph = graphData => {\n    setNodes(graphData.nodes);\n    setEdges(graphData.edges);\n    setCurrentGraphName(graphData.name);\n    setCurrentGraphId(graphData._id);\n    setOutput(null);\n    alert(`Graph \"${graphData.name}\" loaded successfully!`);\n  };\n  const clearGraph = () => {\n    setNodes([]);\n    setEdges([]);\n    setOutput(null);\n    setCurrentGraphName('');\n    setCurrentGraphId(null);\n  };\n\n  // ✅ ADDED: Enhanced save graph handler with anonymous user prompt\n  const handleSaveGraphClick = () => {\n    if (!user) {\n      if (window.confirm(\"💾 Sign up to save your graphs and track your algorithm history! Create a free account now?\")) {\n        setAuthMode('signup');\n        setShowAuth(true);\n      }\n      return;\n    }\n    setShowSaveModal(true);\n  };\n\n  // ✅ ADDED: Enhanced library handler with anonymous user prompt\n  const handleLibraryClick = () => {\n    if (!user) {\n      if (window.confirm(\"📚 Sign up to access your personal graph library! Create a free account to save and organize your work?\")) {\n        setAuthMode('signup');\n        setShowAuth(true);\n      }\n      return;\n    }\n    setShowLibrary(true);\n  };\n\n  // ✅ ADDED: Enhanced history handler with anonymous user prompt\n  const handleHistoryClick = () => {\n    if (!user) {\n      if (window.confirm(\"📈 Sign up to track your algorithm execution history! See your progress and performance over time?\")) {\n        setAuthMode('signup');\n        setShowAuth(true);\n      }\n      return;\n    }\n    setShowHistory(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center py-4 sm:py-6 lg:py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\",\n        children: \"Shortest Distance Path Visualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), user && currentGraphName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 sm:mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\",\n          children: [\"Current Graph: \", currentGraphName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\",\n      children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveGraphClick,\n          disabled: nodes.length === 0,\n          className: `\n                px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n                rounded-lg font-semibold text-sm sm:text-base\n                transition-all duration-200 transform hover:scale-105\n                ${nodes.length === 0 ? 'bg-gray-400 cursor-not-allowed text-white' : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'}\n              `,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline sm:hidden\",\n            children: \"\\uD83D\\uDCBE Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hidden sm:inline\",\n            children: \"\\uD83D\\uDCBE Save Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLibraryClick,\n          className: \"\\r px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\\r bg-indigo-500 hover:bg-indigo-600 text-white\\r rounded-lg font-semibold text-sm sm:text-base\\r transition-all duration-200 transform hover:scale-105\\r shadow-lg hover:shadow-xl\\r \",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline sm:hidden\",\n            children: \"\\uD83D\\uDCDA Load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hidden sm:inline\",\n            children: \"\\uD83D\\uDCDA Load Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleHistoryClick,\n          className: \"\\r px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\\r bg-purple-500 hover:bg-purple-600 text-white\\r rounded-lg font-semibold text-sm sm:text-base\\r transition-all duration-200 transform hover:scale-105\\r shadow-lg hover:shadow-xl\\r \",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline sm:hidden\",\n            children: \"\\uD83D\\uDCC8 History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hidden sm:inline\",\n            children: \"\\uD83D\\uDCC8 View History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearGraph,\n          disabled: nodes.length === 0,\n          className: `\n                px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n                rounded-lg font-semibold text-sm sm:text-base\n                transition-all duration-200 transform hover:scale-105\n                ${nodes.length === 0 ? 'bg-gray-400 cursor-not-allowed text-white' : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'}\n              `,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline sm:hidden\",\n            children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hidden sm:inline\",\n            children: \"\\uD83D\\uDDD1\\uFE0F Clear Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hidden sm:flex items-center bg-green-100 text-green-800 px-3 py-2 rounded-full\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium\",\n              children: [\"\\uD83D\\uDC4B \", user.firstName || user.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: logout,\n            className: \"\\r px-3 py-2 sm:px-4 sm:py-2.5\\r bg-gray-500 hover:bg-gray-600 text-white\\r rounded-lg font-semibold text-sm sm:text-base\\r transition-all duration-200\\r \",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setAuthMode('login');\n            setShowAuth(true);\n          },\n          className: \"\\r px-4 py-2 sm:px-6 sm:py-3\\r bg-blue-600 hover:bg-blue-700 text-white\\r rounded-lg font-semibold text-sm sm:text-base\\r transition-all duration-200 transform hover:scale-105\\r shadow-lg hover:shadow-xl\\r \",\n          children: \"\\uD83D\\uDD10 Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setAuthMode('signup');\n            setShowAuth(true);\n          },\n          className: \"\\r px-4 py-2 sm:px-6 sm:py-3\\r border-2 border-blue-600 text-blue-600 hover:bg-blue-50\\r rounded-lg font-semibold text-sm sm:text-base\\r transition-all duration-200 transform hover:scale-105\\r \",\n          children: \"\\u2728 Sign Up Free\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 ml-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveGraphClick,\n            className: \"\\r px-3 py-2 sm:px-4 sm:py-2.5\\r bg-orange-100 text-orange-700 border border-orange-300\\r rounded-lg font-semibold text-sm sm:text-base\\r transition-all duration-200 hover:bg-orange-200\\r \",\n            title: \"Sign up to unlock save functionality\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline sm:hidden\",\n              children: \"\\uD83D\\uDD12 Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hidden sm:inline\",\n              children: \"\\uD83D\\uDD12 Sign Up to Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"\\r flex flex-col lg:flex-row \\r justify-center items-start \\r gap-4 sm:gap-6 lg:gap-8 \\r max-w-7xl mx-auto \\r px-4 sm:px-6 lg:px-8\\r mb-8\\r \",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"\\r w-full lg:w-2/3 xl:w-3/5\\r bg-white rounded-xl sm:rounded-2xl \\r shadow-lg hover:shadow-xl \\r transition-shadow duration-300\\r p-4 sm:p-6 lg:p-8\\r min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\\r \",\n        children: /*#__PURE__*/_jsxDEV(GraphVisualizer, {\n          nodes: nodes,\n          edges: edges,\n          output: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"\\r w-full lg:w-1/3 xl:w-2/5\\r flex flex-col gap-4 sm:gap-6\\r \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\\r bg-white rounded-xl sm:rounded-2xl \\r shadow-md hover:shadow-lg \\r transition-shadow duration-300\\r p-4 sm:p-6\\r \",\n          children: /*#__PURE__*/_jsxDEV(Controls, {\n            nodes: nodes,\n            setNodes: setNodes,\n            edges: edges,\n            setEdges: setEdges,\n            algorithm: algorithm,\n            setAlgorithm: setAlgorithm,\n            source: source,\n            setSource: setSource,\n            onRun: handleRun\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\\r bg-gray-50 rounded-xl sm:rounded-2xl \\r shadow-md hover:shadow-lg \\r transition-shadow duration-300\\r p-4 sm:p-6\\r \",\n          children: /*#__PURE__*/_jsxDEV(OutputPanel, {\n            output: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    /* ✅ UPDATED: Enhanced welcome screen with better messaging */\n    _jsxDEV(\"main\", {\n      className: \"flex flex-col items-center justify-center py-12 sm:py-20 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center max-w-4xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-20 sm:w-24 h-20 sm:h-24 mx-auto mb-6 bg-blue-100 rounded-full \\r flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-3xl sm:text-4xl\",\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-800 mb-4 sm:mb-6\",\n          children: \"Welcome to Path Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-base sm:text-lg text-gray-600 mb-6 sm:mb-8 leading-relaxed\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Try it now!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), \" Create graphs and run algorithms instantly. Sign up to save your work and unlock advanced features - it's completely free!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 mb-8 sm:mb-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl p-4 sm:p-6 shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl sm:text-3xl mb-3\",\n              children: \"\\uD83C\\uDFAF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-gray-800 mb-2\",\n              children: \"Interactive Creation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Build graphs with point-and-click interface\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl p-4 sm:p-6 shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl sm:text-3xl mb-3\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-gray-800 mb-2\",\n              children: \"Algorithm Visualization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: \"See Dijkstra, Prim's, and more in action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl p-4 sm:p-6 shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl sm:text-3xl mb-3\",\n              children: \"\\uD83D\\uDCBE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-gray-800 mb-2\",\n              children: \"Private Storage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Save and organize your graphs securely\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl p-4 sm:p-6 shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl sm:text-3xl mb-3\",\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-gray-800 mb-2\",\n              children: \"Execution History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Track your algorithm performance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl p-4 sm:p-6 shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl sm:text-3xl mb-3\",\n              children: \"\\uD83D\\uDCF1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-gray-800 mb-2\",\n              children: \"Responsive Design\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Works perfectly on all devices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-xl p-4 sm:p-6 shadow-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl sm:text-3xl mb-3\",\n              children: \"\\uD83D\\uDD10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-gray-800 mb-2\",\n              children: \"Secure & Private\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Your data stays safe and personal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAuthMode('signup');\n              setShowAuth(true);\n            },\n            className: \"\\r px-6 sm:px-8 py-3 sm:py-4\\r bg-blue-600 hover:bg-blue-700 text-white\\r rounded-lg font-bold text-base sm:text-lg\\r transition-all duration-200 transform hover:scale-105\\r shadow-lg hover:shadow-xl\\r \",\n            children: \"\\uD83D\\uDE80 Get Started - Sign Up Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setAuthMode('login');\n              setShowAuth(true);\n            },\n            className: \"\\r px-6 sm:px-8 py-3 sm:py-4\\r border-2 border-blue-600 text-blue-600 hover:bg-blue-50\\r rounded-lg font-bold text-base sm:text-lg\\r transition-all duration-200 transform hover:scale-105\\r \",\n            children: \"Already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this), showAuth && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: authMode === 'login' ? /*#__PURE__*/_jsxDEV(Login, {\n        onClose: () => setShowAuth(false),\n        switchToSignup: () => setAuthMode('signup')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Signup, {\n        onClose: () => setShowAuth(false),\n        switchToLogin: () => setAuthMode('login')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), user && showSaveModal && /*#__PURE__*/_jsxDEV(SaveGraphModal, {\n      nodes: nodes,\n      edges: edges,\n      onSave: handleSaveGraph,\n      onClose: () => setShowSaveModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }, this), user && showLibrary && /*#__PURE__*/_jsxDEV(GraphLibrary, {\n      onLoadGraph: handleLoadGraph,\n      onClose: () => setShowLibrary(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }, this), user && showHistory && /*#__PURE__*/_jsxDEV(ResultHistory, {\n      onClose: () => setShowHistory(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"\\r bg-white/90 backdrop-blur-sm border-t border-gray-200\\r py-6 sm:py-8 text-center\\r text-sm sm:text-base text-gray-600 mt-12\\r \",\n      children: [\"Made with \\u2764\\uFE0F by\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/Lalit-Kumar-Yadav-DTU\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors\",\n        children: \"Lalit Kumar Yadav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\n// Main App component with AuthProvider wrapper\n_s(AppContent, \"pLLYPYNirGqumOiDM/K3OMT9/tY=\", false, function () {\n  return [useAuth];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 546,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import { AuthProvider, useAuth } from './contexts/AuthContext';\n// import GraphVisualizer from './components/GraphVisualizer';\n// import Controls from './components/Controls';\n// import OutputPanel from './components/OutputPanel';\n// import SaveGraphModal from './components/SaveGraphModal';\n// import GraphLibrary from './components/GraphLibrary';\n// import ResultHistory from './components/ResultHistory';\n// import Login from './components/Auth/Login';\n// import Signup from './components/Auth/Signup';\n// import { runAlgorithm } from './api';\n\n// function AppContent() {\n//   const { user, logout } = useAuth();\n//   const [nodes, setNodes] = useState([]);\n//   const [edges, setEdges] = useState([]);\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\n//   const [source, setSource] = useState(0);\n//   const [output, setOutput] = useState(null);\n//   const [showSaveModal, setShowSaveModal] = useState(false);\n//   const [showLibrary, setShowLibrary] = useState(false);\n//   const [showHistory, setShowHistory] = useState(false);\n//   const [currentGraphName, setCurrentGraphName] = useState('');\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\n\n//   // Authentication state\n//   const [showAuth, setShowAuth] = useState(false);\n//   const [authMode, setAuthMode] = useState('login'); // 'login' or 'signup'\n\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\n//     if (nodes.length === 0) {\n//       alert('Please add some nodes first!');\n//       return;\n//     }\n\n//     if (edg.length === 0) {\n//       alert('Please add some edges first!');\n//       return;\n//     }\n\n//     const requestBody = {\n//       nodes: nodes.map((_, idx) => idx),\n//       edges: edg.map(({ from, to, weight }) => ({\n//         from: from,\n//         to: to,\n//         weight: Number(weight)\n//       })),\n//       source: src,\n//       algorithm: algo\n//     };\n\n//     try {\n//       setOutput({ loading: true });\n//       const startTime = Date.now();\n//       const result = await runAlgorithm(requestBody);\n//       const executionTime = Date.now() - startTime;\n\n//       result.executionTime = executionTime;\n//       setOutput(result);\n\n//       await saveAlgorithmResult(result, executionTime, src, algo);\n//     } catch (error) {\n//       console.error(\"Algorithm failed:\", error);\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\n//     }\n//   };\n\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\n//     try {\n//       const resultData = {\n//         graphName: currentGraphName || 'Untitled Graph',\n//         algorithm,\n//         source,\n//         result,\n//         executionTime,\n//         nodeCount: nodes.length,\n//         edgeCount: edges.length,\n//         createdBy: user ? user.username : 'Guest'\n//       };\n\n//       const token = localStorage.getItem('token');\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\n//         method: 'POST',\n//         headers: { \n//           'Content-Type': 'application/json',\n//           ...(token && { 'Authorization': `Bearer ${token}` })\n//         },\n//         body: JSON.stringify(resultData)\n//       });\n\n//       if (response.ok) {\n//         console.log('Result saved successfully!');\n//       } else {\n//         console.error('Failed to save result:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error saving algorithm result:', error);\n//     }\n//   };\n\n//   const handleSaveGraph = (savedGraph) => {\n//     setCurrentGraphName(savedGraph.name);\n//     setCurrentGraphId(savedGraph._id);\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\n//   };\n\n//   const handleLoadGraph = (graphData) => {\n//     setNodes(graphData.nodes);\n//     setEdges(graphData.edges);\n//     setCurrentGraphName(graphData.name);\n//     setCurrentGraphId(graphData._id);\n//     setOutput(null);\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\n//   };\n\n//   const clearGraph = () => {\n//     setNodes([]);\n//     setEdges([]);\n//     setOutput(null);\n//     setCurrentGraphName('');\n//     setCurrentGraphId(null);\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\n//       {/* Header */}\n//       <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\n//         <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\n//           Shortest Distance Path Visualizer\n//         </h1>\n//         {user && currentGraphName && (\n//           <div className=\"mt-2 sm:mt-3\">\n//             <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\n//               Current Graph: {currentGraphName}\n//             </span>\n//           </div>\n//         )}\n//       </header>\n\n//       {/* Action Buttons */}\n//       <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\n//         {user ? (\n//           <>\n//             {/* Existing buttons - only show when authenticated */}\n//             <button\n//               onClick={() => setShowSaveModal(true)}\n//               disabled={nodes.length === 0}\n//               className={`\n//                 px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//                 rounded-lg font-semibold text-sm sm:text-base\n//                 transition-all duration-200 transform hover:scale-105\n//                 ${nodes.length === 0 \n//                   ? 'bg-gray-400 cursor-not-allowed text-white' \n//                   : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\n//                 }\n//               `}\n//             >\n//               <span className=\"inline sm:hidden\">💾 Save</span>\n//               <span className=\"hidden sm:inline\">💾 Save Graph</span>\n//             </button>\n\n//             <button\n//               onClick={() => setShowLibrary(true)}\n//               className=\"\n//                 px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//                 bg-indigo-500 hover:bg-indigo-600 text-white\n//                 rounded-lg font-semibold text-sm sm:text-base\n//                 transition-all duration-200 transform hover:scale-105\n//                 shadow-lg hover:shadow-xl\n//               \"\n//             >\n//               <span className=\"inline sm:hidden\">📚 Load</span>\n//               <span className=\"hidden sm:inline\">📚 Load Graph</span>\n//             </button>\n\n//             <button\n//               onClick={() => setShowHistory(true)}\n//               className=\"\n//                 px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//                 bg-purple-500 hover:bg-purple-600 text-white\n//                 rounded-lg font-semibold text-sm sm:text-base\n//                 transition-all duration-200 transform hover:scale-105\n//                 shadow-lg hover:shadow-xl\n//               \"\n//             >\n//               <span className=\"inline sm:hidden\">📈 History</span>\n//               <span className=\"hidden sm:inline\">📈 View History</span>\n//             </button>\n\n//             <button\n//               onClick={clearGraph}\n//               disabled={nodes.length === 0}\n//               className={`\n//                 px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//                 rounded-lg font-semibold text-sm sm:text-base\n//                 transition-all duration-200 transform hover:scale-105\n//                 ${nodes.length === 0 \n//                   ? 'bg-gray-400 cursor-not-allowed text-white' \n//                   : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\n//                 }\n//               `}\n//             >\n//               <span className=\"inline sm:hidden\">🗑️ Clear</span>\n//               <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\n//             </button>\n\n//             {/* User Menu */}\n//             <div className=\"flex items-center gap-2 ml-4\">\n//               <div className=\"hidden sm:flex items-center bg-green-100 text-green-800 px-3 py-2 rounded-full\">\n//                 <span className=\"text-sm font-medium\">\n//                   👋 {user.firstName || user.username}\n//                 </span>\n//               </div>\n//               <button\n//                 onClick={logout}\n//                 className=\"\n//                   px-3 py-2 sm:px-4 sm:py-2.5\n//                   bg-gray-500 hover:bg-gray-600 text-white\n//                   rounded-lg font-semibold text-sm sm:text-base\n//                   transition-all duration-200\n//                 \"\n//               >\n//                 Logout\n//               </button>\n//             </div>\n//           </>\n//         ) : (\n//           <>\n//             {/* Authentication buttons when not logged in */}\n//             <button\n//               onClick={() => {\n//                 setAuthMode('login');\n//                 setShowAuth(true);\n//               }}\n//               className=\"\n//                 px-4 py-2 sm:px-6 sm:py-3\n//                 bg-blue-600 hover:bg-blue-700 text-white\n//                 rounded-lg font-semibold text-sm sm:text-base\n//                 transition-all duration-200 transform hover:scale-105\n//                 shadow-lg hover:shadow-xl\n//               \"\n//             >\n//               🔐 Login\n//             </button>\n//             <button\n//               onClick={() => {\n//                 setAuthMode('signup');\n//                 setShowAuth(true);\n//               }}\n//               className=\"\n//                 px-4 py-2 sm:px-6 sm:py-3\n//                 border-2 border-blue-600 text-blue-600 hover:bg-blue-50\n//                 rounded-lg font-semibold text-sm sm:text-base\n//                 transition-all duration-200 transform hover:scale-105\n//               \"\n//             >\n//               ✨ Sign Up\n//             </button>\n//           </>\n//         )}\n//       </div>\n\n//       {/* Main Content - Show different content based on authentication */}\n//       {user ? (\n//         <main className=\"\n//           flex flex-col lg:flex-row \n//           justify-center items-start \n//           gap-4 sm:gap-6 lg:gap-8 \n//           max-w-7xl mx-auto \n//           px-4 sm:px-6 lg:px-8\n//           mb-8\n//         \">\n//           {/* Graph Visualizer Section */}\n//           <section className=\"\n//             w-full lg:w-2/3 xl:w-3/5\n//             bg-white rounded-xl sm:rounded-2xl \n//             shadow-lg hover:shadow-xl \n//             transition-shadow duration-300\n//             p-4 sm:p-6 lg:p-8\n//             min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\n//           \">\n//             <GraphVisualizer nodes={nodes} edges={edges} output={output} />\n//           </section>\n\n//           {/* Controls and Output Sidebar */}\n//           <aside className=\"\n//             w-full lg:w-1/3 xl:w-2/5\n//             flex flex-col gap-4 sm:gap-6\n//           \">\n//             {/* Controls Panel */}\n//             <div className=\"\n//               bg-white rounded-xl sm:rounded-2xl \n//               shadow-md hover:shadow-lg \n//               transition-shadow duration-300\n//               p-4 sm:p-6\n//             \">\n//               <Controls\n//                 nodes={nodes}\n//                 setNodes={setNodes}\n//                 edges={edges}\n//                 setEdges={setEdges}\n//                 algorithm={algorithm}\n//                 setAlgorithm={setAlgorithm}\n//                 source={source}\n//                 setSource={setSource}\n//                 onRun={handleRun}\n//               />\n//             </div>\n\n//             {/* Output Panel */}\n//             <div className=\"\n//               bg-gray-50 rounded-xl sm:rounded-2xl \n//               shadow-md hover:shadow-lg \n//               transition-shadow duration-300\n//               p-4 sm:p-6\n//             \">\n//               <OutputPanel output={output} />\n//             </div>\n//           </aside>\n//         </main>\n//       ) : (\n//         /* Welcome screen for unauthenticated users */\n//         <main className=\"flex flex-col items-center justify-center py-12 sm:py-20 px-4\">\n//           <div className=\"text-center max-w-4xl\">\n//             <div className=\"w-20 sm:w-24 h-20 sm:h-24 mx-auto mb-6 bg-blue-100 rounded-full \n//                             flex items-center justify-center\">\n//               <span className=\"text-3xl sm:text-4xl\">🎯</span>\n//             </div>\n//             <h2 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-800 mb-4 sm:mb-6\">\n//               Welcome to Path Visualizer\n//             </h2>\n//             <p className=\"text-base sm:text-lg text-gray-600 mb-6 sm:mb-8 leading-relaxed\">\n//               Create an account to start visualizing graph algorithms, save your work privately, \n//               and track your progress. Your graphs and results will be secure and personal to you.\n//             </p>\n\n//             {/* Features Grid */}\n//             <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 mb-8 sm:mb-12\">\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">🎯</div>\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Interactive Creation</h3>\n//                 <p className=\"text-sm text-gray-600\">Build graphs with point-and-click interface</p>\n//               </div>\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">⚡</div>\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Algorithm Visualization</h3>\n//                 <p className=\"text-sm text-gray-600\">See Dijkstra, Prim's, and more in action</p>\n//               </div>\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">💾</div>\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Private Storage</h3>\n//                 <p className=\"text-sm text-gray-600\">Save and organize your graphs securely</p>\n//               </div>\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">📊</div>\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Execution History</h3>\n//                 <p className=\"text-sm text-gray-600\">Track your algorithm performance</p>\n//               </div>\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">📱</div>\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Responsive Design</h3>\n//                 <p className=\"text-sm text-gray-600\">Works perfectly on all devices</p>\n//               </div>\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">🔐</div>\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Secure & Private</h3>\n//                 <p className=\"text-sm text-gray-600\">Your data stays safe and personal</p>\n//               </div>\n//             </div>\n\n//             {/* Call to Action */}\n//             <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center\">\n//               <button\n//                 onClick={() => {\n//                   setAuthMode('signup');\n//                   setShowAuth(true);\n//                 }}\n//                 className=\"\n//                   px-6 sm:px-8 py-3 sm:py-4\n//                   bg-blue-600 hover:bg-blue-700 text-white\n//                   rounded-lg font-bold text-base sm:text-lg\n//                   transition-all duration-200 transform hover:scale-105\n//                   shadow-lg hover:shadow-xl\n//                 \"\n//               >\n//                 🚀 Get Started - Sign Up Free\n//               </button>\n//               <button\n//                 onClick={() => {\n//                   setAuthMode('login');\n//                   setShowAuth(true);\n//                 }}\n//                 className=\"\n//                   px-6 sm:px-8 py-3 sm:py-4\n//                   border-2 border-blue-600 text-blue-600 hover:bg-blue-50\n//                   rounded-lg font-bold text-base sm:text-lg\n//                   transition-all duration-200 transform hover:scale-105\n//                 \"\n//               >\n//                 Already have an account?\n//               </button>\n//             </div>\n//           </div>\n//         </main>\n//       )}\n\n//       {/* Authentication Modals */}\n//       {showAuth && (\n//         <>\n//           {authMode === 'login' ? (\n//             <Login \n//               onClose={() => setShowAuth(false)}\n//               switchToSignup={() => setAuthMode('signup')}\n//             />\n//           ) : (\n//             <Signup \n//               onClose={() => setShowAuth(false)}\n//               switchToLogin={() => setAuthMode('login')}\n//             />\n//           )}\n//         </>\n//       )}\n\n//       {/* Existing Modals - Only show when authenticated */}\n//       {user && showSaveModal && (\n//         <SaveGraphModal\n//           nodes={nodes}\n//           edges={edges}\n//           onSave={handleSaveGraph}\n//           onClose={() => setShowSaveModal(false)}\n//         />\n//       )}\n\n//       {user && showLibrary && (\n//         <GraphLibrary\n//           onLoadGraph={handleLoadGraph}\n//           onClose={() => setShowLibrary(false)}\n//         />\n//       )}\n\n//       {user && showHistory && (\n//         <ResultHistory\n//           onClose={() => setShowHistory(false)}\n//         />\n//       )}\n\n//       {/* Footer */}\n//       <footer className=\"\n//         bg-white/90 backdrop-blur-sm border-t border-gray-200\n//         py-6 sm:py-8 text-center\n//         text-sm sm:text-base text-gray-600 mt-12\n//       \">\n//         Made with ❤️ by{' '}\n//         <a\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors\"\n//         >\n//           Lalit Kumar Yadav\n//         </a>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// // Main App component with AuthProvider wrapper\n// function App() {\n//   return (\n//     <AuthProvider>\n//       <AppContent />\n//     </AuthProvider>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import GraphVisualizer from './components/GraphVisualizer';\n// import Controls from './components/Controls';\n// import OutputPanel from './components/OutputPanel';\n// import SaveGraphModal from './components/SaveGraphModal';\n// import GraphLibrary from './components/GraphLibrary';\n// import ResultHistory from './components/ResultHistory';\n// import { runAlgorithm } from './api';\n\n// function App() {\n//   const [nodes, setNodes] = useState([]);\n//   const [edges, setEdges] = useState([]);\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\n//   const [source, setSource] = useState(0);\n//   const [output, setOutput] = useState(null);\n//   const [showSaveModal, setShowSaveModal] = useState(false);\n//   const [showLibrary, setShowLibrary] = useState(false);\n//   const [showHistory, setShowHistory] = useState(false);\n//   const [currentGraphName, setCurrentGraphName] = useState('');\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\n\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\n//     if (nodes.length === 0) {\n//       alert('Please add some nodes first!');\n//       return;\n//     }\n\n//     if (edg.length === 0) {\n//       alert('Please add some edges first!');\n//       return;\n//     }\n\n//     const requestBody = {\n//       nodes: nodes.map((_, idx) => idx),\n//       edges: edg.map(({ from, to, weight }) => ({\n//         from: from,\n//         to: to,\n//         weight: Number(weight)\n//       })),\n//       source: src,\n//       algorithm: algo\n//     };\n\n//     try {\n//       setOutput({ loading: true });\n//       const startTime = Date.now();\n//       const result = await runAlgorithm(requestBody);\n//       const executionTime = Date.now() - startTime;\n\n//       result.executionTime = executionTime;\n//       setOutput(result);\n\n//       await saveAlgorithmResult(result, executionTime, src, algo);\n//     } catch (error) {\n//       console.error(\"Algorithm failed:\", error);\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\n//     }\n//   };\n\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\n//     try {\n//       const resultData = {\n//         graphName: currentGraphName || 'Untitled Graph',\n//         algorithm,\n//         source,\n//         result,\n//         executionTime,\n//         nodeCount: nodes.length,\n//         edgeCount: edges.length,\n//         createdBy: 'Lalit Kumar Yadav'\n//       };\n\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(resultData)\n//       });\n\n//       if (response.ok) {\n//         console.log('Result saved successfully!');\n//       } else {\n//         console.error('Failed to save result:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error saving algorithm result:', error);\n//     }\n//   };\n\n//   const handleSaveGraph = (savedGraph) => {\n//     setCurrentGraphName(savedGraph.name);\n//     setCurrentGraphId(savedGraph._id);\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\n//   };\n\n//   const handleLoadGraph = (graphData) => {\n//     setNodes(graphData.nodes);\n//     setEdges(graphData.edges);\n//     setCurrentGraphName(graphData.name);\n//     setCurrentGraphId(graphData._id);\n//     setOutput(null);\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\n//   };\n\n//   const clearGraph = () => {\n//     setNodes([]);\n//     setEdges([]);\n//     setOutput(null);\n//     setCurrentGraphName('');\n//     setCurrentGraphId(null);\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\n//       {/* Header */}\n//       <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\n//         <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\n//           Shortest Distance Path Visualizer\n//         </h1>\n//         {currentGraphName && (\n//           <div className=\"mt-2 sm:mt-3\">\n//             <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\n//               Current Graph: {currentGraphName}\n//             </span>\n//           </div>\n//         )}\n//       </header>\n\n//       {/* Action Buttons */}\n//       <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\n//         <button\n//           onClick={() => setShowSaveModal(true)}\n//           disabled={nodes.length === 0}\n//           className={`\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             ${nodes.length === 0 \n//               ? 'bg-gray-400 cursor-not-allowed text-white' \n//               : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\n//             }\n//           `}\n//         >\n//           <span className=\"inline sm:hidden\">💾 Save</span>\n//           <span className=\"hidden sm:inline\">💾 Save Graph</span>\n//         </button>\n\n//         <button\n//           onClick={() => setShowLibrary(true)}\n//           className=\"\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             bg-indigo-500 hover:bg-indigo-600 text-white\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             shadow-lg hover:shadow-xl\n//           \"\n//         >\n//           <span className=\"inline sm:hidden\">📚 Load</span>\n//           <span className=\"hidden sm:inline\">📚 Load Graph</span>\n//         </button>\n\n//         <button\n//           onClick={() => setShowHistory(true)}\n//           className=\"\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             bg-purple-500 hover:bg-purple-600 text-white\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             shadow-lg hover:shadow-xl\n//           \"\n//         >\n//           <span className=\"inline sm:hidden\">📈 History</span>\n//           <span className=\"hidden sm:inline\">📈 View History</span>\n//         </button>\n\n//         <button\n//           onClick={clearGraph}\n//           disabled={nodes.length === 0}\n//           className={`\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             ${nodes.length === 0 \n//               ? 'bg-gray-400 cursor-not-allowed text-white' \n//               : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\n//             }\n//           `}\n//         >\n//           <span className=\"inline sm:hidden\">🗑️ Clear</span>\n//           <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\n//         </button>\n//       </div>\n\n//       {/* Main Content - Removed excessive bottom padding since footer is not fixed */}\n//       <main className=\"\n//         flex flex-col lg:flex-row \n//         justify-center items-start \n//         gap-4 sm:gap-6 lg:gap-8 \n//         max-w-7xl mx-auto \n//         px-4 sm:px-6 lg:px-8\n//         mb-8\n//       \">\n//         {/* Graph Visualizer Section */}\n//         <section className=\"\n//           w-full lg:w-2/3 xl:w-3/5\n//           bg-white rounded-xl sm:rounded-2xl \n//           shadow-lg hover:shadow-xl \n//           transition-shadow duration-300\n//           p-4 sm:p-6 lg:p-8\n//           min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\n//         \">\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\n//         </section>\n\n//         {/* Controls and Output Sidebar */}\n//         <aside className=\"\n//           w-full lg:w-1/3 xl:w-2/5\n//           flex flex-col gap-4 sm:gap-6\n//         \">\n//           {/* Controls Panel */}\n//           <div className=\"\n//             bg-white rounded-xl sm:rounded-2xl \n//             shadow-md hover:shadow-lg \n//             transition-shadow duration-300\n//             p-4 sm:p-6\n//           \">\n//             <Controls\n//               nodes={nodes}\n//               setNodes={setNodes}\n//               edges={edges}\n//               setEdges={setEdges}\n//               algorithm={algorithm}\n//               setAlgorithm={setAlgorithm}\n//               source={source}\n//               setSource={setSource}\n//               onRun={handleRun}\n//             />\n//           </div>\n\n//           {/* Output Panel */}\n//           <div className=\"\n//             bg-gray-50 rounded-xl sm:rounded-2xl \n//             shadow-md hover:shadow-lg \n//             transition-shadow duration-300\n//             p-4 sm:p-6\n//           \">\n//             <OutputPanel output={output} />\n//           </div>\n//         </aside>\n//       </main>\n\n//       {/* Modals */}\n//       {showSaveModal && (\n//         <SaveGraphModal\n//           nodes={nodes}\n//           edges={edges}\n//           onSave={handleSaveGraph}\n//           onClose={() => setShowSaveModal(false)}\n//         />\n//       )}\n\n//       {showLibrary && (\n//         <GraphLibrary\n//           onLoadGraph={handleLoadGraph}\n//           onClose={() => setShowLibrary(false)}\n//         />\n//       )}\n\n//       {showHistory && (\n//         <ResultHistory\n//           onClose={() => setShowHistory(false)}\n//         />\n//       )}\n\n//       {/* Footer - Now in normal document flow */}\n//       <footer className=\"\n//         bg-white/90 backdrop-blur-sm border-t border-gray-200\n//         py-6 sm:py-8 text-center\n//         text-sm sm:text-base text-gray-600 mt-12\n//       \">\n//         Made with ❤️ by{' '}\n//         <a\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors\"\n//         >\n//           Lalit Kumar Yadav\n//         </a>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import GraphVisualizer from './components/GraphVisualizer';\n// import Controls from './components/Controls';\n// import OutputPanel from './components/OutputPanel';\n// import SaveGraphModal from './components/SaveGraphModal';\n// import GraphLibrary from './components/GraphLibrary';\n// import ResultHistory from './components/ResultHistory';\n// import { runAlgorithm } from './api';\n\n// function App() {\n//   const [nodes, setNodes] = useState([]);\n//   const [edges, setEdges] = useState([]);\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\n//   const [source, setSource] = useState(0);\n//   const [output, setOutput] = useState(null);\n//   const [showSaveModal, setShowSaveModal] = useState(false);\n//   const [showLibrary, setShowLibrary] = useState(false);\n//   const [showHistory, setShowHistory] = useState(false);\n//   const [currentGraphName, setCurrentGraphName] = useState('');\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\n\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\n//     if (nodes.length === 0) {\n//       alert('Please add some nodes first!');\n//       return;\n//     }\n\n//     if (edg.length === 0) {\n//       alert('Please add some edges first!');\n//       return;\n//     }\n\n//     const requestBody = {\n//       nodes: nodes.map((_, idx) => idx),\n//       edges: edg.map(({ from, to, weight }) => ({\n//         from: from,\n//         to: to,\n//         weight: Number(weight)\n//       })),\n//       source: src,\n//       algorithm: algo\n//     };\n\n//     try {\n//       setOutput({ loading: true });\n//       const startTime = Date.now();\n//       const result = await runAlgorithm(requestBody);\n//       const executionTime = Date.now() - startTime;\n\n//       result.executionTime = executionTime;\n//       setOutput(result);\n\n//       await saveAlgorithmResult(result, executionTime, src, algo);\n//     } catch (error) {\n//       console.error(\"Algorithm failed:\", error);\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\n//     }\n//   };\n\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\n//     try {\n//       const resultData = {\n//         graphName: currentGraphName || 'Untitled Graph',\n//         algorithm,\n//         source,\n//         result,\n//         executionTime,\n//         nodeCount: nodes.length,\n//         edgeCount: edges.length,\n//         createdBy: 'Lalit Kumar Yadav'\n//       };\n\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(resultData)\n//       });\n\n//       if (response.ok) {\n//         console.log('Result saved successfully!');\n//       } else {\n//         console.error('Failed to save result:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error saving algorithm result:', error);\n//     }\n//   };\n\n//   const handleSaveGraph = (savedGraph) => {\n//     setCurrentGraphName(savedGraph.name);\n//     setCurrentGraphId(savedGraph._id);\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\n//   };\n\n//   const handleLoadGraph = (graphData) => {\n//     setNodes(graphData.nodes);\n//     setEdges(graphData.edges);\n//     setCurrentGraphName(graphData.name);\n//     setCurrentGraphId(graphData._id);\n//     setOutput(null);\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\n//   };\n\n//   const clearGraph = () => {\n//     setNodes([]);\n//     setEdges([]);\n//     setOutput(null);\n//     setCurrentGraphName('');\n//     setCurrentGraphId(null);\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\n//       {/* Header */}\n//       <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\n//         <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\n//           Shortest Distance Path Visualizer\n//         </h1>\n//         {currentGraphName && (\n//           <div className=\"mt-2 sm:mt-3\">\n//             <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\n//               Current Graph: {currentGraphName}\n//             </span>\n//           </div>\n//         )}\n//       </header>\n\n//       {/* Action Buttons */}\n//       <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\n//         <button\n//           onClick={() => setShowSaveModal(true)}\n//           disabled={nodes.length === 0}\n//           className={`\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             ${nodes.length === 0 \n//               ? 'bg-gray-400 cursor-not-allowed text-white' \n//               : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\n//             }\n//           `}\n//         >\n//           <span className=\"inline sm:hidden\">💾 Save</span>\n//           <span className=\"hidden sm:inline\">💾 Save Graph</span>\n//         </button>\n\n//         <button\n//           onClick={() => setShowLibrary(true)}\n//           className=\"\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             bg-indigo-500 hover:bg-indigo-600 text-white\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             shadow-lg hover:shadow-xl\n//           \"\n//         >\n//           <span className=\"inline sm:hidden\">📚 Load</span>\n//           <span className=\"hidden sm:inline\">📚 Load Graph</span>\n//         </button>\n\n//         <button\n//           onClick={() => setShowHistory(true)}\n//           className=\"\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             bg-purple-500 hover:bg-purple-600 text-white\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             shadow-lg hover:shadow-xl\n//           \"\n//         >\n//           <span className=\"inline sm:hidden\">📈 History</span>\n//           <span className=\"hidden sm:inline\">📈 View History</span>\n//         </button>\n\n//         <button\n//           onClick={clearGraph}\n//           disabled={nodes.length === 0}\n//           className={`\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             ${nodes.length === 0 \n//               ? 'bg-gray-400 cursor-not-allowed text-white' \n//               : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\n//             }\n//           `}\n//         >\n//           <span className=\"inline sm:hidden\">🗑️ Clear</span>\n//           <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\n//         </button>\n//       </div>\n\n//       {/* Main Content - FIXED: Increased bottom padding for mobile */}\n//       <main className=\"\n//         flex flex-col lg:flex-row \n//         justify-center items-start \n//         gap-4 sm:gap-6 lg:gap-8 \n//         max-w-7xl mx-auto \n//         px-4 sm:px-6 lg:px-8\n//         pb-28 sm:pb-24 lg:pb-20\n//       \">\n//         {/* Graph Visualizer Section */}\n//         <section className=\"\n//           w-full lg:w-2/3 xl:w-3/5\n//           bg-white rounded-xl sm:rounded-2xl \n//           shadow-lg hover:shadow-xl \n//           transition-shadow duration-300\n//           p-4 sm:p-6 lg:p-8\n//           min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\n//         \">\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\n//         </section>\n\n//         {/* Controls and Output Sidebar */}\n//         <aside className=\"\n//           w-full lg:w-1/3 xl:w-2/5\n//           flex flex-col gap-4 sm:gap-6\n//         \">\n//           {/* Controls Panel */}\n//           <div className=\"\n//             bg-white rounded-xl sm:rounded-2xl \n//             shadow-md hover:shadow-lg \n//             transition-shadow duration-300\n//             p-4 sm:p-6\n//           \">\n//             <Controls\n//               nodes={nodes}\n//               setNodes={setNodes}\n//               edges={edges}\n//               setEdges={setEdges}\n//               algorithm={algorithm}\n//               setAlgorithm={setAlgorithm}\n//               source={source}\n//               setSource={setSource}\n//               onRun={handleRun}\n//             />\n//           </div>\n\n//           {/* Output Panel */}\n//           <div className=\"\n//             bg-gray-50 rounded-xl sm:rounded-2xl \n//             shadow-md hover:shadow-lg \n//             transition-shadow duration-300\n//             p-4 sm:p-6\n//           \">\n//             <OutputPanel output={output} />\n//           </div>\n//         </aside>\n//       </main>\n\n//       {/* Modals */}\n//       {showSaveModal && (\n//         <SaveGraphModal\n//           nodes={nodes}\n//           edges={edges}\n//           onSave={handleSaveGraph}\n//           onClose={() => setShowSaveModal(false)}\n//         />\n//       )}\n\n//       {showLibrary && (\n//         <GraphLibrary\n//           onLoadGraph={handleLoadGraph}\n//           onClose={() => setShowLibrary(false)}\n//         />\n//       )}\n\n//       {showHistory && (\n//         <ResultHistory\n//           onClose={() => setShowHistory(false)}\n//         />\n//       )}\n\n//       {/* Footer - FIXED: Added safe area support and better mobile handling */}\n//       <footer className=\"\n//         fixed bottom-0 left-0 right-0 z-50\n//         bg-white/90 backdrop-blur-sm border-t border-gray-200\n//         py-2 sm:py-3 text-center\n//         text-xs sm:text-sm lg:text-base text-gray-600\n//         pb-safe-area-inset-bottom\n//         min-h-[60px] sm:min-h-[56px]\n//       \">\n//         <div className=\"flex items-center justify-center h-full\">\n//           Made with ❤️ by{' '}\n//           <a\n//             href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//             className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors ml-1\"\n//           >\n//             Lalit Kumar Yadav\n//           </a>\n//         </div>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import GraphVisualizer from './components/GraphVisualizer';\n// import Controls from './components/Controls';\n// import OutputPanel from './components/OutputPanel';\n// import SaveGraphModal from './components/SaveGraphModal';\n// import GraphLibrary from './components/GraphLibrary';\n// import ResultHistory from './components/ResultHistory';\n// import { runAlgorithm } from './api';\n\n// function App() {\n//   const [nodes, setNodes] = useState([]);\n//   const [edges, setEdges] = useState([]);\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\n//   const [source, setSource] = useState(0);\n//   const [output, setOutput] = useState(null);\n//   const [showSaveModal, setShowSaveModal] = useState(false);\n//   const [showLibrary, setShowLibrary] = useState(false);\n//   const [showHistory, setShowHistory] = useState(false);\n//   const [currentGraphName, setCurrentGraphName] = useState('');\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\n\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\n//     if (nodes.length === 0) {\n//       alert('Please add some nodes first!');\n//       return;\n//     }\n\n//     if (edg.length === 0) {\n//       alert('Please add some edges first!');\n//       return;\n//     }\n\n//     const requestBody = {\n//       nodes: nodes.map((_, idx) => idx),\n//       edges: edg.map(({ from, to, weight }) => ({\n//         from: from,\n//         to: to,\n//         weight: Number(weight)\n//       })),\n//       source: src,\n//       algorithm: algo\n//     };\n\n//     try {\n//       setOutput({ loading: true });\n//       const startTime = Date.now();\n//       const result = await runAlgorithm(requestBody);\n//       const executionTime = Date.now() - startTime;\n\n//       result.executionTime = executionTime;\n//       setOutput(result);\n\n//       await saveAlgorithmResult(result, executionTime, src, algo);\n//     } catch (error) {\n//       console.error(\"Algorithm failed:\", error);\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\n//     }\n//   };\n\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\n//     try {\n//       const resultData = {\n//         graphName: currentGraphName || 'Untitled Graph',\n//         algorithm,\n//         source,\n//         result,\n//         executionTime,\n//         nodeCount: nodes.length,\n//         edgeCount: edges.length,\n//         createdBy: 'Lalit Kumar Yadav'\n//       };\n\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(resultData)\n//       });\n\n//       if (response.ok) {\n//         console.log('Result saved successfully!');\n//       } else {\n//         console.error('Failed to save result:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error saving algorithm result:', error);\n//     }\n//   };\n\n//   const handleSaveGraph = (savedGraph) => {\n//     setCurrentGraphName(savedGraph.name);\n//     setCurrentGraphId(savedGraph._id);\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\n//   };\n\n//   const handleLoadGraph = (graphData) => {\n//     setNodes(graphData.nodes);\n//     setEdges(graphData.edges);\n//     setCurrentGraphName(graphData.name);\n//     setCurrentGraphId(graphData._id);\n//     setOutput(null);\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\n//   };\n\n//   const clearGraph = () => {\n//     setNodes([]);\n//     setEdges([]);\n//     setOutput(null);\n//     setCurrentGraphName('');\n//     setCurrentGraphId(null);\n//   };\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\n//       {/* Header */}\n//       <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\n//         <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\n//           Shortest Distance Path Visualizer\n//         </h1>\n//         {currentGraphName && (\n//           <div className=\"mt-2 sm:mt-3\">\n//             <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\n//               Current Graph: {currentGraphName}\n//             </span>\n//           </div>\n//         )}\n//       </header>\n\n//       {/* Action Buttons */}\n//       <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\n//         <button\n//           onClick={() => setShowSaveModal(true)}\n//           disabled={nodes.length === 0}\n//           className={`\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             ${nodes.length === 0 \n//               ? 'bg-gray-400 cursor-not-allowed text-white' \n//               : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\n//             }\n//           `}\n//         >\n//           <span className=\"inline sm:hidden\">💾 Save</span>\n//           <span className=\"hidden sm:inline\">💾 Save Graph</span>\n//         </button>\n\n//         <button\n//           onClick={() => setShowLibrary(true)}\n//           className=\"\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             bg-indigo-500 hover:bg-indigo-600 text-white\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             shadow-lg hover:shadow-xl\n//           \"\n//         >\n//           <span className=\"inline sm:hidden\">📚 Load</span>\n//           <span className=\"hidden sm:inline\">📚 Load Graph</span>\n//         </button>\n\n//         <button\n//           onClick={() => setShowHistory(true)}\n//           className=\"\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             bg-purple-500 hover:bg-purple-600 text-white\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             shadow-lg hover:shadow-xl\n//           \"\n//         >\n//           <span className=\"inline sm:hidden\">📈 History</span>\n//           <span className=\"hidden sm:inline\">📈 View History</span>\n//         </button>\n\n//         <button\n//           onClick={clearGraph}\n//           disabled={nodes.length === 0}\n//           className={`\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\n//             rounded-lg font-semibold text-sm sm:text-base\n//             transition-all duration-200 transform hover:scale-105\n//             ${nodes.length === 0 \n//               ? 'bg-gray-400 cursor-not-allowed text-white' \n//               : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\n//             }\n//           `}\n//         >\n//           <span className=\"inline sm:hidden\">🗑️ Clear</span>\n//           <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\n//         </button>\n//       </div>\n\n//       {/* Main Content */}\n//       <main className=\"\n//         flex flex-col lg:flex-row \n//         justify-center items-start \n//         gap-4 sm:gap-6 lg:gap-8 \n//         max-w-7xl mx-auto \n//         px-4 sm:px-6 lg:px-8\n//         pb-20\n//       \">\n//         {/* Graph Visualizer Section */}\n//         <section className=\"\n//           w-full lg:w-2/3 xl:w-3/5\n//           bg-white rounded-xl sm:rounded-2xl \n//           shadow-lg hover:shadow-xl \n//           transition-shadow duration-300\n//           p-4 sm:p-6 lg:p-8\n//           min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\n//         \">\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\n//         </section>\n\n//         {/* Controls and Output Sidebar */}\n//         <aside className=\"\n//           w-full lg:w-1/3 xl:w-2/5\n//           flex flex-col gap-4 sm:gap-6\n//         \">\n//           {/* Controls Panel */}\n//           <div className=\"\n//             bg-white rounded-xl sm:rounded-2xl \n//             shadow-md hover:shadow-lg \n//             transition-shadow duration-300\n//             p-4 sm:p-6\n//           \">\n//             <Controls\n//               nodes={nodes}\n//               setNodes={setNodes}\n//               edges={edges}\n//               setEdges={setEdges}\n//               algorithm={algorithm}\n//               setAlgorithm={setAlgorithm}\n//               source={source}\n//               setSource={setSource}\n//               onRun={handleRun}\n//             />\n//           </div>\n\n//           {/* Output Panel */}\n//           <div className=\"\n//             bg-gray-50 rounded-xl sm:rounded-2xl \n//             shadow-md hover:shadow-lg \n//             transition-shadow duration-300\n//             p-4 sm:p-6\n//           \">\n//             <OutputPanel output={output} />\n//           </div>\n//         </aside>\n//       </main>\n\n//       {/* Modals */}\n//       {showSaveModal && (\n//         <SaveGraphModal\n//           nodes={nodes}\n//           edges={edges}\n//           onSave={handleSaveGraph}\n//           onClose={() => setShowSaveModal(false)}\n//         />\n//       )}\n\n//       {showLibrary && (\n//         <GraphLibrary\n//           onLoadGraph={handleLoadGraph}\n//           onClose={() => setShowLibrary(false)}\n//         />\n//       )}\n\n//       {showHistory && (\n//         <ResultHistory\n//           onClose={() => setShowHistory(false)}\n//         />\n//       )}\n\n//       {/* Footer */}\n//       <footer className=\"\n//         fixed bottom-0 left-0 right-0 z-50\n//         bg-white/80 backdrop-blur-sm border-t border-gray-200\n//         py-2 sm:py-3 text-center\n//         text-sm sm:text-base text-gray-600\n//       \">\n//         Made with ❤️ by{' '}\n//         <a\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors\"\n//         >\n//           Lalit Kumar Yadav\n//         </a>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import GraphVisualizer from './components/GraphVisualizer';\n// import Controls from './components/Controls';\n// import OutputPanel from './components/OutputPanel';\n// import SaveGraphModal from './components/SaveGraphModal';\n// import GraphLibrary from './components/GraphLibrary';\n// import ResultHistory from './components/ResultHistory';\n// import { runAlgorithm } from './api';\n\n// function App() {\n//   const [nodes, setNodes] = useState([]);\n//   const [edges, setEdges] = useState([]);\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\n//   const [source, setSource] = useState(0);\n//   const [output, setOutput] = useState(null);\n//   const [showSaveModal, setShowSaveModal] = useState(false);\n//   const [showLibrary, setShowLibrary] = useState(false);\n//   const [showHistory, setShowHistory] = useState(false);\n//   const [currentGraphName, setCurrentGraphName] = useState('');\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\n\n//   // Responsive state management\n//   const [isMobile, setIsMobile] = useState(false);\n\n//   useEffect(() => {\n//     const checkScreenSize = () => {\n//       setIsMobile(window.innerWidth <= 768);\n//     };\n\n//     checkScreenSize();\n//     window.addEventListener('resize', checkScreenSize);\n//     return () => window.removeEventListener('resize', checkScreenSize);\n//   }, []);\n\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\n//     if (nodes.length === 0) {\n//       alert('Please add some nodes first!');\n//       return;\n//     }\n\n//     if (edg.length === 0) {\n//       alert('Please add some edges first!');\n//       return;\n//     }\n\n//     const requestBody = {\n//       nodes: nodes.map((_, idx) => idx),\n//       edges: edg.map(({ from, to, weight }) => ({\n//         from: from,\n//         to: to,\n//         weight: Number(weight)\n//       })),\n//       source: src,\n//       algorithm: algo\n//     };\n\n//     try {\n//       setOutput({ loading: true });\n//       const startTime = Date.now();\n//       const result = await runAlgorithm(requestBody);\n//       const executionTime = Date.now() - startTime;\n\n//       result.executionTime = executionTime;\n//       setOutput(result);\n\n//       // Auto-save result to history\n//       await saveAlgorithmResult(result, executionTime, src, algo);\n//     } catch (error) {\n//       console.error(\"Algorithm failed:\", error);\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\n//     }\n//   };\n\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\n//     try {\n//       const resultData = {\n//         graphName: currentGraphName || 'Untitled Graph',\n//         algorithm,\n//         source,\n//         result,\n//         executionTime,\n//         nodeCount: nodes.length,\n//         edgeCount: edges.length,\n//         createdBy: 'Lalit Kumar Yadav'\n//       };\n\n//       console.log('Saving result:', resultData);\n\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(resultData)\n//       });\n\n//       if (response.ok) {\n//         console.log('Result saved successfully!');\n//       } else {\n//         console.error('Failed to save result:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error saving algorithm result:', error);\n//     }\n//   };\n\n//   const handleSaveGraph = (savedGraph) => {\n//     setCurrentGraphName(savedGraph.name);\n//     setCurrentGraphId(savedGraph._id);\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\n//   };\n\n//   const handleLoadGraph = (graphData) => {\n//     setNodes(graphData.nodes);\n//     setEdges(graphData.edges);\n//     setCurrentGraphName(graphData.name);\n//     setCurrentGraphId(graphData._id);\n//     setOutput(null);\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\n//   };\n\n//   const clearGraph = () => {\n//     setNodes([]);\n//     setEdges([]);\n//     setOutput(null);\n//     setCurrentGraphName('');\n//     setCurrentGraphId(null);\n//   };\n\n//   return (\n//     <div style={{\n//       minHeight: '100vh',\n//       background: 'linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%)',\n//       fontFamily: 'Segoe UI, sans-serif',\n//       padding: '0',\n//       margin: '0'\n//     }}>\n//       <header style={{\n//         textAlign: 'center',\n//         padding: isMobile ? '1rem 0' : '2rem 0 1rem 0',\n//         fontSize: isMobile ? '1.8rem' : '2.5rem',\n//         fontWeight: 'bold',\n//         color: '#3a3a3a',\n//         letterSpacing: '1px'\n//       }}>\n//         Shortest Distance Path Visualizer\n//         {currentGraphName && (\n//           <div style={{\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             color: '#2563eb',\n//             fontWeight: 'normal',\n//             marginTop: '0.5rem'\n//           }}>\n//             Current Graph: {currentGraphName}\n//           </div>\n//         )}\n//       </header>\n\n//       {/* Action Buttons */}\n//       <div style={{\n//         textAlign: 'center',\n//         marginBottom: '1.5rem',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         gap: isMobile ? '0.5rem' : '1rem',\n//         flexWrap: 'wrap',\n//         padding: '0 1rem'\n//       }}>\n//         <button\n//           onClick={() => setShowSaveModal(true)}\n//           disabled={nodes.length === 0}\n//           style={{\n//             background: nodes.length === 0 ? '#9ca3af' : '#10b981',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '8px',\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\n//             fontWeight: 'bold',\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             cursor: nodes.length === 0 ? 'not-allowed' : 'pointer'\n//           }}\n//         >\n//           💾 {isMobile ? 'Save' : 'Save Graph'}\n//         </button>\n\n//         <button\n//           onClick={() => setShowLibrary(true)}\n//           style={{\n//             background: '#6366f1',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '8px',\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\n//             fontWeight: 'bold',\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             cursor: 'pointer'\n//           }}\n//         >\n//           📚 {isMobile ? 'Load' : 'Load Graph'}\n//         </button>\n\n//         <button\n//           onClick={() => setShowHistory(true)}\n//           style={{\n//             background: '#8b5cf6',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '8px',\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\n//             fontWeight: 'bold',\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             cursor: 'pointer'\n//           }}\n//         >\n//           📈 {isMobile ? 'History' : 'View History'}\n//         </button>\n\n//         <button\n//           onClick={clearGraph}\n//           disabled={nodes.length === 0}\n//           style={{\n//             background: nodes.length === 0 ? '#9ca3af' : '#ef4444',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '8px',\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\n//             fontWeight: 'bold',\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             cursor: nodes.length === 0 ? 'not-allowed' : 'pointer'\n//           }}\n//         >\n//           🗑️ {isMobile ? 'Clear' : 'Clear Graph'}\n//         </button>\n//       </div>\n\n//       <main style={{\n//         display: 'flex',\n//         flexDirection: isMobile ? 'column' : 'row',\n//         justifyContent: 'center',\n//         alignItems: 'flex-start',\n//         gap: isMobile ? '1rem' : '2rem',\n//         margin: '0 auto',\n//         maxWidth: '1400px',\n//         padding: '0 1rem'\n//       }}>\n//         <section style={{\n//           flex: isMobile ? '1' : '2',\n//           width: isMobile ? '100%' : 'auto',\n//           minWidth: isMobile ? '100%' : '400px',\n//           background: '#fff',\n//           borderRadius: '20px',\n//           boxShadow: '0 6px 24px rgba(80,120,180,0.10)',\n//           padding: isMobile ? '1rem' : '2rem',\n//           marginBottom: '2rem'\n//         }}>\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\n//         </section>\n\n//         <aside style={{\n//           flex: '1',\n//           width: isMobile ? '100%' : 'auto',\n//           minWidth: isMobile ? '100%' : '300px',\n//           display: 'flex',\n//           flexDirection: 'column',\n//           gap: isMobile ? '1rem' : '2rem'\n//         }}>\n//           <div style={{\n//             background: '#fff',\n//             borderRadius: '16px',\n//             boxShadow: '0 4px 16px rgba(120,120,120,0.10)',\n//             padding: '1.5rem'\n//           }}>\n//             <Controls\n//               nodes={nodes}\n//               setNodes={setNodes}\n//               edges={edges}\n//               setEdges={setEdges}\n//               algorithm={algorithm}\n//               setAlgorithm={setAlgorithm}\n//               source={source}\n//               setSource={setSource}\n//               onRun={handleRun}\n//             />\n//           </div>\n\n//           <div style={{\n//             background: '#f9fafb',\n//             borderRadius: '16px',\n//             boxShadow: '0 2px 8px rgba(120,120,120,0.07)',\n//             padding: '1.5rem'\n//           }}>\n//             <OutputPanel output={output} />\n//           </div>\n//         </aside>\n//       </main>\n\n//       {/* Modals */}\n//       {showSaveModal && (\n//         <SaveGraphModal\n//           nodes={nodes}\n//           edges={edges}\n//           onSave={handleSaveGraph}\n//           onClose={() => setShowSaveModal(false)}\n//         />\n//       )}\n\n//       {showLibrary && (\n//         <GraphLibrary\n//           onLoadGraph={handleLoadGraph}\n//           onClose={() => setShowLibrary(false)}\n//         />\n//       )}\n\n//       {showHistory && (\n//         <ResultHistory\n//           onClose={() => setShowHistory(false)}\n//         />\n//       )}\n\n//       <footer style={{\n//         width: '100%',\n//         textAlign: 'center',\n//         padding: '1rem 0',\n//         background: 'transparent',\n//         fontSize: '1.1rem',\n//         color: '#555',\n//         position: 'fixed',\n//         left: 0,\n//         bottom: 0,\n//         zIndex: 100\n//       }}>\n//         Made with ❤️ by <a\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           style={{ color: '#2563eb', textDecoration: 'underline', fontWeight: 'bold' }}\n//         >\n//           Lalit Kumar Yadav\n//         </a>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import GraphVisualizer from './components/GraphVisualizer';\n// import Controls from './components/Controls';\n// import OutputPanel from './components/OutputPanel';\n// import SaveGraphModal from './components/SaveGraphModal';\n// import GraphLibrary from './components/GraphLibrary';\n// import ResultHistory from './components/ResultHistory';\n// import { runAlgorithm } from './api';\n\n// function App() {\n//   const [nodes, setNodes] = useState([]);\n//   const [edges, setEdges] = useState([]);\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\n//   const [source, setSource] = useState(0);\n//   const [output, setOutput] = useState(null);\n//   const [showSaveModal, setShowSaveModal] = useState(false);\n//   const [showLibrary, setShowLibrary] = useState(false);\n//   const [showHistory, setShowHistory] = useState(false);\n//   const [currentGraphName, setCurrentGraphName] = useState('');\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\n\n//   // Responsive state management\n//   const [isMobile, setIsMobile] = useState(false);\n\n//   useEffect(() => {\n//     const checkScreenSize = () => {\n//       setIsMobile(window.innerWidth <= 768);\n//     };\n\n//     checkScreenSize();\n//     window.addEventListener('resize', checkScreenSize);\n//     return () => window.removeEventListener('resize', checkScreenSize);\n//   }, []);\n\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\n//     if (nodes.length === 0) {\n//       alert('Please add some nodes first!');\n//       return;\n//     }\n\n//     if (edg.length === 0) {\n//       alert('Please add some edges first!');\n//       return;\n//     }\n\n//     const requestBody = {\n//       nodes: nodes.map((_, idx) => idx),\n//       edges: edg.map(({ from, to, weight }) => ({\n//         from: from,\n//         to: to,\n//         weight: Number(weight)\n//       })),\n//       source: src,\n//       algorithm: algo\n//     };\n\n//     try {\n//       setOutput({ loading: true });\n//       const startTime = Date.now();\n//       const result = await runAlgorithm(requestBody);\n//       const executionTime = Date.now() - startTime;\n\n//       result.executionTime = executionTime;\n//       setOutput(result);\n\n//       // Auto-save result to history\n//       await saveAlgorithmResult(result, executionTime, src, algo);\n//     } catch (error) {\n//       console.error(\"Algorithm failed:\", error);\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\n//     }\n//   };\n\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\n//     try {\n//       const resultData = {\n//         graphName: currentGraphName || 'Untitled Graph',\n//         algorithm,\n//         source,\n//         result,\n//         executionTime,\n//         nodeCount: nodes.length,\n//         edgeCount: edges.length,\n//         createdBy: 'Lalit Kumar Yadav'\n//       };\n\n//       console.log('Saving result:', resultData);\n\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(resultData)\n//       });\n\n//       if (response.ok) {\n//         console.log('Result saved successfully!');\n//       } else {\n//         console.error('Failed to save result:', response.status);\n//       }\n//     } catch (error) {\n//       console.error('Error saving algorithm result:', error);\n//     }\n//   };\n\n//   const handleSaveGraph = (savedGraph) => {\n//     setCurrentGraphName(savedGraph.name);\n//     setCurrentGraphId(savedGraph._id);\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\n//   };\n\n//   const handleLoadGraph = (graphData) => {\n//     setNodes(graphData.nodes);\n//     setEdges(graphData.edges);\n//     setCurrentGraphName(graphData.name);\n//     setCurrentGraphId(graphData._id);\n//     setOutput(null);\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\n//   };\n\n//   const clearGraph = () => {\n//     setNodes([]);\n//     setEdges([]);\n//     setOutput(null);\n//     setCurrentGraphName('');\n//     setCurrentGraphId(null);\n//   };\n\n//   return (\n//     <div style={{\n//       minHeight: '100vh',\n//       background: 'linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%)',\n//       fontFamily: 'Segoe UI, sans-serif',\n//       padding: '0',\n//       margin: '0'\n//     }}>\n//       <header style={{\n//         textAlign: 'center',\n//         padding: isMobile ? '1rem 0' : '2rem 0 1rem 0',\n//         fontSize: isMobile ? '1.8rem' : '2.5rem',\n//         fontWeight: 'bold',\n//         color: '#3a3a3a',\n//         letterSpacing: '1px'\n//       }}>\n//         Shortest Distance Path Visualizer\n//         {currentGraphName && (\n//           <div style={{\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             color: '#2563eb',\n//             fontWeight: 'normal',\n//             marginTop: '0.5rem'\n//           }}>\n//             Current Graph: {currentGraphName}\n//           </div>\n//         )}\n//       </header>\n\n//       {/* Action Buttons */}\n//       <div style={{\n//         textAlign: 'center',\n//         marginBottom: '1.5rem',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         gap: isMobile ? '0.5rem' : '1rem',\n//         flexWrap: 'wrap',\n//         padding: '0 1rem'\n//       }}>\n//         <button\n//           onClick={() => setShowSaveModal(true)}\n//           disabled={nodes.length === 0}\n//           style={{\n//             background: nodes.length === 0 ? '#9ca3af' : '#10b981',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '8px',\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\n//             fontWeight: 'bold',\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             cursor: nodes.length === 0 ? 'not-allowed' : 'pointer'\n//           }}\n//         >\n//           💾 {isMobile ? 'Save' : 'Save Graph'}\n//         </button>\n\n//         <button\n//           onClick={() => setShowLibrary(true)}\n//           style={{\n//             background: '#6366f1',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '8px',\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\n//             fontWeight: 'bold',\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             cursor: 'pointer'\n//           }}\n//         >\n//           📚 {isMobile ? 'Load' : 'Load Graph'}\n//         </button>\n\n//         <button\n//           onClick={() => setShowHistory(true)}\n//           style={{\n//             background: '#8b5cf6',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '8px',\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\n//             fontWeight: 'bold',\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             cursor: 'pointer'\n//           }}\n//         >\n//           📈 {isMobile ? 'History' : 'View History'}\n//         </button>\n\n//         <button\n//           onClick={clearGraph}\n//           disabled={nodes.length === 0}\n//           style={{\n//             background: nodes.length === 0 ? '#9ca3af' : '#ef4444',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '8px',\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\n//             fontWeight: 'bold',\n//             fontSize: isMobile ? '0.9rem' : '1rem',\n//             cursor: nodes.length === 0 ? 'not-allowed' : 'pointer'\n//           }}\n//         >\n//           🗑️ {isMobile ? 'Clear' : 'Clear Graph'}\n//         </button>\n//       </div>\n\n//       <main style={{\n//         display: 'flex',\n//         flexDirection: isMobile ? 'column' : 'row',\n//         justifyContent: 'center',\n//         alignItems: 'flex-start',\n//         gap: isMobile ? '1rem' : '2rem',\n//         margin: '0 auto',\n//         maxWidth: '1400px',\n//         padding: '0 1rem'\n//       }}>\n//         <section style={{\n//           flex: isMobile ? '1' : '2',\n//           width: isMobile ? '100%' : 'auto',\n//           minWidth: isMobile ? '100%' : '400px',\n//           background: '#fff',\n//           borderRadius: '20px',\n//           boxShadow: '0 6px 24px rgba(80,120,180,0.10)',\n//           padding: isMobile ? '1rem' : '2rem',\n//           marginBottom: '2rem'\n//         }}>\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\n//         </section>\n\n//         <aside style={{\n//           flex: '1',\n//           width: isMobile ? '100%' : 'auto',\n//           minWidth: isMobile ? '100%' : '300px',\n//           display: 'flex',\n//           flexDirection: 'column',\n//           gap: isMobile ? '1rem' : '2rem'\n//         }}>\n//           <div style={{\n//             background: '#fff',\n//             borderRadius: '16px',\n//             boxShadow: '0 4px 16px rgba(120,120,120,0.10)',\n//             padding: '1.5rem'\n//           }}>\n//             <Controls\n//               nodes={nodes}\n//               setNodes={setNodes}\n//               edges={edges}\n//               setEdges={setEdges}\n//               algorithm={algorithm}\n//               setAlgorithm={setAlgorithm}\n//               source={source}\n//               setSource={setSource}\n//               onRun={handleRun}\n//             />\n//           </div>\n\n//           <div style={{\n//             background: '#f9fafb',\n//             borderRadius: '16px',\n//             boxShadow: '0 2px 8px rgba(120,120,120,0.07)',\n//             padding: '1.5rem'\n//           }}>\n//             <OutputPanel output={output} />\n//           </div>\n//         </aside>\n//       </main>\n\n//       {/* Modals */}\n//       {showSaveModal && (\n//         <SaveGraphModal\n//           nodes={nodes}\n//           edges={edges}\n//           onSave={handleSaveGraph}\n//           onClose={() => setShowSaveModal(false)}\n//         />\n//       )}\n\n//       {showLibrary && (\n//         <GraphLibrary\n//           onLoadGraph={handleLoadGraph}\n//           onClose={() => setShowLibrary(false)}\n//         />\n//       )}\n\n//       {showHistory && (\n//         <ResultHistory\n//           onClose={() => setShowHistory(false)}\n//         />\n//       )}\n\n//       <footer style={{\n//         width: '100%',\n//         textAlign: 'center',\n//         padding: '1rem 0',\n//         background: 'transparent',\n//         fontSize: '1.1rem',\n//         color: '#555',\n//         position: 'fixed',\n//         left: 0,\n//         bottom: 0,\n//         zIndex: 100\n//       }}>\n//         Made with ❤️ by <a\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           style={{ color: '#2563eb', textDecoration: 'underline', fontWeight: 'bold' }}\n//         >\n//           Lalit Kumar Yadav\n//         </a>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AuthProvider","useAuth","GraphVisualizer","Controls","OutputPanel","SaveGraphModal","GraphLibrary","ResultHistory","Login","Signup","runAlgorithm","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContent","_s","user","logout","nodes","setNodes","edges","setEdges","algorithm","setAlgorithm","source","setSource","output","setOutput","showSaveModal","setShowSaveModal","showLibrary","setShowLibrary","showHistory","setShowHistory","currentGraphName","setCurrentGraphName","currentGraphId","setCurrentGraphId","showAuth","setShowAuth","authMode","setAuthMode","handleRun","src","edg","algo","length","alert","requestBody","map","_","idx","from","to","weight","Number","loading","startTime","Date","now","result","executionTime","error","setTimeout","window","confirm","console","message","handleSaveGraph","savedGraph","name","_id","handleLoadGraph","graphData","clearGraph","handleSaveGraphClick","handleLibraryClick","handleHistoryClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","firstName","username","title","onRun","onClose","switchToSignup","switchToLogin","onSave","onLoadGraph","href","target","rel","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/Rajat/Desktop/Graph_Visualizer/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\nimport GraphVisualizer from './components/GraphVisualizer';\r\nimport Controls from './components/Controls';\r\nimport OutputPanel from './components/OutputPanel';\r\nimport SaveGraphModal from './components/SaveGraphModal';\r\nimport GraphLibrary from './components/GraphLibrary';\r\nimport ResultHistory from './components/ResultHistory';\r\nimport Login from './components/Auth/Login';\r\nimport Signup from './components/Auth/Signup';\r\nimport { runAlgorithm } from './api';\r\n\r\nfunction AppContent() {\r\n  const { user, logout } = useAuth();\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [algorithm, setAlgorithm] = useState('dijkstra');\r\n  const [source, setSource] = useState(0);\r\n  const [output, setOutput] = useState(null);\r\n  const [showSaveModal, setShowSaveModal] = useState(false);\r\n  const [showLibrary, setShowLibrary] = useState(false);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n  const [currentGraphName, setCurrentGraphName] = useState('');\r\n  const [currentGraphId, setCurrentGraphId] = useState(null);\r\n  \r\n  // Authentication state\r\n  const [showAuth, setShowAuth] = useState(false);\r\n  const [authMode, setAuthMode] = useState('login'); // 'login' or 'signup'\r\n\r\n  // ✅ UPDATED: Enhanced handleRun with anonymous user prompt\r\n  const handleRun = async (src = source, edg = edges, algo = algorithm)=>{\r\n    if (nodes.length === 0) {\r\n      alert('Please add some nodes first!');\r\n      return;\r\n    }\r\n    \r\n    if (edg.length === 0) {\r\n      alert('Please add some edges first!');\r\n      return;\r\n    }\r\n    \r\n    const requestBody = {\r\n      nodes: nodes.map((_, idx) => idx),\r\n      edges: edg.map(({ from, to, weight }) => ({\r\n        from: from,\r\n        to: to,\r\n        weight: Number(weight)\r\n      })),\r\n      source: src,\r\n      algorithm: algo\r\n    };\r\n    \r\n    try {\r\n      setOutput({ loading: true });\r\n      const startTime = Date.now();\r\n      const result = await runAlgorithm(requestBody);\r\n      const executionTime = Date.now() - startTime;\r\n      \r\n      result.executionTime = executionTime;\r\n      setOutput(result);\r\n      \r\n      // ✅ ADDED: Prompt anonymous users after successful algorithm run\r\n      if (!user && result && !result.error) {\r\n        setTimeout(() => {\r\n          if (window.confirm(\"🎉 Love these results? Sign up to save and organize your work! It's free and takes just a minute.\")) {\r\n            setAuthMode('signup');\r\n            setShowAuth(true);\r\n          }\r\n        }, 2500); // 2.5-second delay to let user see results\r\n      }\r\n      \r\n      // // Save results only if user is authenticated  \r\n      // if (user) {\r\n      //   await saveAlgorithmResult(result, executionTime, src, algo);\r\n      // }\r\n    } catch (error) {\r\n      console.error(\"Algorithm failed:\", error);\r\n      setOutput({ error: `Algorithm failed: ${error.message}` });\r\n    }\r\n  };\r\n\r\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\r\n//   // Only save if user is authenticated\r\n//   if (!user) {\r\n//     console.log('User not authenticated, skipping result save');\r\n//     return;\r\n//   }\r\n\r\n//   try {\r\n//     const resultData = {\r\n//       graphName: currentGraphName || 'Untitled Graph',\r\n//       algorithm,\r\n//       source,\r\n//       result,\r\n//       executionTime,\r\n//       nodeCount: nodes.length,\r\n//       edgeCount: edges.length\r\n//       // Remove createdBy - backend will use authenticated user\r\n//     };\r\n\r\n//     const token = localStorage.getItem('token');\r\n//     const response = await fetch('http://localhost:5000/api/graphs/algorithms/results', {\r\n//       method: 'POST',\r\n//       headers: { \r\n//         'Content-Type': 'application/json',\r\n//         'Authorization': `Bearer ${token}` // ✅ Added missing auth token\r\n//       },\r\n//       body: JSON.stringify(resultData)\r\n//     });\r\n\r\n//     if (response.ok) {\r\n//       const data = await response.json();\r\n//       console.log('Result saved successfully:', data);\r\n//     } else {\r\n//       const errorData = await response.json();\r\n//       console.error('Failed to save result:', errorData);\r\n//     }\r\n//   } catch (error) {\r\n//     console.error('Error saving algorithm result:', error);\r\n//   }\r\n// };\r\n\r\n\r\n  const handleSaveGraph = (savedGraph) => {\r\n    setCurrentGraphName(savedGraph.name);\r\n    setCurrentGraphId(savedGraph._id);\r\n    alert(`Graph \"${savedGraph.name}\" saved successfully!`);\r\n  };\r\n\r\n  const handleLoadGraph = (graphData) => {\r\n    setNodes(graphData.nodes);\r\n    setEdges(graphData.edges);\r\n    setCurrentGraphName(graphData.name);\r\n    setCurrentGraphId(graphData._id);\r\n    setOutput(null);\r\n    alert(`Graph \"${graphData.name}\" loaded successfully!`);\r\n  };\r\n\r\n  const clearGraph = () => {\r\n    setNodes([]);\r\n    setEdges([]);\r\n    setOutput(null);\r\n    setCurrentGraphName('');\r\n    setCurrentGraphId(null);\r\n  };\r\n\r\n  // ✅ ADDED: Enhanced save graph handler with anonymous user prompt\r\n  const handleSaveGraphClick = () => {\r\n    if (!user) {\r\n      if (window.confirm(\"💾 Sign up to save your graphs and track your algorithm history! Create a free account now?\")) {\r\n        setAuthMode('signup');\r\n        setShowAuth(true);\r\n      }\r\n      return;\r\n    }\r\n    setShowSaveModal(true);\r\n  };\r\n\r\n  // ✅ ADDED: Enhanced library handler with anonymous user prompt\r\n  const handleLibraryClick = () => {\r\n    if (!user) {\r\n      if (window.confirm(\"📚 Sign up to access your personal graph library! Create a free account to save and organize your work?\")) {\r\n        setAuthMode('signup');\r\n        setShowAuth(true);\r\n      }\r\n      return;\r\n    }\r\n    setShowLibrary(true);\r\n  };\r\n\r\n  // ✅ ADDED: Enhanced history handler with anonymous user prompt\r\n  const handleHistoryClick = () => {\r\n    if (!user) {\r\n      if (window.confirm(\"📈 Sign up to track your algorithm execution history! See your progress and performance over time?\")) {\r\n        setAuthMode('signup');\r\n        setShowAuth(true);\r\n      }\r\n      return;\r\n    }\r\n    setShowHistory(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\r\n      {/* Header */}\r\n      <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\r\n        <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\r\n          Shortest Distance Path Visualizer\r\n        </h1>\r\n        {user && currentGraphName && (\r\n          <div className=\"mt-2 sm:mt-3\">\r\n            <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\r\n              Current Graph: {currentGraphName}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </header>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\r\n        {user ? (\r\n          <>\r\n            {/* Authenticated user buttons */}\r\n            <button\r\n              onClick={handleSaveGraphClick}\r\n              disabled={nodes.length === 0}\r\n              className={`\r\n                px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n                rounded-lg font-semibold text-sm sm:text-base\r\n                transition-all duration-200 transform hover:scale-105\r\n                ${nodes.length === 0 \r\n                  ? 'bg-gray-400 cursor-not-allowed text-white' \r\n                  : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\r\n                }\r\n              `}\r\n            >\r\n              <span className=\"inline sm:hidden\">💾 Save</span>\r\n              <span className=\"hidden sm:inline\">💾 Save Graph</span>\r\n            </button>\r\n            \r\n            <button\r\n              onClick={handleLibraryClick}\r\n              className=\"\r\n                px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n                bg-indigo-500 hover:bg-indigo-600 text-white\r\n                rounded-lg font-semibold text-sm sm:text-base\r\n                transition-all duration-200 transform hover:scale-105\r\n                shadow-lg hover:shadow-xl\r\n              \"\r\n            >\r\n              <span className=\"inline sm:hidden\">📚 Load</span>\r\n              <span className=\"hidden sm:inline\">📚 Load Graph</span>\r\n            </button>\r\n\r\n            <button\r\n              onClick={handleHistoryClick}\r\n              className=\"\r\n                px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n                bg-purple-500 hover:bg-purple-600 text-white\r\n                rounded-lg font-semibold text-sm sm:text-base\r\n                transition-all duration-200 transform hover:scale-105\r\n                shadow-lg hover:shadow-xl\r\n              \"\r\n            >\r\n              <span className=\"inline sm:hidden\">📈 History</span>\r\n              <span className=\"hidden sm:inline\">📈 View History</span>\r\n            </button>\r\n            \r\n            <button\r\n              onClick={clearGraph}\r\n              disabled={nodes.length === 0}\r\n              className={`\r\n                px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n                rounded-lg font-semibold text-sm sm:text-base\r\n                transition-all duration-200 transform hover:scale-105\r\n                ${nodes.length === 0 \r\n                  ? 'bg-gray-400 cursor-not-allowed text-white' \r\n                  : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\r\n                }\r\n              `}\r\n            >\r\n              <span className=\"inline sm:hidden\">🗑️ Clear</span>\r\n              <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\r\n            </button>\r\n\r\n            {/* User Menu */}\r\n            <div className=\"flex items-center gap-2 ml-4\">\r\n              <div className=\"hidden sm:flex items-center bg-green-100 text-green-800 px-3 py-2 rounded-full\">\r\n                <span className=\"text-sm font-medium\">\r\n                  👋 {user.firstName || user.username}\r\n                </span>\r\n              </div>\r\n              <button\r\n                onClick={logout}\r\n                className=\"\r\n                  px-3 py-2 sm:px-4 sm:py-2.5\r\n                  bg-gray-500 hover:bg-gray-600 text-white\r\n                  rounded-lg font-semibold text-sm sm:text-base\r\n                  transition-all duration-200\r\n                \"\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* ✅ UPDATED: Enhanced anonymous user buttons with better UX */}\r\n            <button\r\n              onClick={() => {\r\n                setAuthMode('login');\r\n                setShowAuth(true);\r\n              }}\r\n              className=\"\r\n                px-4 py-2 sm:px-6 sm:py-3\r\n                bg-blue-600 hover:bg-blue-700 text-white\r\n                rounded-lg font-semibold text-sm sm:text-base\r\n                transition-all duration-200 transform hover:scale-105\r\n                shadow-lg hover:shadow-xl\r\n              \"\r\n            >\r\n              🔐 Login\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setAuthMode('signup');\r\n                setShowAuth(true);\r\n              }}\r\n              className=\"\r\n                px-4 py-2 sm:px-6 sm:py-3\r\n                border-2 border-blue-600 text-blue-600 hover:bg-blue-50\r\n                rounded-lg font-semibold text-sm sm:text-base\r\n                transition-all duration-200 transform hover:scale-105\r\n              \"\r\n            >\r\n              ✨ Sign Up Free\r\n            </button>\r\n\r\n            {/* ✅ ADDED: Visual cues for anonymous users */}\r\n            <div className=\"flex items-center gap-2 ml-4\">\r\n              <button\r\n                onClick={handleSaveGraphClick}\r\n                className=\"\r\n                  px-3 py-2 sm:px-4 sm:py-2.5\r\n                  bg-orange-100 text-orange-700 border border-orange-300\r\n                  rounded-lg font-semibold text-sm sm:text-base\r\n                  transition-all duration-200 hover:bg-orange-200\r\n                \"\r\n                title=\"Sign up to unlock save functionality\"\r\n              >\r\n                <span className=\"inline sm:hidden\">🔒 Save</span>\r\n                <span className=\"hidden sm:inline\">🔒 Sign Up to Save</span>\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Main Content - Show different content based on authentication */}\r\n      {user ? (\r\n        <main className=\"\r\n          flex flex-col lg:flex-row \r\n          justify-center items-start \r\n          gap-4 sm:gap-6 lg:gap-8 \r\n          max-w-7xl mx-auto \r\n          px-4 sm:px-6 lg:px-8\r\n          mb-8\r\n        \">\r\n          {/* Graph Visualizer Section */}\r\n          <section className=\"\r\n            w-full lg:w-2/3 xl:w-3/5\r\n            bg-white rounded-xl sm:rounded-2xl \r\n            shadow-lg hover:shadow-xl \r\n            transition-shadow duration-300\r\n            p-4 sm:p-6 lg:p-8\r\n            min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\r\n          \">\r\n            <GraphVisualizer nodes={nodes} edges={edges} output={output} />\r\n          </section>\r\n          \r\n          {/* Controls and Output Sidebar */}\r\n          <aside className=\"\r\n            w-full lg:w-1/3 xl:w-2/5\r\n            flex flex-col gap-4 sm:gap-6\r\n          \">\r\n            {/* Controls Panel */}\r\n            <div className=\"\r\n              bg-white rounded-xl sm:rounded-2xl \r\n              shadow-md hover:shadow-lg \r\n              transition-shadow duration-300\r\n              p-4 sm:p-6\r\n            \">\r\n              <Controls\r\n                nodes={nodes}\r\n                setNodes={setNodes}\r\n                edges={edges}\r\n                setEdges={setEdges}\r\n                algorithm={algorithm}\r\n                setAlgorithm={setAlgorithm}\r\n                source={source}\r\n                setSource={setSource}\r\n                onRun={handleRun}\r\n              />\r\n            </div>\r\n            \r\n            {/* Output Panel */}\r\n            <div className=\"\r\n              bg-gray-50 rounded-xl sm:rounded-2xl \r\n              shadow-md hover:shadow-lg \r\n              transition-shadow duration-300\r\n              p-4 sm:p-6\r\n            \">\r\n              <OutputPanel output={output} />\r\n            </div>\r\n          </aside>\r\n        </main>\r\n      ) : (\r\n        /* ✅ UPDATED: Enhanced welcome screen with better messaging */\r\n        <main className=\"flex flex-col items-center justify-center py-12 sm:py-20 px-4\">\r\n          <div className=\"text-center max-w-4xl\">\r\n            <div className=\"w-20 sm:w-24 h-20 sm:h-24 mx-auto mb-6 bg-blue-100 rounded-full \r\n                            flex items-center justify-center\">\r\n              <span className=\"text-3xl sm:text-4xl\">🎯</span>\r\n            </div>\r\n            <h2 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-800 mb-4 sm:mb-6\">\r\n              Welcome to Path Visualizer\r\n            </h2>\r\n            <p className=\"text-base sm:text-lg text-gray-600 mb-6 sm:mb-8 leading-relaxed\">\r\n              <strong>Try it now!</strong> Create graphs and run algorithms instantly. \r\n              Sign up to save your work and unlock advanced features - it's completely free!\r\n            </p>\r\n            \r\n            {/* Features Grid (unchanged) */}\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 mb-8 sm:mb-12\">\r\n              <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n                <div className=\"text-2xl sm:text-3xl mb-3\">🎯</div>\r\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Interactive Creation</h3>\r\n                <p className=\"text-sm text-gray-600\">Build graphs with point-and-click interface</p>\r\n              </div>\r\n              <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n                <div className=\"text-2xl sm:text-3xl mb-3\">⚡</div>\r\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Algorithm Visualization</h3>\r\n                <p className=\"text-sm text-gray-600\">See Dijkstra, Prim's, and more in action</p>\r\n              </div>\r\n              <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n                <div className=\"text-2xl sm:text-3xl mb-3\">💾</div>\r\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Private Storage</h3>\r\n                <p className=\"text-sm text-gray-600\">Save and organize your graphs securely</p>\r\n              </div>\r\n              <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n                <div className=\"text-2xl sm:text-3xl mb-3\">📊</div>\r\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Execution History</h3>\r\n                <p className=\"text-sm text-gray-600\">Track your algorithm performance</p>\r\n              </div>\r\n              <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n                <div className=\"text-2xl sm:text-3xl mb-3\">📱</div>\r\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Responsive Design</h3>\r\n                <p className=\"text-sm text-gray-600\">Works perfectly on all devices</p>\r\n              </div>\r\n              <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n                <div className=\"text-2xl sm:text-3xl mb-3\">🔐</div>\r\n                <h3 className=\"font-semibold text-gray-800 mb-2\">Secure & Private</h3>\r\n                <p className=\"text-sm text-gray-600\">Your data stays safe and personal</p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Call to Action */}\r\n            <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center\">\r\n              <button\r\n                onClick={() => {\r\n                  setAuthMode('signup');\r\n                  setShowAuth(true);\r\n                }}\r\n                className=\"\r\n                  px-6 sm:px-8 py-3 sm:py-4\r\n                  bg-blue-600 hover:bg-blue-700 text-white\r\n                  rounded-lg font-bold text-base sm:text-lg\r\n                  transition-all duration-200 transform hover:scale-105\r\n                  shadow-lg hover:shadow-xl\r\n                \"\r\n              >\r\n                🚀 Get Started - Sign Up Free\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setAuthMode('login');\r\n                  setShowAuth(true);\r\n                }}\r\n                className=\"\r\n                  px-6 sm:px-8 py-3 sm:py-4\r\n                  border-2 border-blue-600 text-blue-600 hover:bg-blue-50\r\n                  rounded-lg font-bold text-base sm:text-lg\r\n                  transition-all duration-200 transform hover:scale-105\r\n                \"\r\n              >\r\n                Already have an account?\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      )}\r\n\r\n      {/* Authentication Modals */}\r\n      {showAuth && (\r\n        <>\r\n          {authMode === 'login' ? (\r\n            <Login \r\n              onClose={() => setShowAuth(false)}\r\n              switchToSignup={() => setAuthMode('signup')}\r\n            />\r\n          ) : (\r\n            <Signup \r\n              onClose={() => setShowAuth(false)}\r\n              switchToLogin={() => setAuthMode('login')}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Existing Modals - Only show when authenticated */}\r\n      {user && showSaveModal && (\r\n        <SaveGraphModal\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onSave={handleSaveGraph}\r\n          onClose={() => setShowSaveModal(false)}\r\n        />\r\n      )}\r\n\r\n      {user && showLibrary && (\r\n        <GraphLibrary\r\n          onLoadGraph={handleLoadGraph}\r\n          onClose={() => setShowLibrary(false)}\r\n        />\r\n      )}\r\n\r\n      {user && showHistory && (\r\n        <ResultHistory\r\n          onClose={() => setShowHistory(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Footer */}\r\n      <footer className=\"\r\n        bg-white/90 backdrop-blur-sm border-t border-gray-200\r\n        py-6 sm:py-8 text-center\r\n        text-sm sm:text-base text-gray-600 mt-12\r\n      \">\r\n        Made with ❤️ by{' '}\r\n        <a\r\n          href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors\"\r\n        >\r\n          Lalit Kumar Yadav\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Main App component with AuthProvider wrapper\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppContent />\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { AuthProvider, useAuth } from './contexts/AuthContext';\r\n// import GraphVisualizer from './components/GraphVisualizer';\r\n// import Controls from './components/Controls';\r\n// import OutputPanel from './components/OutputPanel';\r\n// import SaveGraphModal from './components/SaveGraphModal';\r\n// import GraphLibrary from './components/GraphLibrary';\r\n// import ResultHistory from './components/ResultHistory';\r\n// import Login from './components/Auth/Login';\r\n// import Signup from './components/Auth/Signup';\r\n// import { runAlgorithm } from './api';\r\n\r\n// function AppContent() {\r\n//   const { user, logout } = useAuth();\r\n//   const [nodes, setNodes] = useState([]);\r\n//   const [edges, setEdges] = useState([]);\r\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\r\n//   const [source, setSource] = useState(0);\r\n//   const [output, setOutput] = useState(null);\r\n//   const [showSaveModal, setShowSaveModal] = useState(false);\r\n//   const [showLibrary, setShowLibrary] = useState(false);\r\n//   const [showHistory, setShowHistory] = useState(false);\r\n//   const [currentGraphName, setCurrentGraphName] = useState('');\r\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\r\n  \r\n//   // Authentication state\r\n//   const [showAuth, setShowAuth] = useState(false);\r\n//   const [authMode, setAuthMode] = useState('login'); // 'login' or 'signup'\r\n\r\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\r\n//     if (nodes.length === 0) {\r\n//       alert('Please add some nodes first!');\r\n//       return;\r\n//     }\r\n    \r\n//     if (edg.length === 0) {\r\n//       alert('Please add some edges first!');\r\n//       return;\r\n//     }\r\n    \r\n//     const requestBody = {\r\n//       nodes: nodes.map((_, idx) => idx),\r\n//       edges: edg.map(({ from, to, weight }) => ({\r\n//         from: from,\r\n//         to: to,\r\n//         weight: Number(weight)\r\n//       })),\r\n//       source: src,\r\n//       algorithm: algo\r\n//     };\r\n    \r\n//     try {\r\n//       setOutput({ loading: true });\r\n//       const startTime = Date.now();\r\n//       const result = await runAlgorithm(requestBody);\r\n//       const executionTime = Date.now() - startTime;\r\n      \r\n//       result.executionTime = executionTime;\r\n//       setOutput(result);\r\n      \r\n//       await saveAlgorithmResult(result, executionTime, src, algo);\r\n//     } catch (error) {\r\n//       console.error(\"Algorithm failed:\", error);\r\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\r\n//     }\r\n//   };\r\n\r\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\r\n//     try {\r\n//       const resultData = {\r\n//         graphName: currentGraphName || 'Untitled Graph',\r\n//         algorithm,\r\n//         source,\r\n//         result,\r\n//         executionTime,\r\n//         nodeCount: nodes.length,\r\n//         edgeCount: edges.length,\r\n//         createdBy: user ? user.username : 'Guest'\r\n//       };\r\n\r\n//       const token = localStorage.getItem('token');\r\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\r\n//         method: 'POST',\r\n//         headers: { \r\n//           'Content-Type': 'application/json',\r\n//           ...(token && { 'Authorization': `Bearer ${token}` })\r\n//         },\r\n//         body: JSON.stringify(resultData)\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         console.log('Result saved successfully!');\r\n//       } else {\r\n//         console.error('Failed to save result:', response.status);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving algorithm result:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSaveGraph = (savedGraph) => {\r\n//     setCurrentGraphName(savedGraph.name);\r\n//     setCurrentGraphId(savedGraph._id);\r\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\r\n//   };\r\n\r\n//   const handleLoadGraph = (graphData) => {\r\n//     setNodes(graphData.nodes);\r\n//     setEdges(graphData.edges);\r\n//     setCurrentGraphName(graphData.name);\r\n//     setCurrentGraphId(graphData._id);\r\n//     setOutput(null);\r\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\r\n//   };\r\n\r\n//   const clearGraph = () => {\r\n//     setNodes([]);\r\n//     setEdges([]);\r\n//     setOutput(null);\r\n//     setCurrentGraphName('');\r\n//     setCurrentGraphId(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\r\n//       {/* Header */}\r\n//       <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\r\n//         <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\r\n//           Shortest Distance Path Visualizer\r\n//         </h1>\r\n//         {user && currentGraphName && (\r\n//           <div className=\"mt-2 sm:mt-3\">\r\n//             <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\r\n//               Current Graph: {currentGraphName}\r\n//             </span>\r\n//           </div>\r\n//         )}\r\n//       </header>\r\n\r\n//       {/* Action Buttons */}\r\n//       <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\r\n//         {user ? (\r\n//           <>\r\n//             {/* Existing buttons - only show when authenticated */}\r\n//             <button\r\n//               onClick={() => setShowSaveModal(true)}\r\n//               disabled={nodes.length === 0}\r\n//               className={`\r\n//                 px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//                 rounded-lg font-semibold text-sm sm:text-base\r\n//                 transition-all duration-200 transform hover:scale-105\r\n//                 ${nodes.length === 0 \r\n//                   ? 'bg-gray-400 cursor-not-allowed text-white' \r\n//                   : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\r\n//                 }\r\n//               `}\r\n//             >\r\n//               <span className=\"inline sm:hidden\">💾 Save</span>\r\n//               <span className=\"hidden sm:inline\">💾 Save Graph</span>\r\n//             </button>\r\n            \r\n//             <button\r\n//               onClick={() => setShowLibrary(true)}\r\n//               className=\"\r\n//                 px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//                 bg-indigo-500 hover:bg-indigo-600 text-white\r\n//                 rounded-lg font-semibold text-sm sm:text-base\r\n//                 transition-all duration-200 transform hover:scale-105\r\n//                 shadow-lg hover:shadow-xl\r\n//               \"\r\n//             >\r\n//               <span className=\"inline sm:hidden\">📚 Load</span>\r\n//               <span className=\"hidden sm:inline\">📚 Load Graph</span>\r\n//             </button>\r\n\r\n//             <button\r\n//               onClick={() => setShowHistory(true)}\r\n//               className=\"\r\n//                 px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//                 bg-purple-500 hover:bg-purple-600 text-white\r\n//                 rounded-lg font-semibold text-sm sm:text-base\r\n//                 transition-all duration-200 transform hover:scale-105\r\n//                 shadow-lg hover:shadow-xl\r\n//               \"\r\n//             >\r\n//               <span className=\"inline sm:hidden\">📈 History</span>\r\n//               <span className=\"hidden sm:inline\">📈 View History</span>\r\n//             </button>\r\n            \r\n//             <button\r\n//               onClick={clearGraph}\r\n//               disabled={nodes.length === 0}\r\n//               className={`\r\n//                 px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//                 rounded-lg font-semibold text-sm sm:text-base\r\n//                 transition-all duration-200 transform hover:scale-105\r\n//                 ${nodes.length === 0 \r\n//                   ? 'bg-gray-400 cursor-not-allowed text-white' \r\n//                   : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\r\n//                 }\r\n//               `}\r\n//             >\r\n//               <span className=\"inline sm:hidden\">🗑️ Clear</span>\r\n//               <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\r\n//             </button>\r\n\r\n//             {/* User Menu */}\r\n//             <div className=\"flex items-center gap-2 ml-4\">\r\n//               <div className=\"hidden sm:flex items-center bg-green-100 text-green-800 px-3 py-2 rounded-full\">\r\n//                 <span className=\"text-sm font-medium\">\r\n//                   👋 {user.firstName || user.username}\r\n//                 </span>\r\n//               </div>\r\n//               <button\r\n//                 onClick={logout}\r\n//                 className=\"\r\n//                   px-3 py-2 sm:px-4 sm:py-2.5\r\n//                   bg-gray-500 hover:bg-gray-600 text-white\r\n//                   rounded-lg font-semibold text-sm sm:text-base\r\n//                   transition-all duration-200\r\n//                 \"\r\n//               >\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           </>\r\n//         ) : (\r\n//           <>\r\n//             {/* Authentication buttons when not logged in */}\r\n//             <button\r\n//               onClick={() => {\r\n//                 setAuthMode('login');\r\n//                 setShowAuth(true);\r\n//               }}\r\n//               className=\"\r\n//                 px-4 py-2 sm:px-6 sm:py-3\r\n//                 bg-blue-600 hover:bg-blue-700 text-white\r\n//                 rounded-lg font-semibold text-sm sm:text-base\r\n//                 transition-all duration-200 transform hover:scale-105\r\n//                 shadow-lg hover:shadow-xl\r\n//               \"\r\n//             >\r\n//               🔐 Login\r\n//             </button>\r\n//             <button\r\n//               onClick={() => {\r\n//                 setAuthMode('signup');\r\n//                 setShowAuth(true);\r\n//               }}\r\n//               className=\"\r\n//                 px-4 py-2 sm:px-6 sm:py-3\r\n//                 border-2 border-blue-600 text-blue-600 hover:bg-blue-50\r\n//                 rounded-lg font-semibold text-sm sm:text-base\r\n//                 transition-all duration-200 transform hover:scale-105\r\n//               \"\r\n//             >\r\n//               ✨ Sign Up\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Main Content - Show different content based on authentication */}\r\n//       {user ? (\r\n//         <main className=\"\r\n//           flex flex-col lg:flex-row \r\n//           justify-center items-start \r\n//           gap-4 sm:gap-6 lg:gap-8 \r\n//           max-w-7xl mx-auto \r\n//           px-4 sm:px-6 lg:px-8\r\n//           mb-8\r\n//         \">\r\n//           {/* Graph Visualizer Section */}\r\n//           <section className=\"\r\n//             w-full lg:w-2/3 xl:w-3/5\r\n//             bg-white rounded-xl sm:rounded-2xl \r\n//             shadow-lg hover:shadow-xl \r\n//             transition-shadow duration-300\r\n//             p-4 sm:p-6 lg:p-8\r\n//             min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\r\n//           \">\r\n//             <GraphVisualizer nodes={nodes} edges={edges} output={output} />\r\n//           </section>\r\n          \r\n//           {/* Controls and Output Sidebar */}\r\n//           <aside className=\"\r\n//             w-full lg:w-1/3 xl:w-2/5\r\n//             flex flex-col gap-4 sm:gap-6\r\n//           \">\r\n//             {/* Controls Panel */}\r\n//             <div className=\"\r\n//               bg-white rounded-xl sm:rounded-2xl \r\n//               shadow-md hover:shadow-lg \r\n//               transition-shadow duration-300\r\n//               p-4 sm:p-6\r\n//             \">\r\n//               <Controls\r\n//                 nodes={nodes}\r\n//                 setNodes={setNodes}\r\n//                 edges={edges}\r\n//                 setEdges={setEdges}\r\n//                 algorithm={algorithm}\r\n//                 setAlgorithm={setAlgorithm}\r\n//                 source={source}\r\n//                 setSource={setSource}\r\n//                 onRun={handleRun}\r\n//               />\r\n//             </div>\r\n            \r\n//             {/* Output Panel */}\r\n//             <div className=\"\r\n//               bg-gray-50 rounded-xl sm:rounded-2xl \r\n//               shadow-md hover:shadow-lg \r\n//               transition-shadow duration-300\r\n//               p-4 sm:p-6\r\n//             \">\r\n//               <OutputPanel output={output} />\r\n//             </div>\r\n//           </aside>\r\n//         </main>\r\n//       ) : (\r\n//         /* Welcome screen for unauthenticated users */\r\n//         <main className=\"flex flex-col items-center justify-center py-12 sm:py-20 px-4\">\r\n//           <div className=\"text-center max-w-4xl\">\r\n//             <div className=\"w-20 sm:w-24 h-20 sm:h-24 mx-auto mb-6 bg-blue-100 rounded-full \r\n//                             flex items-center justify-center\">\r\n//               <span className=\"text-3xl sm:text-4xl\">🎯</span>\r\n//             </div>\r\n//             <h2 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold text-gray-800 mb-4 sm:mb-6\">\r\n//               Welcome to Path Visualizer\r\n//             </h2>\r\n//             <p className=\"text-base sm:text-lg text-gray-600 mb-6 sm:mb-8 leading-relaxed\">\r\n//               Create an account to start visualizing graph algorithms, save your work privately, \r\n//               and track your progress. Your graphs and results will be secure and personal to you.\r\n//             </p>\r\n            \r\n//             {/* Features Grid */}\r\n//             <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 mb-8 sm:mb-12\">\r\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">🎯</div>\r\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Interactive Creation</h3>\r\n//                 <p className=\"text-sm text-gray-600\">Build graphs with point-and-click interface</p>\r\n//               </div>\r\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">⚡</div>\r\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Algorithm Visualization</h3>\r\n//                 <p className=\"text-sm text-gray-600\">See Dijkstra, Prim's, and more in action</p>\r\n//               </div>\r\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">💾</div>\r\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Private Storage</h3>\r\n//                 <p className=\"text-sm text-gray-600\">Save and organize your graphs securely</p>\r\n//               </div>\r\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">📊</div>\r\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Execution History</h3>\r\n//                 <p className=\"text-sm text-gray-600\">Track your algorithm performance</p>\r\n//               </div>\r\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">📱</div>\r\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Responsive Design</h3>\r\n//                 <p className=\"text-sm text-gray-600\">Works perfectly on all devices</p>\r\n//               </div>\r\n//               <div className=\"bg-white rounded-xl p-4 sm:p-6 shadow-md\">\r\n//                 <div className=\"text-2xl sm:text-3xl mb-3\">🔐</div>\r\n//                 <h3 className=\"font-semibold text-gray-800 mb-2\">Secure & Private</h3>\r\n//                 <p className=\"text-sm text-gray-600\">Your data stays safe and personal</p>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* Call to Action */}\r\n//             <div className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center\">\r\n//               <button\r\n//                 onClick={() => {\r\n//                   setAuthMode('signup');\r\n//                   setShowAuth(true);\r\n//                 }}\r\n//                 className=\"\r\n//                   px-6 sm:px-8 py-3 sm:py-4\r\n//                   bg-blue-600 hover:bg-blue-700 text-white\r\n//                   rounded-lg font-bold text-base sm:text-lg\r\n//                   transition-all duration-200 transform hover:scale-105\r\n//                   shadow-lg hover:shadow-xl\r\n//                 \"\r\n//               >\r\n//                 🚀 Get Started - Sign Up Free\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => {\r\n//                   setAuthMode('login');\r\n//                   setShowAuth(true);\r\n//                 }}\r\n//                 className=\"\r\n//                   px-6 sm:px-8 py-3 sm:py-4\r\n//                   border-2 border-blue-600 text-blue-600 hover:bg-blue-50\r\n//                   rounded-lg font-bold text-base sm:text-lg\r\n//                   transition-all duration-200 transform hover:scale-105\r\n//                 \"\r\n//               >\r\n//                 Already have an account?\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </main>\r\n//       )}\r\n\r\n//       {/* Authentication Modals */}\r\n//       {showAuth && (\r\n//         <>\r\n//           {authMode === 'login' ? (\r\n//             <Login \r\n//               onClose={() => setShowAuth(false)}\r\n//               switchToSignup={() => setAuthMode('signup')}\r\n//             />\r\n//           ) : (\r\n//             <Signup \r\n//               onClose={() => setShowAuth(false)}\r\n//               switchToLogin={() => setAuthMode('login')}\r\n//             />\r\n//           )}\r\n//         </>\r\n//       )}\r\n\r\n//       {/* Existing Modals - Only show when authenticated */}\r\n//       {user && showSaveModal && (\r\n//         <SaveGraphModal\r\n//           nodes={nodes}\r\n//           edges={edges}\r\n//           onSave={handleSaveGraph}\r\n//           onClose={() => setShowSaveModal(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {user && showLibrary && (\r\n//         <GraphLibrary\r\n//           onLoadGraph={handleLoadGraph}\r\n//           onClose={() => setShowLibrary(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {user && showHistory && (\r\n//         <ResultHistory\r\n//           onClose={() => setShowHistory(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {/* Footer */}\r\n//       <footer className=\"\r\n//         bg-white/90 backdrop-blur-sm border-t border-gray-200\r\n//         py-6 sm:py-8 text-center\r\n//         text-sm sm:text-base text-gray-600 mt-12\r\n//       \">\r\n//         Made with ❤️ by{' '}\r\n//         <a\r\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors\"\r\n//         >\r\n//           Lalit Kumar Yadav\r\n//         </a>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // Main App component with AuthProvider wrapper\r\n// function App() {\r\n//   return (\r\n//     <AuthProvider>\r\n//       <AppContent />\r\n//     </AuthProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import GraphVisualizer from './components/GraphVisualizer';\r\n// import Controls from './components/Controls';\r\n// import OutputPanel from './components/OutputPanel';\r\n// import SaveGraphModal from './components/SaveGraphModal';\r\n// import GraphLibrary from './components/GraphLibrary';\r\n// import ResultHistory from './components/ResultHistory';\r\n// import { runAlgorithm } from './api';\r\n\r\n// function App() {\r\n//   const [nodes, setNodes] = useState([]);\r\n//   const [edges, setEdges] = useState([]);\r\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\r\n//   const [source, setSource] = useState(0);\r\n//   const [output, setOutput] = useState(null);\r\n//   const [showSaveModal, setShowSaveModal] = useState(false);\r\n//   const [showLibrary, setShowLibrary] = useState(false);\r\n//   const [showHistory, setShowHistory] = useState(false);\r\n//   const [currentGraphName, setCurrentGraphName] = useState('');\r\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\r\n\r\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\r\n//     if (nodes.length === 0) {\r\n//       alert('Please add some nodes first!');\r\n//       return;\r\n//     }\r\n    \r\n//     if (edg.length === 0) {\r\n//       alert('Please add some edges first!');\r\n//       return;\r\n//     }\r\n    \r\n//     const requestBody = {\r\n//       nodes: nodes.map((_, idx) => idx),\r\n//       edges: edg.map(({ from, to, weight }) => ({\r\n//         from: from,\r\n//         to: to,\r\n//         weight: Number(weight)\r\n//       })),\r\n//       source: src,\r\n//       algorithm: algo\r\n//     };\r\n    \r\n//     try {\r\n//       setOutput({ loading: true });\r\n//       const startTime = Date.now();\r\n//       const result = await runAlgorithm(requestBody);\r\n//       const executionTime = Date.now() - startTime;\r\n      \r\n//       result.executionTime = executionTime;\r\n//       setOutput(result);\r\n      \r\n//       await saveAlgorithmResult(result, executionTime, src, algo);\r\n//     } catch (error) {\r\n//       console.error(\"Algorithm failed:\", error);\r\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\r\n//     }\r\n//   };\r\n\r\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\r\n//     try {\r\n//       const resultData = {\r\n//         graphName: currentGraphName || 'Untitled Graph',\r\n//         algorithm,\r\n//         source,\r\n//         result,\r\n//         executionTime,\r\n//         nodeCount: nodes.length,\r\n//         edgeCount: edges.length,\r\n//         createdBy: 'Lalit Kumar Yadav'\r\n//       };\r\n\r\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(resultData)\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         console.log('Result saved successfully!');\r\n//       } else {\r\n//         console.error('Failed to save result:', response.status);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving algorithm result:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSaveGraph = (savedGraph) => {\r\n//     setCurrentGraphName(savedGraph.name);\r\n//     setCurrentGraphId(savedGraph._id);\r\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\r\n//   };\r\n\r\n//   const handleLoadGraph = (graphData) => {\r\n//     setNodes(graphData.nodes);\r\n//     setEdges(graphData.edges);\r\n//     setCurrentGraphName(graphData.name);\r\n//     setCurrentGraphId(graphData._id);\r\n//     setOutput(null);\r\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\r\n//   };\r\n\r\n//   const clearGraph = () => {\r\n//     setNodes([]);\r\n//     setEdges([]);\r\n//     setOutput(null);\r\n//     setCurrentGraphName('');\r\n//     setCurrentGraphId(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\r\n//       {/* Header */}\r\n//       <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\r\n//         <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\r\n//           Shortest Distance Path Visualizer\r\n//         </h1>\r\n//         {currentGraphName && (\r\n//           <div className=\"mt-2 sm:mt-3\">\r\n//             <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\r\n//               Current Graph: {currentGraphName}\r\n//             </span>\r\n//           </div>\r\n//         )}\r\n//       </header>\r\n\r\n//       {/* Action Buttons */}\r\n//       <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\r\n//         <button\r\n//           onClick={() => setShowSaveModal(true)}\r\n//           disabled={nodes.length === 0}\r\n//           className={`\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             ${nodes.length === 0 \r\n//               ? 'bg-gray-400 cursor-not-allowed text-white' \r\n//               : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\r\n//             }\r\n//           `}\r\n//         >\r\n//           <span className=\"inline sm:hidden\">💾 Save</span>\r\n//           <span className=\"hidden sm:inline\">💾 Save Graph</span>\r\n//         </button>\r\n        \r\n//         <button\r\n//           onClick={() => setShowLibrary(true)}\r\n//           className=\"\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             bg-indigo-500 hover:bg-indigo-600 text-white\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             shadow-lg hover:shadow-xl\r\n//           \"\r\n//         >\r\n//           <span className=\"inline sm:hidden\">📚 Load</span>\r\n//           <span className=\"hidden sm:inline\">📚 Load Graph</span>\r\n//         </button>\r\n\r\n//         <button\r\n//           onClick={() => setShowHistory(true)}\r\n//           className=\"\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             bg-purple-500 hover:bg-purple-600 text-white\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             shadow-lg hover:shadow-xl\r\n//           \"\r\n//         >\r\n//           <span className=\"inline sm:hidden\">📈 History</span>\r\n//           <span className=\"hidden sm:inline\">📈 View History</span>\r\n//         </button>\r\n        \r\n//         <button\r\n//           onClick={clearGraph}\r\n//           disabled={nodes.length === 0}\r\n//           className={`\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             ${nodes.length === 0 \r\n//               ? 'bg-gray-400 cursor-not-allowed text-white' \r\n//               : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\r\n//             }\r\n//           `}\r\n//         >\r\n//           <span className=\"inline sm:hidden\">🗑️ Clear</span>\r\n//           <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Main Content - Removed excessive bottom padding since footer is not fixed */}\r\n//       <main className=\"\r\n//         flex flex-col lg:flex-row \r\n//         justify-center items-start \r\n//         gap-4 sm:gap-6 lg:gap-8 \r\n//         max-w-7xl mx-auto \r\n//         px-4 sm:px-6 lg:px-8\r\n//         mb-8\r\n//       \">\r\n//         {/* Graph Visualizer Section */}\r\n//         <section className=\"\r\n//           w-full lg:w-2/3 xl:w-3/5\r\n//           bg-white rounded-xl sm:rounded-2xl \r\n//           shadow-lg hover:shadow-xl \r\n//           transition-shadow duration-300\r\n//           p-4 sm:p-6 lg:p-8\r\n//           min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\r\n//         \">\r\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\r\n//         </section>\r\n        \r\n//         {/* Controls and Output Sidebar */}\r\n//         <aside className=\"\r\n//           w-full lg:w-1/3 xl:w-2/5\r\n//           flex flex-col gap-4 sm:gap-6\r\n//         \">\r\n//           {/* Controls Panel */}\r\n//           <div className=\"\r\n//             bg-white rounded-xl sm:rounded-2xl \r\n//             shadow-md hover:shadow-lg \r\n//             transition-shadow duration-300\r\n//             p-4 sm:p-6\r\n//           \">\r\n//             <Controls\r\n//               nodes={nodes}\r\n//               setNodes={setNodes}\r\n//               edges={edges}\r\n//               setEdges={setEdges}\r\n//               algorithm={algorithm}\r\n//               setAlgorithm={setAlgorithm}\r\n//               source={source}\r\n//               setSource={setSource}\r\n//               onRun={handleRun}\r\n//             />\r\n//           </div>\r\n          \r\n//           {/* Output Panel */}\r\n//           <div className=\"\r\n//             bg-gray-50 rounded-xl sm:rounded-2xl \r\n//             shadow-md hover:shadow-lg \r\n//             transition-shadow duration-300\r\n//             p-4 sm:p-6\r\n//           \">\r\n//             <OutputPanel output={output} />\r\n//           </div>\r\n//         </aside>\r\n//       </main>\r\n\r\n//       {/* Modals */}\r\n//       {showSaveModal && (\r\n//         <SaveGraphModal\r\n//           nodes={nodes}\r\n//           edges={edges}\r\n//           onSave={handleSaveGraph}\r\n//           onClose={() => setShowSaveModal(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {showLibrary && (\r\n//         <GraphLibrary\r\n//           onLoadGraph={handleLoadGraph}\r\n//           onClose={() => setShowLibrary(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {showHistory && (\r\n//         <ResultHistory\r\n//           onClose={() => setShowHistory(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {/* Footer - Now in normal document flow */}\r\n//       <footer className=\"\r\n//         bg-white/90 backdrop-blur-sm border-t border-gray-200\r\n//         py-6 sm:py-8 text-center\r\n//         text-sm sm:text-base text-gray-600 mt-12\r\n//       \">\r\n//         Made with ❤️ by{' '}\r\n//         <a\r\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors\"\r\n//         >\r\n//           Lalit Kumar Yadav\r\n//         </a>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import GraphVisualizer from './components/GraphVisualizer';\r\n// import Controls from './components/Controls';\r\n// import OutputPanel from './components/OutputPanel';\r\n// import SaveGraphModal from './components/SaveGraphModal';\r\n// import GraphLibrary from './components/GraphLibrary';\r\n// import ResultHistory from './components/ResultHistory';\r\n// import { runAlgorithm } from './api';\r\n\r\n// function App() {\r\n//   const [nodes, setNodes] = useState([]);\r\n//   const [edges, setEdges] = useState([]);\r\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\r\n//   const [source, setSource] = useState(0);\r\n//   const [output, setOutput] = useState(null);\r\n//   const [showSaveModal, setShowSaveModal] = useState(false);\r\n//   const [showLibrary, setShowLibrary] = useState(false);\r\n//   const [showHistory, setShowHistory] = useState(false);\r\n//   const [currentGraphName, setCurrentGraphName] = useState('');\r\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\r\n\r\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\r\n//     if (nodes.length === 0) {\r\n//       alert('Please add some nodes first!');\r\n//       return;\r\n//     }\r\n    \r\n//     if (edg.length === 0) {\r\n//       alert('Please add some edges first!');\r\n//       return;\r\n//     }\r\n    \r\n//     const requestBody = {\r\n//       nodes: nodes.map((_, idx) => idx),\r\n//       edges: edg.map(({ from, to, weight }) => ({\r\n//         from: from,\r\n//         to: to,\r\n//         weight: Number(weight)\r\n//       })),\r\n//       source: src,\r\n//       algorithm: algo\r\n//     };\r\n    \r\n//     try {\r\n//       setOutput({ loading: true });\r\n//       const startTime = Date.now();\r\n//       const result = await runAlgorithm(requestBody);\r\n//       const executionTime = Date.now() - startTime;\r\n      \r\n//       result.executionTime = executionTime;\r\n//       setOutput(result);\r\n      \r\n//       await saveAlgorithmResult(result, executionTime, src, algo);\r\n//     } catch (error) {\r\n//       console.error(\"Algorithm failed:\", error);\r\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\r\n//     }\r\n//   };\r\n\r\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\r\n//     try {\r\n//       const resultData = {\r\n//         graphName: currentGraphName || 'Untitled Graph',\r\n//         algorithm,\r\n//         source,\r\n//         result,\r\n//         executionTime,\r\n//         nodeCount: nodes.length,\r\n//         edgeCount: edges.length,\r\n//         createdBy: 'Lalit Kumar Yadav'\r\n//       };\r\n\r\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(resultData)\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         console.log('Result saved successfully!');\r\n//       } else {\r\n//         console.error('Failed to save result:', response.status);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving algorithm result:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSaveGraph = (savedGraph) => {\r\n//     setCurrentGraphName(savedGraph.name);\r\n//     setCurrentGraphId(savedGraph._id);\r\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\r\n//   };\r\n\r\n//   const handleLoadGraph = (graphData) => {\r\n//     setNodes(graphData.nodes);\r\n//     setEdges(graphData.edges);\r\n//     setCurrentGraphName(graphData.name);\r\n//     setCurrentGraphId(graphData._id);\r\n//     setOutput(null);\r\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\r\n//   };\r\n\r\n//   const clearGraph = () => {\r\n//     setNodes([]);\r\n//     setEdges([]);\r\n//     setOutput(null);\r\n//     setCurrentGraphName('');\r\n//     setCurrentGraphId(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\r\n//       {/* Header */}\r\n//       <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\r\n//         <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\r\n//           Shortest Distance Path Visualizer\r\n//         </h1>\r\n//         {currentGraphName && (\r\n//           <div className=\"mt-2 sm:mt-3\">\r\n//             <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\r\n//               Current Graph: {currentGraphName}\r\n//             </span>\r\n//           </div>\r\n//         )}\r\n//       </header>\r\n\r\n//       {/* Action Buttons */}\r\n//       <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\r\n//         <button\r\n//           onClick={() => setShowSaveModal(true)}\r\n//           disabled={nodes.length === 0}\r\n//           className={`\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             ${nodes.length === 0 \r\n//               ? 'bg-gray-400 cursor-not-allowed text-white' \r\n//               : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\r\n//             }\r\n//           `}\r\n//         >\r\n//           <span className=\"inline sm:hidden\">💾 Save</span>\r\n//           <span className=\"hidden sm:inline\">💾 Save Graph</span>\r\n//         </button>\r\n        \r\n//         <button\r\n//           onClick={() => setShowLibrary(true)}\r\n//           className=\"\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             bg-indigo-500 hover:bg-indigo-600 text-white\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             shadow-lg hover:shadow-xl\r\n//           \"\r\n//         >\r\n//           <span className=\"inline sm:hidden\">📚 Load</span>\r\n//           <span className=\"hidden sm:inline\">📚 Load Graph</span>\r\n//         </button>\r\n\r\n//         <button\r\n//           onClick={() => setShowHistory(true)}\r\n//           className=\"\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             bg-purple-500 hover:bg-purple-600 text-white\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             shadow-lg hover:shadow-xl\r\n//           \"\r\n//         >\r\n//           <span className=\"inline sm:hidden\">📈 History</span>\r\n//           <span className=\"hidden sm:inline\">📈 View History</span>\r\n//         </button>\r\n        \r\n//         <button\r\n//           onClick={clearGraph}\r\n//           disabled={nodes.length === 0}\r\n//           className={`\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             ${nodes.length === 0 \r\n//               ? 'bg-gray-400 cursor-not-allowed text-white' \r\n//               : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\r\n//             }\r\n//           `}\r\n//         >\r\n//           <span className=\"inline sm:hidden\">🗑️ Clear</span>\r\n//           <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Main Content - FIXED: Increased bottom padding for mobile */}\r\n//       <main className=\"\r\n//         flex flex-col lg:flex-row \r\n//         justify-center items-start \r\n//         gap-4 sm:gap-6 lg:gap-8 \r\n//         max-w-7xl mx-auto \r\n//         px-4 sm:px-6 lg:px-8\r\n//         pb-28 sm:pb-24 lg:pb-20\r\n//       \">\r\n//         {/* Graph Visualizer Section */}\r\n//         <section className=\"\r\n//           w-full lg:w-2/3 xl:w-3/5\r\n//           bg-white rounded-xl sm:rounded-2xl \r\n//           shadow-lg hover:shadow-xl \r\n//           transition-shadow duration-300\r\n//           p-4 sm:p-6 lg:p-8\r\n//           min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\r\n//         \">\r\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\r\n//         </section>\r\n        \r\n//         {/* Controls and Output Sidebar */}\r\n//         <aside className=\"\r\n//           w-full lg:w-1/3 xl:w-2/5\r\n//           flex flex-col gap-4 sm:gap-6\r\n//         \">\r\n//           {/* Controls Panel */}\r\n//           <div className=\"\r\n//             bg-white rounded-xl sm:rounded-2xl \r\n//             shadow-md hover:shadow-lg \r\n//             transition-shadow duration-300\r\n//             p-4 sm:p-6\r\n//           \">\r\n//             <Controls\r\n//               nodes={nodes}\r\n//               setNodes={setNodes}\r\n//               edges={edges}\r\n//               setEdges={setEdges}\r\n//               algorithm={algorithm}\r\n//               setAlgorithm={setAlgorithm}\r\n//               source={source}\r\n//               setSource={setSource}\r\n//               onRun={handleRun}\r\n//             />\r\n//           </div>\r\n          \r\n//           {/* Output Panel */}\r\n//           <div className=\"\r\n//             bg-gray-50 rounded-xl sm:rounded-2xl \r\n//             shadow-md hover:shadow-lg \r\n//             transition-shadow duration-300\r\n//             p-4 sm:p-6\r\n//           \">\r\n//             <OutputPanel output={output} />\r\n//           </div>\r\n//         </aside>\r\n//       </main>\r\n\r\n//       {/* Modals */}\r\n//       {showSaveModal && (\r\n//         <SaveGraphModal\r\n//           nodes={nodes}\r\n//           edges={edges}\r\n//           onSave={handleSaveGraph}\r\n//           onClose={() => setShowSaveModal(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {showLibrary && (\r\n//         <GraphLibrary\r\n//           onLoadGraph={handleLoadGraph}\r\n//           onClose={() => setShowLibrary(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {showHistory && (\r\n//         <ResultHistory\r\n//           onClose={() => setShowHistory(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {/* Footer - FIXED: Added safe area support and better mobile handling */}\r\n//       <footer className=\"\r\n//         fixed bottom-0 left-0 right-0 z-50\r\n//         bg-white/90 backdrop-blur-sm border-t border-gray-200\r\n//         py-2 sm:py-3 text-center\r\n//         text-xs sm:text-sm lg:text-base text-gray-600\r\n//         pb-safe-area-inset-bottom\r\n//         min-h-[60px] sm:min-h-[56px]\r\n//       \">\r\n//         <div className=\"flex items-center justify-center h-full\">\r\n//           Made with ❤️ by{' '}\r\n//           <a\r\n//             href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\r\n//             target=\"_blank\"\r\n//             rel=\"noopener noreferrer\"\r\n//             className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors ml-1\"\r\n//           >\r\n//             Lalit Kumar Yadav\r\n//           </a>\r\n//         </div>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import GraphVisualizer from './components/GraphVisualizer';\r\n// import Controls from './components/Controls';\r\n// import OutputPanel from './components/OutputPanel';\r\n// import SaveGraphModal from './components/SaveGraphModal';\r\n// import GraphLibrary from './components/GraphLibrary';\r\n// import ResultHistory from './components/ResultHistory';\r\n// import { runAlgorithm } from './api';\r\n\r\n// function App() {\r\n//   const [nodes, setNodes] = useState([]);\r\n//   const [edges, setEdges] = useState([]);\r\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\r\n//   const [source, setSource] = useState(0);\r\n//   const [output, setOutput] = useState(null);\r\n//   const [showSaveModal, setShowSaveModal] = useState(false);\r\n//   const [showLibrary, setShowLibrary] = useState(false);\r\n//   const [showHistory, setShowHistory] = useState(false);\r\n//   const [currentGraphName, setCurrentGraphName] = useState('');\r\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\r\n\r\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\r\n//     if (nodes.length === 0) {\r\n//       alert('Please add some nodes first!');\r\n//       return;\r\n//     }\r\n    \r\n//     if (edg.length === 0) {\r\n//       alert('Please add some edges first!');\r\n//       return;\r\n//     }\r\n    \r\n//     const requestBody = {\r\n//       nodes: nodes.map((_, idx) => idx),\r\n//       edges: edg.map(({ from, to, weight }) => ({\r\n//         from: from,\r\n//         to: to,\r\n//         weight: Number(weight)\r\n//       })),\r\n//       source: src,\r\n//       algorithm: algo\r\n//     };\r\n    \r\n//     try {\r\n//       setOutput({ loading: true });\r\n//       const startTime = Date.now();\r\n//       const result = await runAlgorithm(requestBody);\r\n//       const executionTime = Date.now() - startTime;\r\n      \r\n//       result.executionTime = executionTime;\r\n//       setOutput(result);\r\n      \r\n//       await saveAlgorithmResult(result, executionTime, src, algo);\r\n//     } catch (error) {\r\n//       console.error(\"Algorithm failed:\", error);\r\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\r\n//     }\r\n//   };\r\n\r\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\r\n//     try {\r\n//       const resultData = {\r\n//         graphName: currentGraphName || 'Untitled Graph',\r\n//         algorithm,\r\n//         source,\r\n//         result,\r\n//         executionTime,\r\n//         nodeCount: nodes.length,\r\n//         edgeCount: edges.length,\r\n//         createdBy: 'Lalit Kumar Yadav'\r\n//       };\r\n\r\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(resultData)\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         console.log('Result saved successfully!');\r\n//       } else {\r\n//         console.error('Failed to save result:', response.status);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving algorithm result:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSaveGraph = (savedGraph) => {\r\n//     setCurrentGraphName(savedGraph.name);\r\n//     setCurrentGraphId(savedGraph._id);\r\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\r\n//   };\r\n\r\n//   const handleLoadGraph = (graphData) => {\r\n//     setNodes(graphData.nodes);\r\n//     setEdges(graphData.edges);\r\n//     setCurrentGraphName(graphData.name);\r\n//     setCurrentGraphId(graphData._id);\r\n//     setOutput(null);\r\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\r\n//   };\r\n\r\n//   const clearGraph = () => {\r\n//     setNodes([]);\r\n//     setEdges([]);\r\n//     setOutput(null);\r\n//     setCurrentGraphName('');\r\n//     setCurrentGraphId(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 font-sans\">\r\n//       {/* Header */}\r\n//       <header className=\"text-center py-4 sm:py-6 lg:py-8 px-4\">\r\n//         <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 tracking-wide\">\r\n//           Shortest Distance Path Visualizer\r\n//         </h1>\r\n//         {currentGraphName && (\r\n//           <div className=\"mt-2 sm:mt-3\">\r\n//             <span className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm sm:text-base font-medium\">\r\n//               Current Graph: {currentGraphName}\r\n//             </span>\r\n//           </div>\r\n//         )}\r\n//       </header>\r\n\r\n//       {/* Action Buttons */}\r\n//       <div className=\"flex flex-wrap justify-center gap-2 sm:gap-3 lg:gap-4 px-4 mb-6 sm:mb-8\">\r\n//         <button\r\n//           onClick={() => setShowSaveModal(true)}\r\n//           disabled={nodes.length === 0}\r\n//           className={`\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             ${nodes.length === 0 \r\n//               ? 'bg-gray-400 cursor-not-allowed text-white' \r\n//               : 'bg-emerald-500 hover:bg-emerald-600 text-white shadow-lg hover:shadow-xl'\r\n//             }\r\n//           `}\r\n//         >\r\n//           <span className=\"inline sm:hidden\">💾 Save</span>\r\n//           <span className=\"hidden sm:inline\">💾 Save Graph</span>\r\n//         </button>\r\n        \r\n//         <button\r\n//           onClick={() => setShowLibrary(true)}\r\n//           className=\"\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             bg-indigo-500 hover:bg-indigo-600 text-white\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             shadow-lg hover:shadow-xl\r\n//           \"\r\n//         >\r\n//           <span className=\"inline sm:hidden\">📚 Load</span>\r\n//           <span className=\"hidden sm:inline\">📚 Load Graph</span>\r\n//         </button>\r\n\r\n//         <button\r\n//           onClick={() => setShowHistory(true)}\r\n//           className=\"\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             bg-purple-500 hover:bg-purple-600 text-white\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             shadow-lg hover:shadow-xl\r\n//           \"\r\n//         >\r\n//           <span className=\"inline sm:hidden\">📈 History</span>\r\n//           <span className=\"hidden sm:inline\">📈 View History</span>\r\n//         </button>\r\n        \r\n//         <button\r\n//           onClick={clearGraph}\r\n//           disabled={nodes.length === 0}\r\n//           className={`\r\n//             px-3 py-2 sm:px-4 sm:py-2.5 lg:px-6 lg:py-3\r\n//             rounded-lg font-semibold text-sm sm:text-base\r\n//             transition-all duration-200 transform hover:scale-105\r\n//             ${nodes.length === 0 \r\n//               ? 'bg-gray-400 cursor-not-allowed text-white' \r\n//               : 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-xl'\r\n//             }\r\n//           `}\r\n//         >\r\n//           <span className=\"inline sm:hidden\">🗑️ Clear</span>\r\n//           <span className=\"hidden sm:inline\">🗑️ Clear Graph</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Main Content */}\r\n//       <main className=\"\r\n//         flex flex-col lg:flex-row \r\n//         justify-center items-start \r\n//         gap-4 sm:gap-6 lg:gap-8 \r\n//         max-w-7xl mx-auto \r\n//         px-4 sm:px-6 lg:px-8\r\n//         pb-20\r\n//       \">\r\n//         {/* Graph Visualizer Section */}\r\n//         <section className=\"\r\n//           w-full lg:w-2/3 xl:w-3/5\r\n//           bg-white rounded-xl sm:rounded-2xl \r\n//           shadow-lg hover:shadow-xl \r\n//           transition-shadow duration-300\r\n//           p-4 sm:p-6 lg:p-8\r\n//           min-h-[400px] sm:min-h-[500px] lg:min-h-[600px]\r\n//         \">\r\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\r\n//         </section>\r\n        \r\n//         {/* Controls and Output Sidebar */}\r\n//         <aside className=\"\r\n//           w-full lg:w-1/3 xl:w-2/5\r\n//           flex flex-col gap-4 sm:gap-6\r\n//         \">\r\n//           {/* Controls Panel */}\r\n//           <div className=\"\r\n//             bg-white rounded-xl sm:rounded-2xl \r\n//             shadow-md hover:shadow-lg \r\n//             transition-shadow duration-300\r\n//             p-4 sm:p-6\r\n//           \">\r\n//             <Controls\r\n//               nodes={nodes}\r\n//               setNodes={setNodes}\r\n//               edges={edges}\r\n//               setEdges={setEdges}\r\n//               algorithm={algorithm}\r\n//               setAlgorithm={setAlgorithm}\r\n//               source={source}\r\n//               setSource={setSource}\r\n//               onRun={handleRun}\r\n//             />\r\n//           </div>\r\n          \r\n//           {/* Output Panel */}\r\n//           <div className=\"\r\n//             bg-gray-50 rounded-xl sm:rounded-2xl \r\n//             shadow-md hover:shadow-lg \r\n//             transition-shadow duration-300\r\n//             p-4 sm:p-6\r\n//           \">\r\n//             <OutputPanel output={output} />\r\n//           </div>\r\n//         </aside>\r\n//       </main>\r\n\r\n//       {/* Modals */}\r\n//       {showSaveModal && (\r\n//         <SaveGraphModal\r\n//           nodes={nodes}\r\n//           edges={edges}\r\n//           onSave={handleSaveGraph}\r\n//           onClose={() => setShowSaveModal(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {showLibrary && (\r\n//         <GraphLibrary\r\n//           onLoadGraph={handleLoadGraph}\r\n//           onClose={() => setShowLibrary(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {showHistory && (\r\n//         <ResultHistory\r\n//           onClose={() => setShowHistory(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {/* Footer */}\r\n//       <footer className=\"\r\n//         fixed bottom-0 left-0 right-0 z-50\r\n//         bg-white/80 backdrop-blur-sm border-t border-gray-200\r\n//         py-2 sm:py-3 text-center\r\n//         text-sm sm:text-base text-gray-600\r\n//       \">\r\n//         Made with ❤️ by{' '}\r\n//         <a\r\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           className=\"text-blue-600 hover:text-blue-800 underline font-semibold transition-colors\"\r\n//         >\r\n//           Lalit Kumar Yadav\r\n//         </a>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import GraphVisualizer from './components/GraphVisualizer';\r\n// import Controls from './components/Controls';\r\n// import OutputPanel from './components/OutputPanel';\r\n// import SaveGraphModal from './components/SaveGraphModal';\r\n// import GraphLibrary from './components/GraphLibrary';\r\n// import ResultHistory from './components/ResultHistory';\r\n// import { runAlgorithm } from './api';\r\n\r\n\r\n// function App() {\r\n//   const [nodes, setNodes] = useState([]);\r\n//   const [edges, setEdges] = useState([]);\r\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\r\n//   const [source, setSource] = useState(0);\r\n//   const [output, setOutput] = useState(null);\r\n//   const [showSaveModal, setShowSaveModal] = useState(false);\r\n//   const [showLibrary, setShowLibrary] = useState(false);\r\n//   const [showHistory, setShowHistory] = useState(false);\r\n//   const [currentGraphName, setCurrentGraphName] = useState('');\r\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\r\n \r\n//   // Responsive state management\r\n//   const [isMobile, setIsMobile] = useState(false);\r\n\r\n\r\n//   useEffect(() => {\r\n//     const checkScreenSize = () => {\r\n//       setIsMobile(window.innerWidth <= 768);\r\n//     };\r\n\r\n\r\n//     checkScreenSize();\r\n//     window.addEventListener('resize', checkScreenSize);\r\n//     return () => window.removeEventListener('resize', checkScreenSize);\r\n//   }, []);\r\n\r\n\r\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\r\n//     if (nodes.length === 0) {\r\n//       alert('Please add some nodes first!');\r\n//       return;\r\n//     }\r\n   \r\n//     if (edg.length === 0) {\r\n//       alert('Please add some edges first!');\r\n//       return;\r\n//     }\r\n   \r\n//     const requestBody = {\r\n//       nodes: nodes.map((_, idx) => idx),\r\n//       edges: edg.map(({ from, to, weight }) => ({\r\n//         from: from,\r\n//         to: to,\r\n//         weight: Number(weight)\r\n//       })),\r\n//       source: src,\r\n//       algorithm: algo\r\n//     };\r\n   \r\n//     try {\r\n//       setOutput({ loading: true });\r\n//       const startTime = Date.now();\r\n//       const result = await runAlgorithm(requestBody);\r\n//       const executionTime = Date.now() - startTime;\r\n     \r\n//       result.executionTime = executionTime;\r\n//       setOutput(result);\r\n     \r\n//       // Auto-save result to history\r\n//       await saveAlgorithmResult(result, executionTime, src, algo);\r\n//     } catch (error) {\r\n//       console.error(\"Algorithm failed:\", error);\r\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\r\n//     }\r\n//   };\r\n\r\n\r\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\r\n//     try {\r\n//       const resultData = {\r\n//         graphName: currentGraphName || 'Untitled Graph',\r\n//         algorithm,\r\n//         source,\r\n//         result,\r\n//         executionTime,\r\n//         nodeCount: nodes.length,\r\n//         edgeCount: edges.length,\r\n//         createdBy: 'Lalit Kumar Yadav'\r\n//       };\r\n\r\n\r\n//       console.log('Saving result:', resultData);\r\n\r\n\r\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(resultData)\r\n//       });\r\n\r\n\r\n//       if (response.ok) {\r\n//         console.log('Result saved successfully!');\r\n//       } else {\r\n//         console.error('Failed to save result:', response.status);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving algorithm result:', error);\r\n//     }\r\n//   };\r\n\r\n\r\n//   const handleSaveGraph = (savedGraph) => {\r\n//     setCurrentGraphName(savedGraph.name);\r\n//     setCurrentGraphId(savedGraph._id);\r\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\r\n//   };\r\n\r\n\r\n//   const handleLoadGraph = (graphData) => {\r\n//     setNodes(graphData.nodes);\r\n//     setEdges(graphData.edges);\r\n//     setCurrentGraphName(graphData.name);\r\n//     setCurrentGraphId(graphData._id);\r\n//     setOutput(null);\r\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\r\n//   };\r\n\r\n\r\n//   const clearGraph = () => {\r\n//     setNodes([]);\r\n//     setEdges([]);\r\n//     setOutput(null);\r\n//     setCurrentGraphName('');\r\n//     setCurrentGraphId(null);\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <div style={{\r\n//       minHeight: '100vh',\r\n//       background: 'linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%)',\r\n//       fontFamily: 'Segoe UI, sans-serif',\r\n//       padding: '0',\r\n//       margin: '0'\r\n//     }}>\r\n//       <header style={{\r\n//         textAlign: 'center',\r\n//         padding: isMobile ? '1rem 0' : '2rem 0 1rem 0',\r\n//         fontSize: isMobile ? '1.8rem' : '2.5rem',\r\n//         fontWeight: 'bold',\r\n//         color: '#3a3a3a',\r\n//         letterSpacing: '1px'\r\n//       }}>\r\n//         Shortest Distance Path Visualizer\r\n//         {currentGraphName && (\r\n//           <div style={{\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             color: '#2563eb',\r\n//             fontWeight: 'normal',\r\n//             marginTop: '0.5rem'\r\n//           }}>\r\n//             Current Graph: {currentGraphName}\r\n//           </div>\r\n//         )}\r\n//       </header>\r\n\r\n\r\n//       {/* Action Buttons */}\r\n//       <div style={{\r\n//         textAlign: 'center',\r\n//         marginBottom: '1.5rem',\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         gap: isMobile ? '0.5rem' : '1rem',\r\n//         flexWrap: 'wrap',\r\n//         padding: '0 1rem'\r\n//       }}>\r\n//         <button\r\n//           onClick={() => setShowSaveModal(true)}\r\n//           disabled={nodes.length === 0}\r\n//           style={{\r\n//             background: nodes.length === 0 ? '#9ca3af' : '#10b981',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '8px',\r\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\r\n//             fontWeight: 'bold',\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             cursor: nodes.length === 0 ? 'not-allowed' : 'pointer'\r\n//           }}\r\n//         >\r\n//           💾 {isMobile ? 'Save' : 'Save Graph'}\r\n//         </button>\r\n       \r\n//         <button\r\n//           onClick={() => setShowLibrary(true)}\r\n//           style={{\r\n//             background: '#6366f1',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '8px',\r\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\r\n//             fontWeight: 'bold',\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             cursor: 'pointer'\r\n//           }}\r\n//         >\r\n//           📚 {isMobile ? 'Load' : 'Load Graph'}\r\n//         </button>\r\n\r\n\r\n//         <button\r\n//           onClick={() => setShowHistory(true)}\r\n//           style={{\r\n//             background: '#8b5cf6',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '8px',\r\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\r\n//             fontWeight: 'bold',\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             cursor: 'pointer'\r\n//           }}\r\n//         >\r\n//           📈 {isMobile ? 'History' : 'View History'}\r\n//         </button>\r\n       \r\n//         <button\r\n//           onClick={clearGraph}\r\n//           disabled={nodes.length === 0}\r\n//           style={{\r\n//             background: nodes.length === 0 ? '#9ca3af' : '#ef4444',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '8px',\r\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\r\n//             fontWeight: 'bold',\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             cursor: nodes.length === 0 ? 'not-allowed' : 'pointer'\r\n//           }}\r\n//         >\r\n//           🗑️ {isMobile ? 'Clear' : 'Clear Graph'}\r\n//         </button>\r\n//       </div>\r\n\r\n\r\n//       <main style={{\r\n//         display: 'flex',\r\n//         flexDirection: isMobile ? 'column' : 'row',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'flex-start',\r\n//         gap: isMobile ? '1rem' : '2rem',\r\n//         margin: '0 auto',\r\n//         maxWidth: '1400px',\r\n//         padding: '0 1rem'\r\n//       }}>\r\n//         <section style={{\r\n//           flex: isMobile ? '1' : '2',\r\n//           width: isMobile ? '100%' : 'auto',\r\n//           minWidth: isMobile ? '100%' : '400px',\r\n//           background: '#fff',\r\n//           borderRadius: '20px',\r\n//           boxShadow: '0 6px 24px rgba(80,120,180,0.10)',\r\n//           padding: isMobile ? '1rem' : '2rem',\r\n//           marginBottom: '2rem'\r\n//         }}>\r\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\r\n//         </section>\r\n       \r\n//         <aside style={{\r\n//           flex: '1',\r\n//           width: isMobile ? '100%' : 'auto',\r\n//           minWidth: isMobile ? '100%' : '300px',\r\n//           display: 'flex',\r\n//           flexDirection: 'column',\r\n//           gap: isMobile ? '1rem' : '2rem'\r\n//         }}>\r\n//           <div style={{\r\n//             background: '#fff',\r\n//             borderRadius: '16px',\r\n//             boxShadow: '0 4px 16px rgba(120,120,120,0.10)',\r\n//             padding: '1.5rem'\r\n//           }}>\r\n//             <Controls\r\n//               nodes={nodes}\r\n//               setNodes={setNodes}\r\n//               edges={edges}\r\n//               setEdges={setEdges}\r\n//               algorithm={algorithm}\r\n//               setAlgorithm={setAlgorithm}\r\n//               source={source}\r\n//               setSource={setSource}\r\n//               onRun={handleRun}\r\n//             />\r\n//           </div>\r\n         \r\n//           <div style={{\r\n//             background: '#f9fafb',\r\n//             borderRadius: '16px',\r\n//             boxShadow: '0 2px 8px rgba(120,120,120,0.07)',\r\n//             padding: '1.5rem'\r\n//           }}>\r\n//             <OutputPanel output={output} />\r\n//           </div>\r\n//         </aside>\r\n//       </main>\r\n\r\n\r\n//       {/* Modals */}\r\n//       {showSaveModal && (\r\n//         <SaveGraphModal\r\n//           nodes={nodes}\r\n//           edges={edges}\r\n//           onSave={handleSaveGraph}\r\n//           onClose={() => setShowSaveModal(false)}\r\n//         />\r\n//       )}\r\n\r\n\r\n//       {showLibrary && (\r\n//         <GraphLibrary\r\n//           onLoadGraph={handleLoadGraph}\r\n//           onClose={() => setShowLibrary(false)}\r\n//         />\r\n//       )}\r\n\r\n\r\n//       {showHistory && (\r\n//         <ResultHistory\r\n//           onClose={() => setShowHistory(false)}\r\n//         />\r\n//       )}\r\n\r\n\r\n//       <footer style={{\r\n//         width: '100%',\r\n//         textAlign: 'center',\r\n//         padding: '1rem 0',\r\n//         background: 'transparent',\r\n//         fontSize: '1.1rem',\r\n//         color: '#555',\r\n//         position: 'fixed',\r\n//         left: 0,\r\n//         bottom: 0,\r\n//         zIndex: 100\r\n//       }}>\r\n//         Made with ❤️ by <a\r\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           style={{ color: '#2563eb', textDecoration: 'underline', fontWeight: 'bold' }}\r\n//         >\r\n//           Lalit Kumar Yadav\r\n//         </a>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import GraphVisualizer from './components/GraphVisualizer';\r\n// import Controls from './components/Controls';\r\n// import OutputPanel from './components/OutputPanel';\r\n// import SaveGraphModal from './components/SaveGraphModal';\r\n// import GraphLibrary from './components/GraphLibrary';\r\n// import ResultHistory from './components/ResultHistory';\r\n// import { runAlgorithm } from './api';\r\n\r\n// function App() {\r\n//   const [nodes, setNodes] = useState([]);\r\n//   const [edges, setEdges] = useState([]);\r\n//   const [algorithm, setAlgorithm] = useState('dijkstra');\r\n//   const [source, setSource] = useState(0);\r\n//   const [output, setOutput] = useState(null);\r\n//   const [showSaveModal, setShowSaveModal] = useState(false);\r\n//   const [showLibrary, setShowLibrary] = useState(false);\r\n//   const [showHistory, setShowHistory] = useState(false);\r\n//   const [currentGraphName, setCurrentGraphName] = useState('');\r\n//   const [currentGraphId, setCurrentGraphId] = useState(null);\r\n  \r\n//   // Responsive state management\r\n//   const [isMobile, setIsMobile] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const checkScreenSize = () => {\r\n//       setIsMobile(window.innerWidth <= 768);\r\n//     };\r\n\r\n//     checkScreenSize();\r\n//     window.addEventListener('resize', checkScreenSize);\r\n//     return () => window.removeEventListener('resize', checkScreenSize);\r\n//   }, []);\r\n\r\n//   const handleRun = async (src = source, edg = edges, algo = algorithm) => {\r\n//     if (nodes.length === 0) {\r\n//       alert('Please add some nodes first!');\r\n//       return;\r\n//     }\r\n    \r\n//     if (edg.length === 0) {\r\n//       alert('Please add some edges first!');\r\n//       return;\r\n//     }\r\n    \r\n//     const requestBody = {\r\n//       nodes: nodes.map((_, idx) => idx),\r\n//       edges: edg.map(({ from, to, weight }) => ({\r\n//         from: from,\r\n//         to: to,\r\n//         weight: Number(weight)\r\n//       })),\r\n//       source: src,\r\n//       algorithm: algo\r\n//     };\r\n    \r\n//     try {\r\n//       setOutput({ loading: true });\r\n//       const startTime = Date.now();\r\n//       const result = await runAlgorithm(requestBody);\r\n//       const executionTime = Date.now() - startTime;\r\n      \r\n//       result.executionTime = executionTime;\r\n//       setOutput(result);\r\n      \r\n//       // Auto-save result to history\r\n//       await saveAlgorithmResult(result, executionTime, src, algo);\r\n//     } catch (error) {\r\n//       console.error(\"Algorithm failed:\", error);\r\n//       setOutput({ error: `Algorithm failed: ${error.message}` });\r\n//     }\r\n//   };\r\n\r\n//   const saveAlgorithmResult = async (result, executionTime, source, algorithm) => {\r\n//     try {\r\n//       const resultData = {\r\n//         graphName: currentGraphName || 'Untitled Graph',\r\n//         algorithm,\r\n//         source,\r\n//         result,\r\n//         executionTime,\r\n//         nodeCount: nodes.length,\r\n//         edgeCount: edges.length,\r\n//         createdBy: 'Lalit Kumar Yadav'\r\n//       };\r\n\r\n//       console.log('Saving result:', resultData);\r\n\r\n//       const response = await fetch('http://localhost:5000/api/db/graphs/results', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(resultData)\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         console.log('Result saved successfully!');\r\n//       } else {\r\n//         console.error('Failed to save result:', response.status);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving algorithm result:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSaveGraph = (savedGraph) => {\r\n//     setCurrentGraphName(savedGraph.name);\r\n//     setCurrentGraphId(savedGraph._id);\r\n//     alert(`Graph \"${savedGraph.name}\" saved successfully!`);\r\n//   };\r\n\r\n//   const handleLoadGraph = (graphData) => {\r\n//     setNodes(graphData.nodes);\r\n//     setEdges(graphData.edges);\r\n//     setCurrentGraphName(graphData.name);\r\n//     setCurrentGraphId(graphData._id);\r\n//     setOutput(null);\r\n//     alert(`Graph \"${graphData.name}\" loaded successfully!`);\r\n//   };\r\n\r\n//   const clearGraph = () => {\r\n//     setNodes([]);\r\n//     setEdges([]);\r\n//     setOutput(null);\r\n//     setCurrentGraphName('');\r\n//     setCurrentGraphId(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{\r\n//       minHeight: '100vh',\r\n//       background: 'linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%)',\r\n//       fontFamily: 'Segoe UI, sans-serif',\r\n//       padding: '0',\r\n//       margin: '0'\r\n//     }}>\r\n//       <header style={{\r\n//         textAlign: 'center',\r\n//         padding: isMobile ? '1rem 0' : '2rem 0 1rem 0',\r\n//         fontSize: isMobile ? '1.8rem' : '2.5rem',\r\n//         fontWeight: 'bold',\r\n//         color: '#3a3a3a',\r\n//         letterSpacing: '1px'\r\n//       }}>\r\n//         Shortest Distance Path Visualizer\r\n//         {currentGraphName && (\r\n//           <div style={{\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             color: '#2563eb',\r\n//             fontWeight: 'normal',\r\n//             marginTop: '0.5rem'\r\n//           }}>\r\n//             Current Graph: {currentGraphName}\r\n//           </div>\r\n//         )}\r\n//       </header>\r\n\r\n//       {/* Action Buttons */}\r\n//       <div style={{\r\n//         textAlign: 'center',\r\n//         marginBottom: '1.5rem',\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         gap: isMobile ? '0.5rem' : '1rem',\r\n//         flexWrap: 'wrap',\r\n//         padding: '0 1rem'\r\n//       }}>\r\n//         <button\r\n//           onClick={() => setShowSaveModal(true)}\r\n//           disabled={nodes.length === 0}\r\n//           style={{\r\n//             background: nodes.length === 0 ? '#9ca3af' : '#10b981',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '8px',\r\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\r\n//             fontWeight: 'bold',\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             cursor: nodes.length === 0 ? 'not-allowed' : 'pointer'\r\n//           }}\r\n//         >\r\n//           💾 {isMobile ? 'Save' : 'Save Graph'}\r\n//         </button>\r\n        \r\n//         <button\r\n//           onClick={() => setShowLibrary(true)}\r\n//           style={{\r\n//             background: '#6366f1',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '8px',\r\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\r\n//             fontWeight: 'bold',\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             cursor: 'pointer'\r\n//           }}\r\n//         >\r\n//           📚 {isMobile ? 'Load' : 'Load Graph'}\r\n//         </button>\r\n\r\n//         <button\r\n//           onClick={() => setShowHistory(true)}\r\n//           style={{\r\n//             background: '#8b5cf6',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '8px',\r\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\r\n//             fontWeight: 'bold',\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             cursor: 'pointer'\r\n//           }}\r\n//         >\r\n//           📈 {isMobile ? 'History' : 'View History'}\r\n//         </button>\r\n        \r\n//         <button\r\n//           onClick={clearGraph}\r\n//           disabled={nodes.length === 0}\r\n//           style={{\r\n//             background: nodes.length === 0 ? '#9ca3af' : '#ef4444',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '8px',\r\n//             padding: isMobile ? '0.4rem 1rem' : '0.5rem 1.5rem',\r\n//             fontWeight: 'bold',\r\n//             fontSize: isMobile ? '0.9rem' : '1rem',\r\n//             cursor: nodes.length === 0 ? 'not-allowed' : 'pointer'\r\n//           }}\r\n//         >\r\n//           🗑️ {isMobile ? 'Clear' : 'Clear Graph'}\r\n//         </button>\r\n//       </div>\r\n\r\n//       <main style={{\r\n//         display: 'flex',\r\n//         flexDirection: isMobile ? 'column' : 'row',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'flex-start',\r\n//         gap: isMobile ? '1rem' : '2rem',\r\n//         margin: '0 auto',\r\n//         maxWidth: '1400px',\r\n//         padding: '0 1rem'\r\n//       }}>\r\n//         <section style={{\r\n//           flex: isMobile ? '1' : '2',\r\n//           width: isMobile ? '100%' : 'auto',\r\n//           minWidth: isMobile ? '100%' : '400px',\r\n//           background: '#fff',\r\n//           borderRadius: '20px',\r\n//           boxShadow: '0 6px 24px rgba(80,120,180,0.10)',\r\n//           padding: isMobile ? '1rem' : '2rem',\r\n//           marginBottom: '2rem'\r\n//         }}>\r\n//           <GraphVisualizer nodes={nodes} edges={edges} output={output} />\r\n//         </section>\r\n        \r\n//         <aside style={{\r\n//           flex: '1',\r\n//           width: isMobile ? '100%' : 'auto',\r\n//           minWidth: isMobile ? '100%' : '300px',\r\n//           display: 'flex',\r\n//           flexDirection: 'column',\r\n//           gap: isMobile ? '1rem' : '2rem'\r\n//         }}>\r\n//           <div style={{\r\n//             background: '#fff',\r\n//             borderRadius: '16px',\r\n//             boxShadow: '0 4px 16px rgba(120,120,120,0.10)',\r\n//             padding: '1.5rem'\r\n//           }}>\r\n//             <Controls\r\n//               nodes={nodes}\r\n//               setNodes={setNodes}\r\n//               edges={edges}\r\n//               setEdges={setEdges}\r\n//               algorithm={algorithm}\r\n//               setAlgorithm={setAlgorithm}\r\n//               source={source}\r\n//               setSource={setSource}\r\n//               onRun={handleRun}\r\n//             />\r\n//           </div>\r\n          \r\n//           <div style={{\r\n//             background: '#f9fafb',\r\n//             borderRadius: '16px',\r\n//             boxShadow: '0 2px 8px rgba(120,120,120,0.07)',\r\n//             padding: '1.5rem'\r\n//           }}>\r\n//             <OutputPanel output={output} />\r\n//           </div>\r\n//         </aside>\r\n//       </main>\r\n\r\n//       {/* Modals */}\r\n//       {showSaveModal && (\r\n//         <SaveGraphModal\r\n//           nodes={nodes}\r\n//           edges={edges}\r\n//           onSave={handleSaveGraph}\r\n//           onClose={() => setShowSaveModal(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {showLibrary && (\r\n//         <GraphLibrary\r\n//           onLoadGraph={handleLoadGraph}\r\n//           onClose={() => setShowLibrary(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {showHistory && (\r\n//         <ResultHistory\r\n//           onClose={() => setShowHistory(false)}\r\n//         />\r\n//       )}\r\n\r\n//       <footer style={{\r\n//         width: '100%',\r\n//         textAlign: 'center',\r\n//         padding: '1rem 0',\r\n//         background: 'transparent',\r\n//         fontSize: '1.1rem',\r\n//         color: '#555',\r\n//         position: 'fixed',\r\n//         left: 0,\r\n//         bottom: 0,\r\n//         zIndex: 100\r\n//       }}>\r\n//         Made with ❤️ by <a\r\n//           href=\"https://github.com/Lalit-Kumar-Yadav-DTU\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           style={{ color: '#2563eb', textDecoration: 'underline', fontWeight: 'bold' }}\r\n//         >\r\n//           Lalit Kumar Yadav\r\n//         </a>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}