{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajat\\\\Desktop\\\\Graph_Visualizer\\\\frontend\\\\src\\\\components\\\\SaveGraphModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SaveGraphModal({\n  nodes,\n  edges,\n  onSave,\n  onClose\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    tags: ''\n  });\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n\n  // ✅ FIXED: Use environment variable instead of hardcoded localhost\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.name.trim()) {\n      setError('Graph name is required');\n      return;\n    }\n    setSaving(true);\n    setError(null);\n    try {\n      // ✅ ADD AUTH TOKEN HERE\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Authentication required. Please login again.');\n        setSaving(false);\n        return;\n      }\n      const graphData = {\n        name: formData.name.trim(),\n        description: formData.description.trim(),\n        nodes: nodes.map((_, index) => ({\n          id: index\n        })),\n        edges: edges,\n        tags: formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\n        isPublic: false // Add privacy control\n      };\n\n      // 🔧 FIXED: Use environment variable instead of hardcoded localhost\n      const response = await fetch(`${API_BASE_URL}/api/graphs/save_graph`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}` // ✅ AUTH TOKEN REQUIRED\n        },\n        body: JSON.stringify(graphData)\n      });\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          setError('Session expired. Please login again.');\n          return;\n        }\n        throw new Error(`Failed to save graph: ${response.status}`);\n      }\n      const result = await response.json();\n      if (result.success) {\n        onSave(result.data);\n        onClose();\n      } else {\n        setError(result.error || 'Failed to save graph');\n      }\n    } catch (error) {\n      console.error('Error saving graph:', error);\n      setError('Failed to save graph. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1000] p-2 sm:p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \\r w-full sm:w-[90%] md:w-[80%] lg:w-[70%] xl:w-[60%] max-w-2xl\\r max-h-[95vh] sm:max-h-[90vh] md:max-h-[85vh] lg:max-h-[80vh] \\r overflow-y-auto shadow-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4 sm:mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-primary-600 text-xl sm:text-2xl font-bold m-0\",\n          children: \"Save Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"bg-transparent border-0 text-xl sm:text-2xl cursor-pointer \\r text-gray-600 hover:text-gray-800 p-1 rounded-full hover:bg-gray-100\\r transition-colors duration-200\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 border border-red-200 rounded-lg p-3 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-600 mr-2\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-800 text-sm\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4 sm:space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\",\n            children: \"Graph Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.name,\n            onChange: e => setFormData({\n              ...formData,\n              name: e.target.value\n            }),\n            required: true,\n            className: \"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \\r text-sm sm:text-base box-border\\r focus:ring-2 focus:ring-primary-300 focus:border-primary-500\\r hover:border-gray-400 transition-colors duration-200\",\n            placeholder: \"e.g., Campus Navigation Map\",\n            disabled: saving\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData({\n              ...formData,\n              description: e.target.value\n            }),\n            className: \"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \\r text-sm sm:text-base min-h-[60px] sm:min-h-[80px] resize-y box-border\\r focus:ring-2 focus:ring-primary-300 focus:border-primary-500\\r hover:border-gray-400 transition-colors duration-200\",\n            placeholder: \"Describe your graph and its purpose...\",\n            disabled: saving\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\",\n            children: \"Tags (comma-separated)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.tags,\n            onChange: e => setFormData({\n              ...formData,\n              tags: e.target.value\n            }),\n            className: \"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \\r text-sm sm:text-base box-border\\r focus:ring-2 focus:ring-primary-300 focus:border-primary-500\\r hover:border-gray-400 transition-colors duration-200\",\n            placeholder: \"e.g., dijkstra, navigation, campus\",\n            disabled: saving\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs sm:text-sm text-gray-500 mt-1\",\n            children: \"Help organize your graphs with relevant keywords\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 rounded-lg p-3 sm:p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-gray-700 mb-2 text-sm sm:text-base\",\n            children: \"Graph Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg sm:text-xl font-bold text-primary-600\",\n                children: nodes.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs sm:text-sm text-gray-500\",\n                children: \"Nodes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg sm:text-xl font-bold text-primary-600\",\n                children: edges.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs sm:text-sm text-gray-500\",\n                children: \"Edges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-2 sm:gap-4 justify-end pt-2 sm:pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: saving,\n            className: \"w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 \\r border border-gray-300 rounded-lg bg-white text-gray-700 \\r text-sm sm:text-base cursor-pointer hover:bg-gray-50\\r transition-colors duration-200 order-2 sm:order-1\\r disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: saving || !formData.name.trim(),\n            className: `w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 \n                         border-0 rounded-lg text-white text-sm sm:text-base\n                         transition-all duration-200 order-1 sm:order-2\n                         ${saving || !formData.name.trim() ? 'bg-gray-400 cursor-not-allowed' : 'bg-primary-600 cursor-pointer hover:bg-primary-700 transform hover:scale-105 active:scale-95'}`,\n            children: saving ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex items-center justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), \"Saving...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this) : 'Save Graph'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(SaveGraphModal, \"vkmm+7HddJgb7refOQsHslHnGZM=\");\n_c = SaveGraphModal;\nexport default SaveGraphModal;\n\n// import React, { useState } from 'react';\n\n// function SaveGraphModal({ nodes, edges, onSave, onClose }) {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     description: '',\n//     tags: ''\n//   });\n//   const [saving, setSaving] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!formData.name.trim()) {\n//       setError('Graph name is required');\n//       return;\n//     }\n\n//     setSaving(true);\n//     setError(null);\n\n//     try {\n//       // ✅ ADD AUTH TOKEN HERE\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         setError('Authentication required. Please login again.');\n//         setSaving(false);\n//         return;\n//       }\n\n//       const graphData = {\n//         name: formData.name.trim(),\n//         description: formData.description.trim(),\n//         nodes: nodes.map((_, index) => ({ id: index })),\n//         edges: edges,\n//         tags: formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\n//         isPublic: false // Add privacy control\n//       };\n\n//       const response = await fetch('http://localhost:5000/api/graphs/save_graph', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}` // ✅ AUTH TOKEN REQUIRED\n//         },\n//         body: JSON.stringify(graphData),\n//       });\n\n//       if (!response.ok) {\n//         if (response.status === 401) {\n//           localStorage.removeItem('token');\n//           setError('Session expired. Please login again.');\n//           return;\n//         }\n//         throw new Error(`Failed to save graph: ${response.status}`);\n//       }\n\n//       const result = await response.json();\n\n//       if (result.success) {\n//         onSave(result.data);\n//         onClose();\n//       } else {\n//         setError(result.error || 'Failed to save graph');\n//       }\n//     } catch (error) {\n//       console.error('Error saving graph:', error);\n//       setError('Failed to save graph. Please try again.');\n//     } finally {\n//       setSaving(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1000] p-2 sm:p-4\">\n//       <div className=\"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \n//                       w-full sm:w-[90%] md:w-[80%] lg:w-[70%] xl:w-[60%] max-w-2xl\n//                       max-h-[95vh] sm:max-h-[90vh] md:max-h-[85vh] lg:max-h-[80vh] \n//                       overflow-y-auto shadow-modal\">\n\n//         <div className=\"flex justify-between items-center mb-4 sm:mb-6\">\n//           <h2 className=\"text-primary-600 text-xl sm:text-2xl font-bold m-0\">\n//             Save Graph\n//           </h2>\n//           <button\n//             onClick={onClose}\n//             className=\"bg-transparent border-0 text-xl sm:text-2xl cursor-pointer \n//                        text-gray-600 hover:text-gray-800 p-1 rounded-full hover:bg-gray-100\n//                        transition-colors duration-200\"\n//           >\n//             ×\n//           </button>\n//         </div>\n\n//         {/* ✅ ADDED: Error message display */}\n//         {error && (\n//           <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 mb-4\">\n//             <div className=\"flex items-center\">\n//               <span className=\"text-red-600 mr-2\">⚠️</span>\n//               <p className=\"text-red-800 text-sm\">{error}</p>\n//             </div>\n//           </div>\n//         )}\n\n//         <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-6\">\n//           {/* Graph Name */}\n//           <div>\n//             <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\n//               Graph Name *\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={formData.name}\n//               onChange={(e) => setFormData({...formData, name: e.target.value})}\n//               required\n//               className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \n//                          text-sm sm:text-base box-border\n//                          focus:ring-2 focus:ring-primary-300 focus:border-primary-500\n//                          hover:border-gray-400 transition-colors duration-200\"\n//               placeholder=\"e.g., Campus Navigation Map\"\n//               disabled={saving}\n//             />\n//           </div>\n\n//           {/* Description */}\n//           <div>\n//             <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\n//               Description\n//             </label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData({...formData, description: e.target.value})}\n//               className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \n//                          text-sm sm:text-base min-h-[60px] sm:min-h-[80px] resize-y box-border\n//                          focus:ring-2 focus:ring-primary-300 focus:border-primary-500\n//                          hover:border-gray-400 transition-colors duration-200\"\n//               placeholder=\"Describe your graph and its purpose...\"\n//               disabled={saving}\n//             />\n//           </div>\n\n//           {/* ✅ REMOVED: Creator Name field - now uses authenticated user */}\n//           {/* The backend will automatically use req.user from the JWT token */}\n\n//           {/* Tags */}\n//           <div>\n//             <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\n//               Tags (comma-separated)\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={formData.tags}\n//               onChange={(e) => setFormData({...formData, tags: e.target.value})}\n//               className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \n//                          text-sm sm:text-base box-border\n//                          focus:ring-2 focus:ring-primary-300 focus:border-primary-500\n//                          hover:border-gray-400 transition-colors duration-200\"\n//               placeholder=\"e.g., dijkstra, navigation, campus\"\n//               disabled={saving}\n//             />\n//             <p className=\"text-xs sm:text-sm text-gray-500 mt-1\">\n//               Help organize your graphs with relevant keywords\n//             </p>\n//           </div>\n\n//           {/* ✅ ADDED: Graph Statistics */}\n//           <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4\">\n//             <h3 className=\"font-semibold text-gray-700 mb-2 text-sm sm:text-base\">Graph Summary</h3>\n//             <div className=\"grid grid-cols-2 gap-4 text-center\">\n//               <div>\n//                 <div className=\"text-lg sm:text-xl font-bold text-primary-600\">{nodes.length}</div>\n//                 <div className=\"text-xs sm:text-sm text-gray-500\">Nodes</div>\n//               </div>\n//               <div>\n//                 <div className=\"text-lg sm:text-xl font-bold text-primary-600\">{edges.length}</div>\n//                 <div className=\"text-xs sm:text-sm text-gray-500\">Edges</div>\n//               </div>\n//             </div>\n//           </div>\n\n//           {/* Buttons */}\n//           <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-4 justify-end pt-2 sm:pt-4\">\n//             <button\n//               type=\"button\"\n//               onClick={onClose}\n//               disabled={saving}\n//               className=\"w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 \n//                          border border-gray-300 rounded-lg bg-white text-gray-700 \n//                          text-sm sm:text-base cursor-pointer hover:bg-gray-50\n//                          transition-colors duration-200 order-2 sm:order-1\n//                          disabled:opacity-50 disabled:cursor-not-allowed\"\n//             >\n//               Cancel\n//             </button>\n//             <button\n//               type=\"submit\"\n//               disabled={saving || !formData.name.trim()}\n//               className={`w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 \n//                          border-0 rounded-lg text-white text-sm sm:text-base\n//                          transition-all duration-200 order-1 sm:order-2\n//                          ${\n//                            saving || !formData.name.trim()\n//                              ? 'bg-gray-400 cursor-not-allowed' \n//                              : 'bg-primary-600 cursor-pointer hover:bg-primary-700 transform hover:scale-105 active:scale-95'\n//                          }`}\n//             >\n//               {saving ? (\n//                 <span className=\"flex items-center justify-center\">\n//                   <span className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></span>\n//                   Saving...\n//                 </span>\n//               ) : (\n//                 'Save Graph'\n//               )}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default SaveGraphModal;\n\n// import React, { useState } from 'react';\n\n// function SaveGraphModal({ nodes, edges, onSave, onClose }) {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     description: '',\n//     createdBy: 'Lalit Kumar Yadav',\n//     tags: ''\n//   });\n//   const [saving, setSaving] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setSaving(true);\n\n//     try {\n//       const graphData = {\n//         name: formData.name,\n//         description: formData.description,\n//         nodes: nodes.map((_, index) => ({ id: index })),\n//         edges: edges,\n//         createdBy: formData.createdBy,\n//         tags: formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag)\n//       };\n\n//       const response = await fetch('http://localhost:5000/api/db/graphs', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(graphData),\n//       });\n\n//       const result = await response.json();\n\n//       if (result.success) {\n//         onSave(result.data);\n//         onClose();\n//       } else {\n//         alert('Failed to save graph: ' + result.error);\n//       }\n//     } catch (error) {\n//       console.error('Error saving graph:', error);\n//       alert('Failed to save graph. Please try again.');\n//     } finally {\n//       setSaving(false);\n//     }\n//   };\n\n//   return (\n//     <div style={{\n//       position: 'fixed',\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       bottom: 0,\n//       backgroundColor: 'rgba(0,0,0,0.5)',\n//       display: 'flex',\n//       justifyContent: 'center',\n//       alignItems: 'center',\n//       zIndex: 1000\n//     }}>\n//       <div style={{\n//         backgroundColor: 'white',\n//         borderRadius: '16px',\n//         padding: '2rem',\n//         maxWidth: '500px',\n//         width: '90%',\n//         maxHeight: '80vh',\n//         overflowY: 'auto',\n//         boxShadow: '0 20px 40px rgba(0,0,0,0.3)'\n//       }}>\n//         <div style={{\n//           display: 'flex',\n//           justifyContent: 'space-between',\n//           alignItems: 'center',\n//           marginBottom: '1.5rem'\n//         }}>\n//           <h2 style={{ color: '#2563eb', margin: 0 }}>Save Graph</h2>\n//           <button\n//             onClick={onClose}\n//             style={{\n//               background: 'none',\n//               border: 'none',\n//               fontSize: '1.5rem',\n//               cursor: 'pointer',\n//               color: '#666'\n//             }}\n//           >\n//             ×\n//           </button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: '1rem' }}>\n//             <label style={{\n//               display: 'block',\n//               marginBottom: '0.5rem',\n//               fontWeight: 'bold',\n//               color: '#374151'\n//             }}>\n//               Graph Name *\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={formData.name}\n//               onChange={(e) => setFormData({...formData, name: e.target.value})}\n//               required\n//               style={{\n//                 width: '100%',\n//                 padding: '0.75rem',\n//                 border: '1px solid #d1d5db',\n//                 borderRadius: '8px',\n//                 fontSize: '1rem',\n//                 boxSizing: 'border-box'\n//               }}\n//               placeholder=\"e.g., Campus Navigation Map\"\n//             />\n//           </div>\n\n//           <div style={{ marginBottom: '1rem' }}>\n//             <label style={{\n//               display: 'block',\n//               marginBottom: '0.5rem',\n//               fontWeight: 'bold',\n//               color: '#374151'\n//             }}>\n//               Description\n//             </label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData({...formData, description: e.target.value})}\n//               style={{\n//                 width: '100%',\n//                 padding: '0.75rem',\n//                 border: '1px solid #d1d5db',\n//                 borderRadius: '8px',\n//                 fontSize: '1rem',\n//                 minHeight: '80px',\n//                 resize: 'vertical',\n//                 boxSizing: 'border-box'\n//               }}\n//               placeholder=\"Describe your graph and its purpose...\"\n//             />\n//           </div>\n\n//           <div style={{ marginBottom: '1rem' }}>\n//             <label style={{\n//               display: 'block',\n//               marginBottom: '0.5rem',\n//               fontWeight: 'bold',\n//               color: '#374151'\n//             }}>\n//               Creator Name\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={formData.createdBy}\n//               onChange={(e) => setFormData({...formData, createdBy: e.target.value})}\n//               style={{\n//                 width: '100%',\n//                 padding: '0.75rem',\n//                 border: '1px solid #d1d5db',\n//                 borderRadius: '8px',\n//                 fontSize: '1rem',\n//                 boxSizing: 'border-box'\n//               }}\n//             />\n//           </div>\n\n//           <div style={{ marginBottom: '1.5rem' }}>\n//             <label style={{\n//               display: 'block',\n//               marginBottom: '0.5rem',\n//               fontWeight: 'bold',\n//               color: '#374151'\n//             }}>\n//               Tags (comma-separated)\n//             </label>\n//             <input\n//               type=\"text\"\n//               value={formData.tags}\n//               onChange={(e) => setFormData({...formData, tags: e.target.value})}\n//               style={{\n//                 width: '100%',\n//                 padding: '0.75rem',\n//                 border: '1px solid #d1d5db',\n//                 borderRadius: '8px',\n//                 fontSize: '1rem',\n//                 boxSizing: 'border-box'\n//               }}\n//               placeholder=\"e.g., dijkstra, navigation, campus\"\n//             />\n//           </div>\n\n//           <div style={{\n//             display: 'flex',\n//             gap: '1rem',\n//             justifyContent: 'flex-end'\n//           }}>\n//             <button\n//               type=\"button\"\n//               onClick={onClose}\n//               style={{\n//                 padding: '0.75rem 1.5rem',\n//                 border: '1px solid #d1d5db',\n//                 borderRadius: '8px',\n//                 backgroundColor: 'white',\n//                 color: '#374151',\n//                 fontSize: '1rem',\n//                 cursor: 'pointer'\n//               }}\n//             >\n//               Cancel\n//             </button>\n//             <button\n//               type=\"submit\"\n//               disabled={saving || !formData.name}\n//               style={{\n//                 padding: '0.75rem 1.5rem',\n//                 border: 'none',\n//                 borderRadius: '8px',\n//                 backgroundColor: saving ? '#9ca3af' : '#2563eb',\n//                 color: 'white',\n//                 fontSize: '1rem',\n//                 cursor: saving ? 'not-allowed' : 'pointer'\n//               }}\n//             >\n//               {saving ? 'Saving...' : 'Save Graph'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default SaveGraphModal;\nvar _c;\n$RefreshReg$(_c, \"SaveGraphModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SaveGraphModal","nodes","edges","onSave","onClose","_s","formData","setFormData","name","description","tags","saving","setSaving","error","setError","API_BASE_URL","process","env","REACT_APP_API_URL","handleSubmit","e","preventDefault","trim","token","localStorage","getItem","graphData","map","_","index","id","split","tag","filter","isPublic","response","fetch","method","headers","body","JSON","stringify","ok","status","removeItem","Error","result","json","success","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","required","placeholder","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/Rajat/Desktop/Graph_Visualizer/frontend/src/components/SaveGraphModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction SaveGraphModal({ nodes, edges, onSave, onClose }) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    tags: ''\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // ✅ FIXED: Use environment variable instead of hardcoded localhost\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.name.trim()) {\r\n      setError('Graph name is required');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // ✅ ADD AUTH TOKEN HERE\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        setError('Authentication required. Please login again.');\r\n        setSaving(false);\r\n        return;\r\n      }\r\n\r\n      const graphData = {\r\n        name: formData.name.trim(),\r\n        description: formData.description.trim(),\r\n        nodes: nodes.map((_, index) => ({ id: index })),\r\n        edges: edges,\r\n        tags: formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\r\n        isPublic: false // Add privacy control\r\n      };\r\n\r\n      // 🔧 FIXED: Use environment variable instead of hardcoded localhost\r\n      const response = await fetch(`${API_BASE_URL}/api/graphs/save_graph`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}` // ✅ AUTH TOKEN REQUIRED\r\n        },\r\n        body: JSON.stringify(graphData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          localStorage.removeItem('token');\r\n          setError('Session expired. Please login again.');\r\n          return;\r\n        }\r\n        throw new Error(`Failed to save graph: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        onSave(result.data);\r\n        onClose();\r\n      } else {\r\n        setError(result.error || 'Failed to save graph');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving graph:', error);\r\n      setError('Failed to save graph. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1000] p-2 sm:p-4\">\r\n      <div className=\"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \r\n                      w-full sm:w-[90%] md:w-[80%] lg:w-[70%] xl:w-[60%] max-w-2xl\r\n                      max-h-[95vh] sm:max-h-[90vh] md:max-h-[85vh] lg:max-h-[80vh] \r\n                      overflow-y-auto shadow-modal\">\r\n        \r\n        <div className=\"flex justify-between items-center mb-4 sm:mb-6\">\r\n          <h2 className=\"text-primary-600 text-xl sm:text-2xl font-bold m-0\">\r\n            Save Graph\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"bg-transparent border-0 text-xl sm:text-2xl cursor-pointer \r\n                       text-gray-600 hover:text-gray-800 p-1 rounded-full hover:bg-gray-100\r\n                       transition-colors duration-200\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {/* ✅ ADDED: Error message display */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 mb-4\">\r\n            <div className=\"flex items-center\">\r\n              <span className=\"text-red-600 mr-2\">⚠️</span>\r\n              <p className=\"text-red-800 text-sm\">{error}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-6\">\r\n          {/* Graph Name */}\r\n          <div>\r\n            <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\r\n              Graph Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n              required\r\n              className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \r\n                         text-sm sm:text-base box-border\r\n                         focus:ring-2 focus:ring-primary-300 focus:border-primary-500\r\n                         hover:border-gray-400 transition-colors duration-200\"\r\n              placeholder=\"e.g., Campus Navigation Map\"\r\n              disabled={saving}\r\n            />\r\n          </div>\r\n\r\n          {/* Description */}\r\n          <div>\r\n            <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n              className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \r\n                         text-sm sm:text-base min-h-[60px] sm:min-h-[80px] resize-y box-border\r\n                         focus:ring-2 focus:ring-primary-300 focus:border-primary-500\r\n                         hover:border-gray-400 transition-colors duration-200\"\r\n              placeholder=\"Describe your graph and its purpose...\"\r\n              disabled={saving}\r\n            />\r\n          </div>\r\n\r\n          {/* ✅ REMOVED: Creator Name field - now uses authenticated user */}\r\n          {/* The backend will automatically use req.user from the JWT token */}\r\n\r\n          {/* Tags */}\r\n          <div>\r\n            <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\r\n              Tags (comma-separated)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.tags}\r\n              onChange={(e) => setFormData({...formData, tags: e.target.value})}\r\n              className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \r\n                         text-sm sm:text-base box-border\r\n                         focus:ring-2 focus:ring-primary-300 focus:border-primary-500\r\n                         hover:border-gray-400 transition-colors duration-200\"\r\n              placeholder=\"e.g., dijkstra, navigation, campus\"\r\n              disabled={saving}\r\n            />\r\n            <p className=\"text-xs sm:text-sm text-gray-500 mt-1\">\r\n              Help organize your graphs with relevant keywords\r\n            </p>\r\n          </div>\r\n\r\n          {/* ✅ ADDED: Graph Statistics */}\r\n          <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4\">\r\n            <h3 className=\"font-semibold text-gray-700 mb-2 text-sm sm:text-base\">Graph Summary</h3>\r\n            <div className=\"grid grid-cols-2 gap-4 text-center\">\r\n              <div>\r\n                <div className=\"text-lg sm:text-xl font-bold text-primary-600\">{nodes.length}</div>\r\n                <div className=\"text-xs sm:text-sm text-gray-500\">Nodes</div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-lg sm:text-xl font-bold text-primary-600\">{edges.length}</div>\r\n                <div className=\"text-xs sm:text-sm text-gray-500\">Edges</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Buttons */}\r\n          <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-4 justify-end pt-2 sm:pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              disabled={saving}\r\n              className=\"w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 \r\n                         border border-gray-300 rounded-lg bg-white text-gray-700 \r\n                         text-sm sm:text-base cursor-pointer hover:bg-gray-50\r\n                         transition-colors duration-200 order-2 sm:order-1\r\n                         disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={saving || !formData.name.trim()}\r\n              className={`w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 \r\n                         border-0 rounded-lg text-white text-sm sm:text-base\r\n                         transition-all duration-200 order-1 sm:order-2\r\n                         ${\r\n                           saving || !formData.name.trim()\r\n                             ? 'bg-gray-400 cursor-not-allowed' \r\n                             : 'bg-primary-600 cursor-pointer hover:bg-primary-700 transform hover:scale-105 active:scale-95'\r\n                         }`}\r\n            >\r\n              {saving ? (\r\n                <span className=\"flex items-center justify-center\">\r\n                  <span className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></span>\r\n                  Saving...\r\n                </span>\r\n              ) : (\r\n                'Save Graph'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SaveGraphModal;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// function SaveGraphModal({ nodes, edges, onSave, onClose }) {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     description: '',\r\n//     tags: ''\r\n//   });\r\n//   const [saving, setSaving] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     if (!formData.name.trim()) {\r\n//       setError('Graph name is required');\r\n//       return;\r\n//     }\r\n\r\n//     setSaving(true);\r\n//     setError(null);\r\n\r\n//     try {\r\n//       // ✅ ADD AUTH TOKEN HERE\r\n//       const token = localStorage.getItem('token');\r\n      \r\n//       if (!token) {\r\n//         setError('Authentication required. Please login again.');\r\n//         setSaving(false);\r\n//         return;\r\n//       }\r\n\r\n//       const graphData = {\r\n//         name: formData.name.trim(),\r\n//         description: formData.description.trim(),\r\n//         nodes: nodes.map((_, index) => ({ id: index })),\r\n//         edges: edges,\r\n//         tags: formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\r\n//         isPublic: false // Add privacy control\r\n//       };\r\n\r\n//       const response = await fetch('http://localhost:5000/api/graphs/save_graph', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           'Authorization': `Bearer ${token}` // ✅ AUTH TOKEN REQUIRED\r\n//         },\r\n//         body: JSON.stringify(graphData),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         if (response.status === 401) {\r\n//           localStorage.removeItem('token');\r\n//           setError('Session expired. Please login again.');\r\n//           return;\r\n//         }\r\n//         throw new Error(`Failed to save graph: ${response.status}`);\r\n//       }\r\n\r\n//       const result = await response.json();\r\n      \r\n//       if (result.success) {\r\n//         onSave(result.data);\r\n//         onClose();\r\n//       } else {\r\n//         setError(result.error || 'Failed to save graph');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving graph:', error);\r\n//       setError('Failed to save graph. Please try again.');\r\n//     } finally {\r\n//       setSaving(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1000] p-2 sm:p-4\">\r\n//       <div className=\"bg-white rounded-xl sm:rounded-2xl p-4 sm:p-6 lg:p-8 \r\n//                       w-full sm:w-[90%] md:w-[80%] lg:w-[70%] xl:w-[60%] max-w-2xl\r\n//                       max-h-[95vh] sm:max-h-[90vh] md:max-h-[85vh] lg:max-h-[80vh] \r\n//                       overflow-y-auto shadow-modal\">\r\n        \r\n//         <div className=\"flex justify-between items-center mb-4 sm:mb-6\">\r\n//           <h2 className=\"text-primary-600 text-xl sm:text-2xl font-bold m-0\">\r\n//             Save Graph\r\n//           </h2>\r\n//           <button\r\n//             onClick={onClose}\r\n//             className=\"bg-transparent border-0 text-xl sm:text-2xl cursor-pointer \r\n//                        text-gray-600 hover:text-gray-800 p-1 rounded-full hover:bg-gray-100\r\n//                        transition-colors duration-200\"\r\n//           >\r\n//             ×\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* ✅ ADDED: Error message display */}\r\n//         {error && (\r\n//           <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 mb-4\">\r\n//             <div className=\"flex items-center\">\r\n//               <span className=\"text-red-600 mr-2\">⚠️</span>\r\n//               <p className=\"text-red-800 text-sm\">{error}</p>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//         <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-6\">\r\n//           {/* Graph Name */}\r\n//           <div>\r\n//             <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\r\n//               Graph Name *\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={formData.name}\r\n//               onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n//               required\r\n//               className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \r\n//                          text-sm sm:text-base box-border\r\n//                          focus:ring-2 focus:ring-primary-300 focus:border-primary-500\r\n//                          hover:border-gray-400 transition-colors duration-200\"\r\n//               placeholder=\"e.g., Campus Navigation Map\"\r\n//               disabled={saving}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* Description */}\r\n//           <div>\r\n//             <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\r\n//               Description\r\n//             </label>\r\n//             <textarea\r\n//               value={formData.description}\r\n//               onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n//               className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \r\n//                          text-sm sm:text-base min-h-[60px] sm:min-h-[80px] resize-y box-border\r\n//                          focus:ring-2 focus:ring-primary-300 focus:border-primary-500\r\n//                          hover:border-gray-400 transition-colors duration-200\"\r\n//               placeholder=\"Describe your graph and its purpose...\"\r\n//               disabled={saving}\r\n//             />\r\n//           </div>\r\n\r\n//           {/* ✅ REMOVED: Creator Name field - now uses authenticated user */}\r\n//           {/* The backend will automatically use req.user from the JWT token */}\r\n\r\n//           {/* Tags */}\r\n//           <div>\r\n//             <label className=\"block mb-1 sm:mb-2 font-bold text-gray-700 text-sm sm:text-base\">\r\n//               Tags (comma-separated)\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={formData.tags}\r\n//               onChange={(e) => setFormData({...formData, tags: e.target.value})}\r\n//               className=\"w-full p-2 sm:p-3 border border-gray-300 rounded-lg \r\n//                          text-sm sm:text-base box-border\r\n//                          focus:ring-2 focus:ring-primary-300 focus:border-primary-500\r\n//                          hover:border-gray-400 transition-colors duration-200\"\r\n//               placeholder=\"e.g., dijkstra, navigation, campus\"\r\n//               disabled={saving}\r\n//             />\r\n//             <p className=\"text-xs sm:text-sm text-gray-500 mt-1\">\r\n//               Help organize your graphs with relevant keywords\r\n//             </p>\r\n//           </div>\r\n\r\n//           {/* ✅ ADDED: Graph Statistics */}\r\n//           <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4\">\r\n//             <h3 className=\"font-semibold text-gray-700 mb-2 text-sm sm:text-base\">Graph Summary</h3>\r\n//             <div className=\"grid grid-cols-2 gap-4 text-center\">\r\n//               <div>\r\n//                 <div className=\"text-lg sm:text-xl font-bold text-primary-600\">{nodes.length}</div>\r\n//                 <div className=\"text-xs sm:text-sm text-gray-500\">Nodes</div>\r\n//               </div>\r\n//               <div>\r\n//                 <div className=\"text-lg sm:text-xl font-bold text-primary-600\">{edges.length}</div>\r\n//                 <div className=\"text-xs sm:text-sm text-gray-500\">Edges</div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Buttons */}\r\n//           <div className=\"flex flex-col sm:flex-row gap-2 sm:gap-4 justify-end pt-2 sm:pt-4\">\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={onClose}\r\n//               disabled={saving}\r\n//               className=\"w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 \r\n//                          border border-gray-300 rounded-lg bg-white text-gray-700 \r\n//                          text-sm sm:text-base cursor-pointer hover:bg-gray-50\r\n//                          transition-colors duration-200 order-2 sm:order-1\r\n//                          disabled:opacity-50 disabled:cursor-not-allowed\"\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//             <button\r\n//               type=\"submit\"\r\n//               disabled={saving || !formData.name.trim()}\r\n//               className={`w-full sm:w-auto px-4 sm:px-6 py-2 sm:py-3 \r\n//                          border-0 rounded-lg text-white text-sm sm:text-base\r\n//                          transition-all duration-200 order-1 sm:order-2\r\n//                          ${\r\n//                            saving || !formData.name.trim()\r\n//                              ? 'bg-gray-400 cursor-not-allowed' \r\n//                              : 'bg-primary-600 cursor-pointer hover:bg-primary-700 transform hover:scale-105 active:scale-95'\r\n//                          }`}\r\n//             >\r\n//               {saving ? (\r\n//                 <span className=\"flex items-center justify-center\">\r\n//                   <span className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></span>\r\n//                   Saving...\r\n//                 </span>\r\n//               ) : (\r\n//                 'Save Graph'\r\n//               )}\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SaveGraphModal;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n// function SaveGraphModal({ nodes, edges, onSave, onClose }) {\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     description: '',\r\n//     createdBy: 'Lalit Kumar Yadav',\r\n//     tags: ''\r\n//   });\r\n//   const [saving, setSaving] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setSaving(true);\r\n\r\n//     try {\r\n//       const graphData = {\r\n//         name: formData.name,\r\n//         description: formData.description,\r\n//         nodes: nodes.map((_, index) => ({ id: index })),\r\n//         edges: edges,\r\n//         createdBy: formData.createdBy,\r\n//         tags: formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag)\r\n//       };\r\n\r\n//       const response = await fetch('http://localhost:5000/api/db/graphs', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(graphData),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n      \r\n//       if (result.success) {\r\n//         onSave(result.data);\r\n//         onClose();\r\n//       } else {\r\n//         alert('Failed to save graph: ' + result.error);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving graph:', error);\r\n//       alert('Failed to save graph. Please try again.');\r\n//     } finally {\r\n//       setSaving(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{\r\n//       position: 'fixed',\r\n//       top: 0,\r\n//       left: 0,\r\n//       right: 0,\r\n//       bottom: 0,\r\n//       backgroundColor: 'rgba(0,0,0,0.5)',\r\n//       display: 'flex',\r\n//       justifyContent: 'center',\r\n//       alignItems: 'center',\r\n//       zIndex: 1000\r\n//     }}>\r\n//       <div style={{\r\n//         backgroundColor: 'white',\r\n//         borderRadius: '16px',\r\n//         padding: '2rem',\r\n//         maxWidth: '500px',\r\n//         width: '90%',\r\n//         maxHeight: '80vh',\r\n//         overflowY: 'auto',\r\n//         boxShadow: '0 20px 40px rgba(0,0,0,0.3)'\r\n//       }}>\r\n//         <div style={{\r\n//           display: 'flex',\r\n//           justifyContent: 'space-between',\r\n//           alignItems: 'center',\r\n//           marginBottom: '1.5rem'\r\n//         }}>\r\n//           <h2 style={{ color: '#2563eb', margin: 0 }}>Save Graph</h2>\r\n//           <button\r\n//             onClick={onClose}\r\n//             style={{\r\n//               background: 'none',\r\n//               border: 'none',\r\n//               fontSize: '1.5rem',\r\n//               cursor: 'pointer',\r\n//               color: '#666'\r\n//             }}\r\n//           >\r\n//             ×\r\n//           </button>\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: '1rem' }}>\r\n//             <label style={{\r\n//               display: 'block',\r\n//               marginBottom: '0.5rem',\r\n//               fontWeight: 'bold',\r\n//               color: '#374151'\r\n//             }}>\r\n//               Graph Name *\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={formData.name}\r\n//               onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n//               required\r\n//               style={{\r\n//                 width: '100%',\r\n//                 padding: '0.75rem',\r\n//                 border: '1px solid #d1d5db',\r\n//                 borderRadius: '8px',\r\n//                 fontSize: '1rem',\r\n//                 boxSizing: 'border-box'\r\n//               }}\r\n//               placeholder=\"e.g., Campus Navigation Map\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={{ marginBottom: '1rem' }}>\r\n//             <label style={{\r\n//               display: 'block',\r\n//               marginBottom: '0.5rem',\r\n//               fontWeight: 'bold',\r\n//               color: '#374151'\r\n//             }}>\r\n//               Description\r\n//             </label>\r\n//             <textarea\r\n//               value={formData.description}\r\n//               onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n//               style={{\r\n//                 width: '100%',\r\n//                 padding: '0.75rem',\r\n//                 border: '1px solid #d1d5db',\r\n//                 borderRadius: '8px',\r\n//                 fontSize: '1rem',\r\n//                 minHeight: '80px',\r\n//                 resize: 'vertical',\r\n//                 boxSizing: 'border-box'\r\n//               }}\r\n//               placeholder=\"Describe your graph and its purpose...\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={{ marginBottom: '1rem' }}>\r\n//             <label style={{\r\n//               display: 'block',\r\n//               marginBottom: '0.5rem',\r\n//               fontWeight: 'bold',\r\n//               color: '#374151'\r\n//             }}>\r\n//               Creator Name\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={formData.createdBy}\r\n//               onChange={(e) => setFormData({...formData, createdBy: e.target.value})}\r\n//               style={{\r\n//                 width: '100%',\r\n//                 padding: '0.75rem',\r\n//                 border: '1px solid #d1d5db',\r\n//                 borderRadius: '8px',\r\n//                 fontSize: '1rem',\r\n//                 boxSizing: 'border-box'\r\n//               }}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={{ marginBottom: '1.5rem' }}>\r\n//             <label style={{\r\n//               display: 'block',\r\n//               marginBottom: '0.5rem',\r\n//               fontWeight: 'bold',\r\n//               color: '#374151'\r\n//             }}>\r\n//               Tags (comma-separated)\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               value={formData.tags}\r\n//               onChange={(e) => setFormData({...formData, tags: e.target.value})}\r\n//               style={{\r\n//                 width: '100%',\r\n//                 padding: '0.75rem',\r\n//                 border: '1px solid #d1d5db',\r\n//                 borderRadius: '8px',\r\n//                 fontSize: '1rem',\r\n//                 boxSizing: 'border-box'\r\n//               }}\r\n//               placeholder=\"e.g., dijkstra, navigation, campus\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={{\r\n//             display: 'flex',\r\n//             gap: '1rem',\r\n//             justifyContent: 'flex-end'\r\n//           }}>\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={onClose}\r\n//               style={{\r\n//                 padding: '0.75rem 1.5rem',\r\n//                 border: '1px solid #d1d5db',\r\n//                 borderRadius: '8px',\r\n//                 backgroundColor: 'white',\r\n//                 color: '#374151',\r\n//                 fontSize: '1rem',\r\n//                 cursor: 'pointer'\r\n//               }}\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//             <button\r\n//               type=\"submit\"\r\n//               disabled={saving || !formData.name}\r\n//               style={{\r\n//                 padding: '0.75rem 1.5rem',\r\n//                 border: 'none',\r\n//                 borderRadius: '8px',\r\n//                 backgroundColor: saving ? '#9ca3af' : '#2563eb',\r\n//                 color: 'white',\r\n//                 fontSize: '1rem',\r\n//                 cursor: saving ? 'not-allowed' : 'pointer'\r\n//               }}\r\n//             >\r\n//               {saving ? 'Saving...' : 'Save Graph'}\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SaveGraphModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMkB,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EAE7E,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACf,QAAQ,CAACE,IAAI,CAACc,IAAI,CAAC,CAAC,EAAE;MACzBR,QAAQ,CAAC,wBAAwB,CAAC;MAClC;IACF;IAEAF,SAAS,CAAC,IAAI,CAAC;IACfE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACVT,QAAQ,CAAC,8CAA8C,CAAC;QACxDF,SAAS,CAAC,KAAK,CAAC;QAChB;MACF;MAEA,MAAMc,SAAS,GAAG;QAChBlB,IAAI,EAAEF,QAAQ,CAACE,IAAI,CAACc,IAAI,CAAC,CAAC;QAC1Bb,WAAW,EAAEH,QAAQ,CAACG,WAAW,CAACa,IAAI,CAAC,CAAC;QACxCrB,KAAK,EAAEA,KAAK,CAAC0B,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,MAAM;UAAEC,EAAE,EAAED;QAAM,CAAC,CAAC,CAAC;QAC/C3B,KAAK,EAAEA,KAAK;QACZQ,IAAI,EAAEJ,QAAQ,CAACI,IAAI,CAACqB,KAAK,CAAC,GAAG,CAAC,CAACJ,GAAG,CAACK,GAAG,IAAIA,GAAG,CAACV,IAAI,CAAC,CAAC,CAAC,CAACW,MAAM,CAACD,GAAG,IAAIA,GAAG,CAAC;QACxEE,QAAQ,EAAE,KAAK,CAAC;MAClB,CAAC;;MAED;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGrB,YAAY,wBAAwB,EAAE;QACpEsB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUf,KAAK,EAAE,CAAC;QACrC,CAAC;QACDgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,SAAS;MAChC,CAAC,CAAC;MAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;QAChB,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;UAC3BnB,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;UAChC9B,QAAQ,CAAC,sCAAsC,CAAC;UAChD;QACF;QACA,MAAM,IAAI+B,KAAK,CAAC,yBAAyBV,QAAQ,CAACQ,MAAM,EAAE,CAAC;MAC7D;MAEA,MAAMG,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAEpC,IAAID,MAAM,CAACE,OAAO,EAAE;QAClB7C,MAAM,CAAC2C,MAAM,CAACG,IAAI,CAAC;QACnB7C,OAAO,CAAC,CAAC;MACX,CAAC,MAAM;QACLU,QAAQ,CAACgC,MAAM,CAACjC,KAAK,IAAI,sBAAsB,CAAC;MAClD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdqC,OAAO,CAACrC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,yCAAyC,CAAC;IACrD,CAAC,SAAS;MACRF,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,oBACEb,OAAA;IAAKoD,SAAS,EAAC,2FAA2F;IAAAC,QAAA,eACxGrD,OAAA;MAAKoD,SAAS,EAAC,qNAG8B;MAAAC,QAAA,gBAE3CrD,OAAA;QAAKoD,SAAS,EAAC,gDAAgD;QAAAC,QAAA,gBAC7DrD,OAAA;UAAIoD,SAAS,EAAC,oDAAoD;UAAAC,QAAA,EAAC;QAEnE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLzD,OAAA;UACE0D,OAAO,EAAErD,OAAQ;UACjB+C,SAAS,EAAC,qKAEgC;UAAAC,QAAA,EAC3C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGL3C,KAAK,iBACJd,OAAA;QAAKoD,SAAS,EAAC,qDAAqD;QAAAC,QAAA,eAClErD,OAAA;UAAKoD,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCrD,OAAA;YAAMoD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7CzD,OAAA;YAAGoD,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAEvC;UAAK;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAEDzD,OAAA;QAAM2D,QAAQ,EAAEvC,YAAa;QAACgC,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBAE9DrD,OAAA;UAAAqD,QAAA,gBACErD,OAAA;YAAOoD,SAAS,EAAC,iEAAiE;YAAAC,QAAA,EAAC;UAEnF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRzD,OAAA;YACE4D,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEtD,QAAQ,CAACE,IAAK;YACrBqD,QAAQ,EAAGzC,CAAC,IAAKb,WAAW,CAAC;cAAC,GAAGD,QAAQ;cAAEE,IAAI,EAAEY,CAAC,CAAC0C,MAAM,CAACF;YAAK,CAAC,CAAE;YAClEG,QAAQ;YACRZ,SAAS,EAAC,8MAGsD;YAChEa,WAAW,EAAC,6BAA6B;YACzCC,QAAQ,EAAEtD;UAAO;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAGNzD,OAAA;UAAAqD,QAAA,gBACErD,OAAA;YAAOoD,SAAS,EAAC,iEAAiE;YAAAC,QAAA,EAAC;UAEnF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRzD,OAAA;YACE6D,KAAK,EAAEtD,QAAQ,CAACG,WAAY;YAC5BoD,QAAQ,EAAGzC,CAAC,IAAKb,WAAW,CAAC;cAAC,GAAGD,QAAQ;cAAEG,WAAW,EAAEW,CAAC,CAAC0C,MAAM,CAACF;YAAK,CAAC,CAAE;YACzET,SAAS,EAAC,oPAGsD;YAChEa,WAAW,EAAC,wCAAwC;YACpDC,QAAQ,EAAEtD;UAAO;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAMNzD,OAAA;UAAAqD,QAAA,gBACErD,OAAA;YAAOoD,SAAS,EAAC,iEAAiE;YAAAC,QAAA,EAAC;UAEnF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRzD,OAAA;YACE4D,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEtD,QAAQ,CAACI,IAAK;YACrBmD,QAAQ,EAAGzC,CAAC,IAAKb,WAAW,CAAC;cAAC,GAAGD,QAAQ;cAAEI,IAAI,EAAEU,CAAC,CAAC0C,MAAM,CAACF;YAAK,CAAC,CAAE;YAClET,SAAS,EAAC,8MAGsD;YAChEa,WAAW,EAAC,oCAAoC;YAChDC,QAAQ,EAAEtD;UAAO;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACFzD,OAAA;YAAGoD,SAAS,EAAC,uCAAuC;YAAAC,QAAA,EAAC;UAErD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAGNzD,OAAA;UAAKoD,SAAS,EAAC,kCAAkC;UAAAC,QAAA,gBAC/CrD,OAAA;YAAIoD,SAAS,EAAC,uDAAuD;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxFzD,OAAA;YAAKoD,SAAS,EAAC,oCAAoC;YAAAC,QAAA,gBACjDrD,OAAA;cAAAqD,QAAA,gBACErD,OAAA;gBAAKoD,SAAS,EAAC,+CAA+C;gBAAAC,QAAA,EAAEnD,KAAK,CAACiE;cAAM;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACnFzD,OAAA;gBAAKoD,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC,eACNzD,OAAA;cAAAqD,QAAA,gBACErD,OAAA;gBAAKoD,SAAS,EAAC,+CAA+C;gBAAAC,QAAA,EAAElD,KAAK,CAACgE;cAAM;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACnFzD,OAAA;gBAAKoD,SAAS,EAAC,kCAAkC;gBAAAC,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNzD,OAAA;UAAKoD,SAAS,EAAC,mEAAmE;UAAAC,QAAA,gBAChFrD,OAAA;YACE4D,IAAI,EAAC,QAAQ;YACbF,OAAO,EAAErD,OAAQ;YACjB6D,QAAQ,EAAEtD,MAAO;YACjBwC,SAAS,EAAC,sQAIiD;YAAAC,QAAA,EAC5D;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTzD,OAAA;YACE4D,IAAI,EAAC,QAAQ;YACbM,QAAQ,EAAEtD,MAAM,IAAI,CAACL,QAAQ,CAACE,IAAI,CAACc,IAAI,CAAC,CAAE;YAC1C6B,SAAS,EAAE;AACzB;AACA;AACA,2BAC2BxC,MAAM,IAAI,CAACL,QAAQ,CAACE,IAAI,CAACc,IAAI,CAAC,CAAC,GAC3B,gCAAgC,GAChC,8FAA8F,EACjG;YAAA8B,QAAA,EAEbzC,MAAM,gBACLZ,OAAA;cAAMoD,SAAS,EAAC,kCAAkC;cAAAC,QAAA,gBAChDrD,OAAA;gBAAMoD,SAAS,EAAC;cAAgE;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,aAE1F;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,GAEP;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnD,EAAA,CAhOQL,cAAc;AAAAmE,EAAA,GAAdnE,cAAc;AAkOvB,eAAeA,cAAc;;AAocmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}