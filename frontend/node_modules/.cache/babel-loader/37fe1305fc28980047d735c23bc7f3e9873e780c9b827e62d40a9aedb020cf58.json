{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajat\\\\Desktop\\\\Graph_Visualizer\\\\frontend\\\\src\\\\components\\\\OutputPanel.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OutputPanel({\n  output\n}) {\n  if (!output) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-500\",\n      children: \"Run the algorithm to see output.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n  if (output.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-primary-600\",\n      children: \"Running algorithm...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  if (output.error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 font-bold\",\n      children: [\"Error: \", output.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-primary-600 mb-4 text-lg font-semibold\",\n      children: \"Algorithm Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"bg-gray-100 p-4 rounded-lg text-base text-gray-800\\r max-h-72 overflow-y-auto font-mono leading-relaxed\\r text-xs sm:text-sm md:text-base\\r whitespace-pre-wrap break-words\",\n      children: JSON.stringify(output, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = OutputPanel;\nexport default OutputPanel;\n\n// import React from 'react';\n\n// function OutputPanel({ output }) {\n//   if (!output) return <div style={{ color: '#888' }}>Run the algorithm to see output.</div>;\n//   if (output.loading) return <div style={{ color: '#2563eb' }}>Running algorithm...</div>;\n//   if (output.error) return <div style={{ color: 'red', fontWeight: 'bold' }}>Error: {output.error}</div>;\n\n//   return (\n//     <div>\n//       <h3 style={{ color: '#2563eb', marginBottom: '1rem' }}>Algorithm Output</h3>\n//       <pre style={{\n//         background: '#f3f4f6',\n//         padding: '1rem',\n//         borderRadius: '8px',\n//         fontSize: '1rem',\n//         color: '#222',\n//         maxHeight: '300px',\n//         overflowY: 'auto'\n//       }}>\n//         {JSON.stringify(output, null, 2)}\n//       </pre>\n//     </div>\n//   );\n// }\n\n// export default OutputPanel;\nvar _c;\n$RefreshReg$(_c, \"OutputPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","OutputPanel","output","className","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","error","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Rajat/Desktop/Graph_Visualizer/frontend/src/components/OutputPanel.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction OutputPanel({ output }) {\r\n  if (!output) {\r\n    return (\r\n      <div className=\"text-gray-500\">\r\n        Run the algorithm to see output.\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (output.loading) {\r\n    return (\r\n      <div className=\"text-primary-600\">\r\n        Running algorithm...\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (output.error) {\r\n    return (\r\n      <div className=\"text-red-500 font-bold\">\r\n        Error: {output.error}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <h3 className=\"text-primary-600 mb-4 text-lg font-semibold\">\r\n        Algorithm Output\r\n      </h3>\r\n      <pre className=\"bg-gray-100 p-4 rounded-lg text-base text-gray-800\r\n                     max-h-72 overflow-y-auto font-mono leading-relaxed\r\n                     text-xs sm:text-sm md:text-base\r\n                     whitespace-pre-wrap break-words\">\r\n        {JSON.stringify(output, null, 2)}\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OutputPanel;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n\r\n// function OutputPanel({ output }) {\r\n//   if (!output) return <div style={{ color: '#888' }}>Run the algorithm to see output.</div>;\r\n//   if (output.loading) return <div style={{ color: '#2563eb' }}>Running algorithm...</div>;\r\n//   if (output.error) return <div style={{ color: 'red', fontWeight: 'bold' }}>Error: {output.error}</div>;\r\n  \r\n//   return (\r\n//     <div>\r\n//       <h3 style={{ color: '#2563eb', marginBottom: '1rem' }}>Algorithm Output</h3>\r\n//       <pre style={{\r\n//         background: '#f3f4f6',\r\n//         padding: '1rem',\r\n//         borderRadius: '8px',\r\n//         fontSize: '1rem',\r\n//         color: '#222',\r\n//         maxHeight: '300px',\r\n//         overflowY: 'auto'\r\n//       }}>\r\n//         {JSON.stringify(output, null, 2)}\r\n//       </pre>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default OutputPanel;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAC/B,IAAI,CAACA,MAAM,EAAE;IACX,oBACEF,OAAA;MAAKG,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAE/B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,IAAIN,MAAM,CAACO,OAAO,EAAE;IAClB,oBACET,OAAA;MAAKG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAElC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,IAAIN,MAAM,CAACQ,KAAK,EAAE;IAChB,oBACEV,OAAA;MAAKG,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GAAC,SAC/B,EAACF,MAAM,CAACQ,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,oBACER,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAIG,SAAS,EAAC,6CAA6C;MAAAC,QAAA,EAAC;IAE5D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLR,OAAA;MAAKG,SAAS,EAAC,6KAGgC;MAAAC,QAAA,EAC5CO,IAAI,CAACC,SAAS,CAACV,MAAM,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACK,EAAA,GAtCQZ,WAAW;AAwCpB,eAAeA,WAAW;;AAkB1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}